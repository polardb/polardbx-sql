
- sql: |
    select
      s_acctbal,
      s_name,
      n_name,
      p_partkey,
      p_mfgr,
      s_address,
      s_phone,
      s_comment
    from
      part,
      supplier,
      partsupp,
      nation,
      region
    where
      p_partkey = ps_partkey
      and s_suppkey = ps_suppkey
      and p_size = 15
      and p_type like '%BRASS'
      and s_nationkey = n_nationkey
      and n_regionkey = r_regionkey
      and r_name = 'EUROPE'
      and ps_supplycost = (
        select
                min(ps_supplycost)
            from
          partsupp,
          supplier,
          nation,
          region
        where
          p_partkey = ps_partkey
          and s_suppkey = ps_suppkey
          and s_nationkey = n_nationkey
          and n_regionkey = r_regionkey
          and r_name = 'EUROPE'
      )
    order by
      s_acctbal desc,
      n_name,
      s_name,
      p_partkey;

  plan: |

    memsort(sort="s_acctbal desc,n_name asc,s_name asc,p_partkey asc")
      project(s_acctbal="s_acctbal", s_name="s_name", n_name="n_name", p_partkey="p_partkey", p_mfgr="p_mfgr", s_address="s_address", s_phone="s_phone", s_comment="s_comment")
        hashjoin(condition="ps_suppkey = s_suppkey", type="inner")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].supplier_[00-15],nation,region", shardcount=16, sql="select `supplier`.`s_suppkey`, `supplier`.`s_name`, `supplier`.`s_address`, `supplier`.`s_phone`, `supplier`.`s_acctbal`, `supplier`.`s_comment`, `nation`.`n_name` from `supplier` as `supplier` inner join `nation` as `nation` on (`supplier`.`s_nationkey` = `nation`.`n_nationkey`) inner join `region` as `region` on ((`nation`.`n_regionkey` = `region`.`r_regionkey`) and (`region`.`r_name` = 'europe'))")
          hashjoin(condition="ps_partkey = ps_partkey and ps_partkey = p_partkey and ps_supplycost = min(ps_supplycost)", type="inner")
            hashagg(group="ps_partkey", min(ps_supplycost)="min(ps_supplycost)")
              project(s_suppkey="s_suppkey", ps_partkey="ps_partkey", ps_suppkey="ps_suppkey", ps_supplycost="ps_supplycost")
                hashjoin(condition="ps_suppkey = s_suppkey", type="inner")
                  gather(concurrent=true)
                    logicalview(tables="[0000-0003].partsupp_[00-15]", shardcount=16, sql="select `ps_partkey`, `ps_suppkey`, `ps_supplycost` from `partsupp` as `partsupp`")
                  gather(concurrent=true)
                    logicalview(tables="[0000-0003].supplier_[00-15],nation,region", shardcount=16, sql="select `supplier`.`s_suppkey` from `supplier` as `supplier` inner join `nation` as `nation` on (`supplier`.`s_nationkey` = `nation`.`n_nationkey`) inner join `region` as `region` on ((`nation`.`n_regionkey` = `region`.`r_regionkey`) and (`region`.`r_name` = 'europe'))")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].part_[00-15],partsupp_[00-15]", shardcount=16, sql="select `part`.`p_partkey`, `part`.`p_mfgr`, `partsupp`.`ps_partkey`, `partsupp`.`ps_suppkey`, `partsupp`.`ps_supplycost` from `part` as `part` inner join `partsupp` as `partsupp` on ((`part`.`p_size` = 15) and (`part`.`p_partkey` = `partsupp`.`ps_partkey`) and (`part`.`p_type` like '%brass')) where (`partsupp`.`ps_partkey` = `part`.`p_partkey`)")

- sql: |
    select
      l_orderkey,
      sum(l_extendedprice*(1-l_discount)) as revenue,
      o_orderdate,
      o_shippriority
    from
      customer,
      orders,
      lineitem
    where
      c_mktsegment = 'BUILDING'
      and c_custkey = o_custkey
      and l_orderkey = o_orderkey
      and o_orderdate < '1995-03-15'
      and l_shipdate > '1995-03-15'
    group by
      l_orderkey,
      o_orderdate,
      o_shippriority
    order by
      revenue desc,
      o_orderdate;

  plan: |

    project(l_orderkey="l_orderkey", revenue="revenue", o_orderdate="o_orderdate", o_shippriority="o_shippriority")
      memsort(sort="revenue desc,o_orderdate asc")
        project(l_orderkey="l_orderkey", o_orderdate="o_orderdate", o_shippriority="o_shippriority", revenue="revenue")
          hashagg(group="o_orderdate,o_shippriority,l_orderkey", revenue="sum(__*__)")
            project(c_custkey="c_custkey", o_custkey="o_custkey", o_orderdate="o_orderdate", o_shippriority="o_shippriority", l_orderkey="l_orderkey", __*__="__*__")
              hashjoin(condition="o_custkey = c_custkey", type="inner")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].orders_[00-15],lineitem_[00-15]", shardcount=16, sql="select `orders`.`o_custkey`, `orders`.`o_orderdate`, `orders`.`o_shippriority`, `lineitem`.`l_orderkey`, (`lineitem`.`l_extendedprice` * (1 - `lineitem`.`l_discount`)) as `__*__` from `orders` as `orders` inner join `lineitem` as `lineitem` on ((`orders`.`o_orderkey` = `lineitem`.`l_orderkey`) and (`orders`.`o_orderdate` < '1995-03-15') and (`lineitem`.`l_shipdate` > '1995-03-15'))")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].customer_[00-15]", shardcount=16, sql="select `c_custkey` from `customer` as `customer` where (`c_mktsegment` = 'building')")

- sql: |
    select o_orderpriority, count(*) as order_count from orders where o_orderdate >= '1993-07-01' and o_orderdate < date_add(cast('1993-07-01' as date ), Interval 3 month )
    and exists(
    select
    *
    from
    lineitem
    where
    l_orderkey = o_orderkey
    and l_commitdate < l_receiptdate
    ) group by o_orderpriority order by o_orderpriority;

  plan: |

    memsort(sort="o_orderpriority asc")
      hashagg(group="o_orderpriority", order_count="sum(order_count)")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].orders_[00-15],lineitem_[00-15]", shardcount=16, sql="select `o_orderpriority`, count(*) as `order_count` from `orders` as `orders` where ((`o_orderdate` < date_add(cast('1993-07-01' as date), interval 3 month)) and (`o_orderdate` >= '1993-07-01') and (exists (select `l_orderkey` from `lineitem` as `lineitem` where ((`l_orderkey` = `orders`.`o_orderkey`) and (`l_commitdate` < `l_receiptdate`))))) group by `o_orderpriority`")

- sql: |
    select
    n_name,
    sum(l_extendedprice * (1 - l_discount)) as revenue from
    customer, orders, lineitem, supplier, nation, region
    where
    c_custkey = o_custkey
    and l_orderkey = o_orderkey and l_suppkey = s_suppkey and c_nationkey = s_nationkey and s_nationkey = n_nationkey and n_regionkey = r_regionkey and r_name = 'ASIA'
    and o_orderdate >= '1994-01-01'
    and o_orderdate < date_add(cast('1994-01-01' as date ), Interval 1 year ) group by
    n_name order by
    revenue desc;

  plan: |

    memsort(sort="revenue desc")
      hashagg(group="n_name", revenue="sum(__*__)")
        project(s_suppkey="s_suppkey", s_nationkey="s_nationkey", c_custkey="c_custkey", c_nationkey="c_nationkey", n_nationkey="n_nationkey", n_name="n_name", o_custkey="o_custkey", l_suppkey="l_suppkey", __*__="__*__")
          hashjoin(condition="o_custkey = c_custkey and n_nationkey = s_nationkey and s_nationkey = c_nationkey", type="inner")
            project(s_suppkey="s_suppkey", s_nationkey="s_nationkey", o_custkey="o_custkey", l_suppkey="l_suppkey", __*__="__*__")
              hashjoin(condition="l_suppkey = s_suppkey", type="inner")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].orders_[00-15],lineitem_[00-15]", shardcount=16, sql="select `orders`.`o_custkey`, `lineitem`.`l_suppkey`, (`lineitem`.`l_extendedprice` * (1 - `lineitem`.`l_discount`)) as `__*__` from `orders` as `orders` inner join `lineitem` as `lineitem` on ((`orders`.`o_orderkey` = `lineitem`.`l_orderkey`) and (`orders`.`o_orderdate` >= '1994-01-01') and (`orders`.`o_orderdate` < date_add(cast('1994-01-01' as date), interval 1 year)))")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].supplier_[00-15]", shardcount=16, sql="select `s_suppkey`, `s_nationkey` from `supplier` as `supplier`")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].customer_[00-15],nation,region", shardcount=16, sql="select `customer`.`c_custkey`, `customer`.`c_nationkey`, `nation`.`n_nationkey`, `nation`.`n_name` from `customer` as `customer` inner join `nation` as `nation` on (`customer`.`c_nationkey` = `nation`.`n_nationkey`) inner join `region` as `region` on ((`nation`.`n_regionkey` = `region`.`r_regionkey`) and (`region`.`r_name` = 'asia')) where (`nation`.`n_nationkey` = `customer`.`c_nationkey`)")

- sql: |
    select
    sum(l_extendedprice*l_discount) as revenue
    from
    lineitem
    where
    l_shipdate >= '1994-01-01'
    and l_shipdate < date_add(cast('1994-01-01' as date ), Interval 1 year )
    and l_discount between 0.06 - 0.01 and 0.06 + 0.01 and l_quantity < 24;

  plan: |

    hashagg(revenue="sum(revenue)")
      gather(concurrent=true)
        logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select sum((`l_extendedprice` * `l_discount`)) as `revenue` from `lineitem` as `lineitem` where ((`l_discount` between (0.06 - 0.01) and (0.06 + 0.01)) and (`l_shipdate` < date_add(cast('1994-01-01' as date), interval 1 year)) and (`l_quantity` < 24) and (`l_shipdate` >= '1994-01-01'))")

- sql: |
    select
      supp_nation,
      cust_nation,
      l_year,
      sum(volume) as revenue
    from (
      select
        n1.n_name as supp_nation,
        n2.n_name as cust_nation,
        extract(year from l_shipdate) as l_year,
        l_extendedprice * (1 - l_discount) as volume
      from
        supplier,
        lineitem,
        orders,
        customer,
        nation n1,
        nation n2
      where
        s_suppkey = l_suppkey
        and o_orderkey = l_orderkey
        and c_custkey = o_custkey
        and s_nationkey = n1.n_nationkey
        and c_nationkey = n2.n_nationkey
        and (
          (n1.n_name = 'FRANCE'
          and n2.n_name = 'GERMANY')
          or
          (n1.n_name = 'GERMANY'
          and n2.n_name = 'FRANCE')
          )
        and l_shipdate between '1995-01-01' and '1996-12-31' )
        as shipping
    group by
      supp_nation,
      cust_nation,
      l_year
    order by
      supp_nation,
      cust_nation,
      l_year;

  plan: |

    memsort(sort="n_name asc,n_name0 asc,extract asc")
      hashagg(group="n_name,n_name0,extract", revenue="sum(__*__)")
        project(s_suppkey="s_suppkey", n_name="n_name", n_nationkey0="n_nationkey0", n_name0="n_name0", c_custkey="c_custkey", c_nationkey="c_nationkey", l_suppkey="l_suppkey", o_custkey="o_custkey", extract="extract", __*__="__*__")
          hashjoin(condition="o_custkey = c_custkey and n_nationkey0 = c_nationkey", type="inner")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].customer_[00-15]", shardcount=16, sql="select `c_custkey`, `c_nationkey` from `customer` as `customer`")
            project(s_suppkey="s_suppkey", n_name="n_name", n_nationkey0="n_nationkey0", n_name0="n_name0", l_suppkey="l_suppkey", o_custkey="o_custkey", extract="extract", __*__="__*__")
              hashjoin(condition="l_suppkey = s_suppkey", type="inner")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardcount=16, sql="select `lineitem`.`l_suppkey`, `orders`.`o_custkey`, extract(year from `lineitem`.`l_shipdate`) as `extract`, (`lineitem`.`l_extendedprice` * (1 - `lineitem`.`l_discount`)) as `__*__` from `lineitem` as `lineitem` inner join `orders` as `orders` on ((`lineitem`.`l_orderkey` = `orders`.`o_orderkey`) and (`lineitem`.`l_shipdate` between '1995-01-01' and '1996-12-31'))")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].supplier_[00-15],nation", shardcount=16, sql="select `supplier`.`s_suppkey`, `nation`.`n_name`, `nation0`.`n_nationkey` as `n_nationkey0`, `nation0`.`n_name` as `n_name0` from `supplier` as `supplier` inner join `nation` as `nation` on (`supplier`.`s_nationkey` = `nation`.`n_nationkey`) inner join `nation` as `nation0` on (((`nation`.`n_name` = 'france') and (`nation0`.`n_name` = 'germany')) or ((`nation`.`n_name` = 'germany') and (`nation0`.`n_name` = 'france')))")

- sql: |
    select
    o_year,
    sum(case
    when nation = 'BRAZIL'
    then volume
    else 0
    end) / sum(volume) as mkt_share
    from (
    select
    extract(year from o_orderdate) as o_year, l_extendedprice * (1-l_discount) as volume, n2.n_name as nation
    from
    part,
    supplier, lineitem, orders, customer, nation n1, nation n2, region
    where
    p_partkey = l_partkey
    and s_suppkey = l_suppkey
    and l_orderkey = o_orderkey
    and o_custkey = c_custkey
    and c_nationkey = n1.n_nationkey and n1.n_regionkey = r_regionkey and r_name = 'AMERICA'
    and s_nationkey = n2.n_nationkey
    and o_orderdate between '1995-01-01' and '1996-12-31' and p_type = 'ECONOMY ANODIZED STEEL'
    ) as all_nations group by
    o_year order by
    o_year;

  plan: |

    memsort(sort="o_year asc")
      project(o_year="extract", mkt_share="$f1 / $f2")
        hashagg(group="extract", $f1="sum(case)", $f2="sum(__*__)")
          project(o_custkey="o_custkey", extract="extract", case="case($8, $6, cast(0):decimal(37, 4) not null)", __*__="__*__", c_custkey="c_custkey")
            hashjoin(condition="o_custkey = c_custkey", type="inner")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].customer_[00-15],nation,region", shardcount=16, sql="select `customer`.`c_custkey` from `customer` as `customer` inner join `nation` as `nation` on (`customer`.`c_nationkey` = `nation`.`n_nationkey`) inner join `region` as `region` on ((`nation`.`n_regionkey` = `region`.`r_regionkey`) and (`region`.`r_name` = 'america'))")
              hashjoin(condition="s_suppkey = l_suppkey", type="inner")
                project(p_partkey="p_partkey", l_partkey="l_partkey", l_suppkey="l_suppkey", o_custkey="o_custkey", extract="extract", __*__="__*__")
                  hashjoin(condition="p_partkey = l_partkey", type="inner")
                    gather(concurrent=true)
                      logicalview(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardcount=16, sql="select `lineitem`.`l_partkey`, `lineitem`.`l_suppkey`, `orders`.`o_custkey`, extract(year from `orders`.`o_orderdate`) as `extract`, (`lineitem`.`l_extendedprice` * (1 - `lineitem`.`l_discount`)) as `__*__` from `lineitem` as `lineitem` inner join `orders` as `orders` on ((`lineitem`.`l_orderkey` = `orders`.`o_orderkey`) and (`orders`.`o_orderdate` between '1995-01-01' and '1996-12-31'))")
                    gather(concurrent=true)
                      logicalview(tables="[0000-0003].part_[00-15]", shardcount=16, sql="select `p_partkey` from `part` as `part` where (`p_type` = 'economy anodized steel')")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].supplier_[00-15],nation", shardcount=16, sql="select `supplier`.`s_suppkey`, (`nation`.`n_name` = 'brazil') as `=` from `supplier` as `supplier` inner join `nation` as `nation` on (`supplier`.`s_nationkey` = `nation`.`n_nationkey`)")

- sql: |
    select
      nation,
      o_year,
      sum(amount) as sum_profit
    from (
        select
          n_name as nation,
          extract(year from o_orderdate) as o_year,
          l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
        from
          part,
          supplier,
          lineitem,
          partsupp,
          orders,
          nation
        where
          s_suppkey = l_suppkey
          and ps_suppkey = l_suppkey
          and ps_partkey = l_partkey
          and p_partkey = l_partkey
          and o_orderkey = l_orderkey
          and s_nationkey = n_nationkey
          and p_name like '%green%'
      ) as profit
    group by
      nation,
      o_year
    order by
      nation,
      o_year desc;

  plan: |

    sortagg(group="nation,o_year", sum_profit="sum(amount)")
      memsort(sort="nation asc,o_year desc")
        project(nation="n_name", o_year="extract", amount="__*__ - ps_supplycost * l_quantity")
          hashjoin(condition="ps_partkey = l_partkey and p_partkey = l_partkey and ps_suppkey = l_suppkey and l_suppkey = s_suppkey", type="inner")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardcount=16, sql="select `lineitem`.`l_partkey`, `lineitem`.`l_suppkey`, `lineitem`.`l_quantity`, extract(year from `orders`.`o_orderdate`) as `extract`, (`lineitem`.`l_extendedprice` * (1 - `lineitem`.`l_discount`)) as `__*__` from `lineitem` as `lineitem` inner join `orders` as `orders` on (`lineitem`.`l_orderkey` = `orders`.`o_orderkey`)")
            project(s_suppkey="s_suppkey", n_name="n_name", p_partkey="p_partkey", ps_partkey="ps_partkey", ps_suppkey="ps_suppkey", ps_supplycost="ps_supplycost")
              hashjoin(condition="ps_suppkey = s_suppkey", type="inner")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].part_[00-15],partsupp_[00-15]", shardcount=16, sql="select `part`.`p_partkey`, `partsupp`.`ps_partkey`, `partsupp`.`ps_suppkey`, `partsupp`.`ps_supplycost` from `part` as `part` inner join `partsupp` as `partsupp` on ((`part`.`p_partkey` = `partsupp`.`ps_partkey`) and (`part`.`p_name` like '%green%')) where (`part`.`p_partkey` = `partsupp`.`ps_partkey`)")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].supplier_[00-15],nation", shardcount=16, sql="select `supplier`.`s_suppkey`, `nation`.`n_name` from `supplier` as `supplier` inner join `nation` as `nation` on (`supplier`.`s_nationkey` = `nation`.`n_nationkey`)")

- sql: |
    /*+TDDL:cmd_extra(CBO_RESTRICT_PUSH_JOIN_LIMIT=0, CBO_RESTRICT_PUSH_JOIN_COUNT=0)*/
    select
      nation,
      o_year,
      sum(amount) as sum_profit
    from (
        select
          n_name as nation,
          extract(year from o_orderdate) as o_year,
          l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount
        from
          part,
          supplier,
          lineitem,
          partsupp,
          orders,
          nation
        where
          s_suppkey = l_suppkey
          and ps_suppkey = l_suppkey
          and ps_partkey = l_partkey
          and p_partkey = l_partkey
          and o_orderkey = l_orderkey
          and s_nationkey = n_nationkey
          and p_name like '%green%'
      ) as profit
    group by
      nation,
      o_year
    order by
      nation,
      o_year desc;

  plan: |

    sortagg(group="nation,o_year", sum_profit="sum(amount)")
      project(nation="n_name", o_year="extract", amount="__*__ - ps_supplycost * l_quantity")
        hashjoin(condition="ps_partkey = l_partkey and p_partkey = l_partkey and ps_suppkey = l_suppkey and ps_suppkey = s_suppkey", type="inner")
          memsort(sort="n_name asc,extract desc")
            project(s_suppkey="s_suppkey", n_name="n_name", l_partkey="l_partkey", l_suppkey="l_suppkey", l_quantity="l_quantity", extract="extract", __*__="__*__")
              hashjoin(condition="l_suppkey = s_suppkey", type="inner")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardcount=16, sql="select `lineitem`.`l_partkey`, `lineitem`.`l_suppkey`, `lineitem`.`l_quantity`, extract(year from `orders`.`o_orderdate`) as `extract`, (`lineitem`.`l_extendedprice` * (1 - `lineitem`.`l_discount`)) as `__*__` from `lineitem` as `lineitem` inner join `orders` as `orders` on (`lineitem`.`l_orderkey` = `orders`.`o_orderkey`)")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].supplier_[00-15],nation", shardcount=16, sql="select `supplier`.`s_suppkey`, `nation`.`n_name` from `supplier` as `supplier` inner join `nation` as `nation` on (`supplier`.`s_nationkey` = `nation`.`n_nationkey`)")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].part_[00-15],partsupp_[00-15]", shardcount=16, sql="select `part`.`p_partkey`, `partsupp`.`ps_partkey`, `partsupp`.`ps_suppkey`, `partsupp`.`ps_supplycost` from `part` as `part` inner join `partsupp` as `partsupp` on ((`part`.`p_partkey` = `partsupp`.`ps_partkey`) and (`part`.`p_name` like '%green%')) where (`part`.`p_partkey` = `partsupp`.`ps_partkey`)")

- sql: |
    select
    c_custkey,
    c_name,
    sum(l_extendedprice * (1 - l_discount)) as revenue, c_acctbal,
    n_name,
    c_address,
    c_phone,
    c_comment
    from
    customer,
    orders, lineitem, nation
    where
    c_custkey = o_custkey
    and l_orderkey = o_orderkey
    and o_orderdate >= '1993-10-01'
    and o_orderdate < date_add(cast('1993-10-01' as date ), Interval 3 month ) and l_returnflag = 'R'
    and c_nationkey = n_nationkey
    group by c_custkey,
    c_name, c_acctbal, c_phone, n_name, c_address, c_comment
    order by
    revenue desc;

  plan: |

    project(c_custkey="c_custkey", c_name="c_name", revenue="$f10", c_acctbal="c_acctbal", n_name="n_name", c_address="c_address", c_phone="c_phone", c_comment="c_comment")
      memsort(sort="$f10 desc")
        project(c_custkey="c_custkey", n_name="n_name", c_name="c_name", c_acctbal="c_acctbal", c_phone="c_phone", c_address="c_address", c_comment="c_comment", $f10="$f7 * revenue")
          hashjoin(condition="o_custkey = c_custkey", type="inner")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].customer_[00-15],nation", shardcount=16, sql="select `customer`.`c_custkey`, `nation`.`n_name`, (`customer`.`c_name`) as `c_name`, (`customer`.`c_acctbal`) as `c_acctbal`, (`customer`.`c_phone`) as `c_phone`, (`customer`.`c_address`) as `c_address`, (`customer`.`c_comment`) as `c_comment`, count(*) as `$f7` from `customer` as `customer` inner join `nation` as `nation` on (`customer`.`c_nationkey` = `nation`.`n_nationkey`) group by `customer`.`c_custkey`, `nation`.`n_name`")
            hashagg(group="o_custkey", revenue="sum(revenue)")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].orders_[00-15],lineitem_[00-15]", shardcount=16, sql="select `orders`.`o_custkey`, sum((`lineitem`.`l_extendedprice` * (1 - `lineitem`.`l_discount`))) as `revenue` from `orders` as `orders` inner join `lineitem` as `lineitem` on ((`orders`.`o_orderkey` = `lineitem`.`l_orderkey`) and (`lineitem`.`l_returnflag` = 'r') and (`orders`.`o_orderdate` >= '1993-10-01') and (`orders`.`o_orderdate` < date_add(cast('1993-10-01' as date), interval 3 month))) group by `orders`.`o_custkey`")

- sql: |
    select * from (select
      ps_partkey,
      sum(ps_supplycost * ps_availqty) as value
    from
      partsupp,
      supplier,
      nation
    where
      ps_suppkey = s_suppkey
      and s_nationkey = n_nationkey
      and n_name = 'GERMANY'
    group by
      ps_partkey
      )
    where
      value > (
        select
          sum(ps_supplycost * ps_availqty) * 0.0001
        from
          partsupp,
          supplier,
          nation
        where
          ps_suppkey = s_suppkey
          and s_nationkey = n_nationkey and n_name = 'GERMANY'
      )
    order by
      value desc;

  plan: |

    memsort(sort="value desc")
      project(ps_partkey="ps_partkey", value="value")
        nljoin(condition="value > $f0 * 0.0001", type="inner")
          hashagg(group="ps_partkey", value="sum(__*__)")
            bkajoin(condition="ps_suppkey = s_suppkey", type="inner")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].supplier_[00-15],nation", shardcount=16, sql="select `supplier`.`s_suppkey` from `supplier` as `supplier` inner join `nation` as `nation` on ((`supplier`.`s_nationkey` = `nation`.`n_nationkey`) and (`nation`.`n_name` = 'germany'))")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].partsupp_[00-15]", shardcount=16, sql="select `ps_partkey`, `ps_suppkey`, (`ps_supplycost` * `ps_availqty`) as `__*__` from `partsupp` as `partsupp` force index(`idx_partsupp_suppkey`) where (`ps_suppkey` in (...))")
          hashagg($f0="sum(__*__)")
            bkajoin(condition="ps_suppkey = s_suppkey", type="inner")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].supplier_[00-15],nation", shardcount=16, sql="select `supplier`.`s_suppkey` from `supplier` as `supplier` inner join `nation` as `nation` on ((`supplier`.`s_nationkey` = `nation`.`n_nationkey`) and (`nation`.`n_name` = 'germany'))")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].partsupp_[00-15]", shardcount=16, sql="select `ps_suppkey`, (`ps_supplycost` * `ps_availqty`) as `__*__` from `partsupp` as `partsupp` force index(`idx_partsupp_suppkey`) where (`ps_suppkey` in (...))")

- sql: |
    select
    l_shipmode,
    sum(case
    when o_orderpriority ='1-URGENT'
    or o_orderpriority ='2-HIGH' then 1
    else 0
    end) as high_line_count,
    sum(case
    when o_orderpriority <> '1-URGENT'
    and o_orderpriority <> '2-HIGH' then 1
    else 0
    end) as low_line_count
    from
    orders,
    lineitem where
    o_orderkey = l_orderkey
    and l_shipmode in ('MAIL', 'SHIP') and l_commitdate < l_receiptdate
    and l_shipdate < l_commitdate
    and l_receiptdate >= '1994-01-01'
    and l_receiptdate < date_add(cast('1994-01-01' as date ), Interval 1 year )
    group by l_shipmode
    order by l_shipmode;
  plan: |

    sortagg(group="l_shipmode", high_line_count="sum(high_line_count)", low_line_count="sum(low_line_count)")
      mergesort(sort="l_shipmode asc")
        logicalview(tables="[0000-0003].orders_[00-15],lineitem_[00-15]", shardcount=16, sql="select `lineitem`.`l_shipmode`, sum((case when ((`orders`.`o_orderpriority` = '1-urgent') or (`orders`.`o_orderpriority` = '2-high')) then 1 else 0 end)) as `high_line_count`, sum((case when ((`orders`.`o_orderpriority` <> '1-urgent') and (`orders`.`o_orderpriority` <> '2-high')) then 1 else 0 end)) as `low_line_count` from `orders` as `orders` inner join `lineitem` as `lineitem` on ((`orders`.`o_orderkey` = `lineitem`.`l_orderkey`) and (`lineitem`.`l_shipmode` in('mail', 'ship')) and (`lineitem`.`l_commitdate` < `lineitem`.`l_receiptdate`) and (`lineitem`.`l_shipdate` < `lineitem`.`l_commitdate`) and (`lineitem`.`l_receiptdate` >= '1994-01-01') and (`lineitem`.`l_receiptdate` < date_add(cast('1994-01-01' as date), interval 1 year))) group by `lineitem`.`l_shipmode` order by `lineitem`.`l_shipmode`")

- sql: |
    select
    c_count, count(*) as custdist
    from (

    select
    c_custkey,
    count(o_orderkey) as c_count from
    customer left outer join orders on c_custkey = o_custkey
    and o_comment not like '%special%requests%'
    group by c_custkey

    )as c_orders group by
    c_count order by
    custdist desc, c_count desc;

  plan: |

    memsort(sort="custdist desc,c_count desc")
      hashagg(group="c_count", custdist="count()")
        hashgroupjoin(condition="c_custkey = o_custkey", type="left")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].customer_[00-15]", shardcount=16, sql="select `c_custkey` from `customer` as `customer`")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].orders_[00-15]", shardcount=16, sql="select `o_orderkey`, `o_custkey` from `orders` as `orders` where (`o_comment` not like '%special%requests%')")

- sql: |
    select
      100.00 * sum(
      case when p_type like 'PROMO%'
         then l_extendedprice*(1-l_discount)
         else 0 end) /
         sum(l_extendedprice * (1 - l_discount)) as promo_revenue
    from
      lineitem,
      part
    where
      l_partkey = p_partkey
      and l_shipdate >= '1995-09-01'
      and l_shipdate < date_add(cast('1995-09-01' as date ), Interval 1 year );

  plan: |

    project(promo_revenue="100.00 * $f0 / $f1")
      hashagg($f0="sum($f0)", $f1="sum($f1)")
        project($f0="case($3, $1, cast(0):decimal(37, 4) not null)", $f1="__*__")
          hashjoin(condition="l_partkey = p_partkey", type="inner")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_partkey`, (`l_extendedprice` * (1 - `l_discount`)) as `__*__` from `lineitem` as `lineitem` where ((`l_shipdate` >= '1995-09-01') and (`l_shipdate` < date_add(cast('1995-09-01' as date), interval 1 year)))")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].part_[00-15]", shardcount=16, sql="select `p_partkey`, (`p_type` like 'promo%') as `like` from `part` as `part`")

- sql: |
    select
    s_suppkey,
    s_name, s_address, s_phone, total_revenue
    from
    supplier,
    (select
    l_suppkey as supplier_no,
    sum(l_extendedprice * (1 - l_discount)) as total_revenue
     from
    lineitem where
    l_shipdate >= '1996-01-01'
    and l_shipdate <  date_add(cast('1996-01-01' as date ), Interval 3 month )

    group by
    l_suppkey) as a

    where
    s_suppkey = supplier_no and total_revenue = (

    select
    max(total_revenue)
    from
    (select
    l_suppkey as supplier_no,
    sum(l_extendedprice * (1 - l_discount)) as total_revenue
     from
    lineitem where
    l_shipdate >= '1996-01-01'
    and l_shipdate <  date_add(cast('1996-01-01' as date ), Interval 3 month )

    group by
    l_suppkey) as b
    )
    order by
    s_suppkey;

  plan: |

    project(s_suppkey="s_suppkey", s_name="s_name", s_address="s_address", s_phone="s_phone", total_revenue="total_revenue")
      hashjoin(condition="supplier_no = s_suppkey", type="inner")
        mergesort(sort="s_suppkey asc")
          logicalview(tables="[0000-0003].supplier_[00-15]", shardcount=16, sql="select `s_suppkey`, `s_name`, `s_address`, `s_phone` from `supplier` as `supplier` force index(`primary`) order by `s_suppkey`")
        project(max(total_revenue)="max(total_revenue)", supplier_no="supplier_no", total_revenue="total_revenue")
          hashjoin(condition="max(total_revenue) = total_revenue", type="inner")
            hashagg(group="supplier_no", total_revenue="sum(total_revenue)")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_suppkey` as `supplier_no`, sum((`l_extendedprice` * (1 - `l_discount`))) as `total_revenue` from `lineitem` as `lineitem` where ((`l_shipdate` >= '1996-01-01') and (`l_shipdate` < date_add(cast('1996-01-01' as date), interval 3 month))) group by `l_suppkey`")
            hashagg(max(total_revenue)="max(total_revenue)")
              hashagg(group="supplier_no", total_revenue="sum(total_revenue)")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_suppkey` as `supplier_no`, sum((`l_extendedprice` * (1 - `l_discount`))) as `total_revenue` from `lineitem` as `lineitem` where ((`l_shipdate` >= '1996-01-01') and (`l_shipdate` < date_add(cast('1996-01-01' as date), interval 3 month))) group by `l_suppkey`")

- sql: |
    select
      p_brand,
      p_type,
      p_size,
      count(distinct ps_suppkey) as supplier_cnt
    from
      partsupp,
      part
    where
      p_partkey = ps_partkey
      and p_brand <> 'Brand#45'
      and p_type not like 'MEDIUM POLISHED'
      and p_size in (49, 14, 23, 45, 19, 3, 36, 9)
      and ps_suppkey not in (
        select
          s_suppkey
        from
          supplier
        where
          s_comment like '%Customer%Complaints%'
        )
    group by
      p_brand,
      p_type,
      p_size
    order by
      supplier_cnt desc,
      p_brand,
      p_type,
      p_size;

  plan: |

    memsort(sort="supplier_cnt desc,p_brand asc,p_type asc,p_size asc")
      hashagg(group="p_brand,p_type,p_size", supplier_cnt="count(ps_suppkey)")
        hashagg(group="p_brand,p_type,p_size,ps_suppkey")
          project(p_brand="p_brand", p_type="p_type", p_size="p_size", ps_suppkey="ps_suppkey")
            semihashjoin(condition="ps_suppkey = s_suppkey", type="anti", build="inner")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].partsupp_[00-15],part_[00-15]", shardcount=16, sql="select `partsupp`.`ps_suppkey`, `part`.`p_brand`, `part`.`p_type`, `part`.`p_size` from `partsupp` as `partsupp` inner join `part` as `part` on ((`partsupp`.`ps_partkey` = `part`.`p_partkey`) and (`part`.`p_brand` <> 'brand#45') and (`part`.`p_type` not like 'medium polished') and (`part`.`p_size` in(49, 14, 23, 45, 19, 3, 36, 9)))")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].supplier_[00-15]", shardcount=16, sql="select `s_suppkey` from `supplier` as `supplier` where (`s_comment` like '%customer%complaints%')")

- sql: |
    select
      sum(l_extendedprice) / 7.0 as avg_yearly
    from
      lineitem,
      part
    where
      p_partkey = l_partkey
      and p_brand = 'Brand#23'
      and p_container = 'MED BOX'
      and l_quantity < (
        select
          0.2 * avg(l_quantity)
        from
          lineitem
        where
          l_partkey = p_partkey
      );

  plan: |

    project(avg_yearly="$f0 / 7.0")
      hashagg($f0="sum(l_extendedprice)")
        filter(condition="l_quantity < 0.2 * f16w0$o0")
          hashwindow(p_partkey="p_partkey", l_partkey="l_partkey", l_quantity="l_quantity", l_extendedprice="l_extendedprice", f4w0$o0="window#0avg($2)", reference windows="window#0=window(partition {1} order by [] range between unbounded preceding and unbounded following aggs [avg($2)])")
            bkajoin(condition="l_partkey = p_partkey", type="inner")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].part_[00-15]", shardcount=16, sql="select `p_partkey` from `part` as `part` where ((`p_container` = 'med box') and (`p_brand` = 'brand#23'))")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_partkey`, `l_quantity`, `l_extendedprice` from `lineitem` as `lineitem` force index(`i_l_partkey`) where (`l_partkey` in (...))")

- sql: |
    select
    c_name, c_custkey, o_orderkey, o_orderdate, o_totalprice, sum(l_quantity)
    from
    customer,
    orders,
    lineitem where
    o_orderkey in ( select
    l_orderkey from
    lineitem group by
    l_orderkey having
    sum(l_quantity) > 300
    )
    and c_custkey = o_custkey and o_orderkey = l_orderkey
    group by c_name,
    c_custkey, o_orderkey, o_orderdate, o_totalprice
    order by
    o_totalprice desc,
    o_orderdate;

  plan: |

    project(c_name="c_name", c_custkey="c_custkey", o_orderkey="o_orderkey", o_orderdate="o_orderdate", o_totalprice="o_totalprice", sum(l_quantity)="sum(l_quantity)")
      memsort(sort="o_totalprice desc,o_orderdate asc")
        project(c_custkey="c_custkey", o_orderkey="o_orderkey", o_orderdate="o_orderdate", o_totalprice="o_totalprice", c_name="c_name", sum(l_quantity)="sum(l_quantity)")
          hashjoin(condition="o_custkey = c_custkey", type="inner")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].customer_[00-15]", shardcount=16, sql="select `c_custkey`, `c_name` from `customer` as `customer`")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].orders_[00-15],lineitem_[00-15]", shardcount=16, sql="select `orders`.`o_orderkey`, `orders`.`o_custkey`, (`orders`.`o_orderdate`) as `o_orderdate`, (`orders`.`o_totalprice`) as `o_totalprice`, sum(`lineitem`.`l_quantity`) as `sum(l_quantity)` from `orders` as `orders` inner join `lineitem` as `lineitem` on (`orders`.`o_orderkey` = `lineitem`.`l_orderkey`) where (`orders`.`o_orderkey` in (select `l_orderkey` from (select `l_orderkey`, sum(`l_quantity`) as `$f1` from `lineitem` as `lineitem0` group by `l_orderkey` having (sum(`l_quantity`) > 300)) as `t0`)) group by `orders`.`o_orderkey`, `orders`.`o_custkey`")

- sql: |
    select
    sum(l_extendedprice * (1 - l_discount) ) as revenue
    from
    lineitem,
    part where
    (

    p_partkey = l_partkey
    and p_brand = 'Brand#12'
    and p_container in ( 'SM CASE', 'SM BOX', 'SM PACK', 'SM PKG') and l_quantity >= 1 and l_quantity <= 1 + 10 and p_size between 1 and 5
    and l_shipmode in ('AIR', 'AIR REG')
    and l_shipinstruct = 'DELIVER IN PERSON'

    ) or (

    p_partkey = l_partkey
    and p_brand = 'Brand#23'
    and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK') and l_quantity >= 10 and l_quantity <= 20 + 10 and p_size between 1 and 10
    and l_shipmode in ('AIR', 'AIR REG')
    and l_shipinstruct = 'DELIVER IN PERSON'

    ) or
    (

    p_partkey = l_partkey
    and p_brand = 'Brand#34'
    and p_container in ( 'LG CASE', 'LG BOX', 'LG PACK', 'LG PKG') and l_quantity >= 20 and l_quantity <= 20 + 10 and p_size between 1 and 15
    and l_shipmode in ('AIR', 'AIR REG')
    and l_shipinstruct = 'DELIVER IN PERSON'

    );

  plan: |

    hashagg(revenue="sum(__*__)")
      bkajoin(condition="p_partkey = l_partkey and ((p_partkey = l_partkey and = and in and >= and <= and between asymmetric and in and =) or (p_partkey = l_partkey and =4 and in5 and >=6 and <=7 and between asymmetric6 and in and =) or (p_partkey = l_partkey and =7 and in8 and >=8 and <=7 and between asymmetric9 and in and =))", type="inner")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].part_[00-15]", shardcount=16, sql="select `p_partkey`, (`p_brand` = 'brand#12') as `=`, (`p_container` in('sm case', 'sm box', 'sm pack', 'sm pkg')) as `in`, (`p_size` between 1 and 5) as `between asymmetric`, (`p_brand` = 'brand#23') as `=4`, (`p_container` in('med bag', 'med box', 'med pkg', 'med pack')) as `in5`, (`p_size` between 1 and 10) as `between asymmetric6`, (`p_brand` = 'brand#34') as `=7`, (`p_container` in('lg case', 'lg box', 'lg pack', 'lg pkg')) as `in8`, (`p_size` between 1 and 15) as `between asymmetric9` from `part` as `part` where (((`p_brand` = 'brand#12') and (`p_container` in('sm case', 'sm box', 'sm pack', 'sm pkg')) and (`p_size` between 1 and 5)) or ((`p_brand` = 'brand#23') and (`p_container` in('med bag', 'med box', 'med pkg', 'med pack')) and (`p_size` between 1 and 10)) or ((`p_brand` = 'brand#34') and (`p_container` in('lg case', 'lg box', 'lg pack', 'lg pkg')) and (`p_size` between 1 and 15)))")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_partkey`, (`l_extendedprice` * (1 - `l_discount`)) as `__*__`, (`l_quantity` >= 1) as `>=`, (`l_quantity` <= (1 + 10)) as `<=`, (`l_shipmode` in('air', 'air reg')) as `in`, (`l_shipinstruct` = 'deliver in person') as `=`, (`l_quantity` >= 10) as `>=6`, (`l_quantity` <= (20 + 10)) as `<=7`, (`l_quantity` >= 20) as `>=8` from `lineitem` as `lineitem` where ((((`l_quantity` >= 1) and (`l_quantity` <= (1 + 10)) and (`l_shipmode` in('air', 'air reg')) and (`l_shipinstruct` = 'deliver in person')) or ((`l_quantity` >= 10) and (`l_quantity` <= (20 + 10)) and (`l_shipmode` in('air', 'air reg')) and (`l_shipinstruct` = 'deliver in person')) or ((`l_quantity` >= 20) and (`l_quantity` <= (20 + 10)) and (`l_shipmode` in('air', 'air reg')) and (`l_shipinstruct` = 'deliver in person'))) and (`l_partkey` in (...)))")

- sql: |
    select
      s_name,
      s_address
    from
      supplier,
      nation
    where
      s_suppkey
      in (
        select
          ps_suppkey
        from
          partsupp
        where
          ps_partkey
          in (
            select
              p_partkey
            from
              part
            where
              p_name like 'forest%'
          )
          and ps_availqty > (
            select
              0.5 * sum(l_quantity)
            from
              lineitem
            where
              l_partkey = ps_partkey
              and l_suppkey = ps_suppkey
              and l_shipdate >= '1994-01-01'
              and l_shipdate < date_add(cast('1994-01-01' as date ), Interval 1 year )
            )
      )
      and s_nationkey = n_nationkey
      and n_name = 'CANADA'
    order by
      s_name;

  plan: |

    memsort(sort="s_name asc")
      project(s_name="s_name", s_address="s_address")
        semihashjoin(condition="s_suppkey = ps_suppkey", type="semi", build="inner")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].supplier_[00-15],nation", shardcount=16, sql="select `supplier`.`s_suppkey`, `supplier`.`s_name`, `supplier`.`s_address` from `supplier` as `supplier` inner join `nation` as `nation` on ((`supplier`.`s_nationkey` = `nation`.`n_nationkey`) and (`nation`.`n_name` = 'canada'))")
          project(ps_suppkey="ps_suppkey")
            hashjoin(condition="l_partkey = ps_partkey and l_suppkey = ps_suppkey and ps_availqty > 0.5 * $f2", type="inner")
              hashagg(group="l_partkey,l_suppkey", $f2="sum($f2)")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_partkey`, `l_suppkey`, sum(`l_quantity`) as `$f2` from `lineitem` as `lineitem` where ((`l_shipdate` < date_add(cast('1994-01-01' as date), interval 1 year)) and (`l_shipdate` >= '1994-01-01')) group by `l_partkey`, `l_suppkey`")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].partsupp_[00-15],part_[00-15]", shardcount=16, sql="select `ps_partkey`, `ps_suppkey`, `ps_availqty` from `partsupp` as `partsupp` where (`ps_partkey` in (select `p_partkey` from `part` as `part` where ((`p_name` like 'forest%') and (`partsupp`.`ps_partkey` = `p_partkey`))))")

- sql: |
    select
      s_name,
      count(*) as numwait
    from
      supplier,
      lineitem l1,
      orders,
      nation
    where
      s_suppkey = l1.l_suppkey
      and o_orderkey = l1.l_orderkey
      and o_orderstatus = 'F'
      and l1.l_receiptdate > l1.l_commitdate
      and exists (
          select
            *
          from
            lineitem l2
          where
            l2.l_orderkey = l1.l_orderkey
            and l2.l_suppkey <> l1.l_suppkey
          )
      and not exists (
          select
            *
          from
            lineitem l3
          where
            l3.l_orderkey = l1.l_orderkey
            and l3.l_suppkey <> l1.l_suppkey
            and l3.l_receiptdate > l3.l_commitdate
          )
      and s_nationkey = n_nationkey
      and n_name = 'SAUDI ARABIA'
    group by
      s_name
    order by
      numwait desc,
      s_name;

  plan: |

    memsort(sort="numwait desc,s_name asc")
      hashagg(group="s_name", numwait="count()")
        semibkajoin(condition="l_orderkey = l_orderkey and l_suppkey <> l_suppkey", type="semi")
          project(s_suppkey="s_suppkey", s_name="s_name", l_orderkey="l_orderkey", l_suppkey="l_suppkey")
            hashjoin(condition="l_suppkey = s_suppkey", type="inner")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardcount=16, sql="select `lineitem`.`l_orderkey`, `lineitem`.`l_suppkey` from `lineitem` as `lineitem` inner join `orders` as `orders` on ((`lineitem`.`l_orderkey` = `orders`.`o_orderkey`) and (`orders`.`o_orderstatus` = 'f') and (`lineitem`.`l_receiptdate` > `lineitem`.`l_commitdate`)) where (not exists (select `l_orderkey` from `lineitem` as `lineitem0` where ((`l_receiptdate` > `l_commitdate`) and (`l_orderkey` = `lineitem`.`l_orderkey`) and (`l_suppkey` <> `lineitem`.`l_suppkey`))))")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].supplier_[00-15],nation", shardcount=16, sql="select `supplier`.`s_suppkey`, `supplier`.`s_name` from `supplier` as `supplier` inner join `nation` as `nation` on ((`supplier`.`s_nationkey` = `nation`.`n_nationkey`) and (`nation`.`n_name` = 'saudi arabia'))")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey`, `l_suppkey` from `lineitem` as `lineitem` force index(`primary`) where (`l_orderkey` in (...))")

- sql: |
    /*+TDDL:cmd_extra(CBO_RESTRICT_PUSH_JOIN_LIMIT=0, CBO_RESTRICT_PUSH_JOIN_COUNT=0)*/
    select
      s_name,
      count(*) as numwait
    from
      supplier,
      lineitem l1,
      orders,
      nation
    where
      s_suppkey = l1.l_suppkey
      and o_orderkey = l1.l_orderkey
      and o_orderstatus = 'F'
      and l1.l_receiptdate > l1.l_commitdate
      and exists (
          select
            *
          from
            lineitem l2
          where
            l2.l_orderkey = l1.l_orderkey
            and l2.l_suppkey <> l1.l_suppkey
          )
      and not exists (
          select
            *
          from
            lineitem l3
          where
            l3.l_orderkey = l1.l_orderkey
            and l3.l_suppkey <> l1.l_suppkey
            and l3.l_receiptdate > l3.l_commitdate
          )
      and s_nationkey = n_nationkey
      and n_name = 'SAUDI ARABIA'
    group by
      s_name
    order by
      numwait desc,
      s_name;

  plan: |

    memsort(sort="numwait desc,s_name asc")
      hashagg(group="s_name", numwait="count()")
        semibkajoin(condition="l_orderkey = l_orderkey and l_suppkey <> l_suppkey", type="semi")
          semihashjoin(condition="l_orderkey = l_orderkey and l_suppkey <> l_suppkey", type="anti", build="inner")
            project(s_suppkey="s_suppkey", s_name="s_name", l_orderkey="l_orderkey", l_suppkey="l_suppkey")
              hashjoin(condition="l_suppkey = s_suppkey", type="inner")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardcount=16, sql="select `lineitem`.`l_orderkey`, `lineitem`.`l_suppkey` from `lineitem` as `lineitem` inner join `orders` as `orders` on ((`lineitem`.`l_orderkey` = `orders`.`o_orderkey`) and (`orders`.`o_orderstatus` = 'f') and (`lineitem`.`l_receiptdate` > `lineitem`.`l_commitdate`))")
                gather(concurrent=true)
                  logicalview(tables="[0000-0003].supplier_[00-15],nation", shardcount=16, sql="select `supplier`.`s_suppkey`, `supplier`.`s_name` from `supplier` as `supplier` inner join `nation` as `nation` on ((`supplier`.`s_nationkey` = `nation`.`n_nationkey`) and (`nation`.`n_name` = 'saudi arabia'))")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey`, `l_suppkey` from `lineitem` as `lineitem` where (`l_receiptdate` > `l_commitdate`)")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey`, `l_suppkey` from `lineitem` as `lineitem` force index(`primary`) where (`l_orderkey` in (...))")

- sql: |
    select count(*) from orders;

  plan: |

    hashagg(count(*)="sum(count(*))")
      gather(concurrent=true)
        logicalview(tables="[0000-0003].orders_[00-15]", shardcount=16, sql="select count(*) as `count(*)` from `orders` as `orders`")

- sql: |
    select * from lineitem order by l_orderkey desc, l_linenumber limit 2;

  plan: |

    mergesort(sort="l_orderkey desc,l_linenumber asc", offset=0, fetch=2)
      logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` from `lineitem` as `lineitem` force index(`primary`) order by `l_orderkey` desc, `l_linenumber` limit 2")

- sql: |
    select * from lineitem order by l_linenumber limit 2;

  plan: |

    mergesort(sort="l_linenumber asc", offset=0, fetch=2)
      logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` from `lineitem` as `lineitem` order by `l_linenumber` limit 2")

- sql: |
    select * from lineitem order by l_orderkey limit 100000000,2;

  plan: |

    mergesort(sort="l_orderkey asc", offset=100000000, fetch=2)
      logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` from `lineitem` as `lineitem` force index(`primary`) order by `l_orderkey` limit 100000002")

- sql: |
    select * from lineitem limit 100000000,2;

  plan: |

    mergesort(sort="", offset=100000000, fetch=2)
      logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` from `lineitem` as `lineitem` limit 100000002")

- sql: |
    select * from lineitem ignore index(primary) where l_orderkey = 1;

  plan: |

    phytableoperation(tables="optest_0000.[lineitem_00]", sql="select `lineitem`.`l_orderkey`, `lineitem`.`l_partkey`, `lineitem`.`l_suppkey`, `lineitem`.`l_linenumber`, `lineitem`.`l_quantity`, `lineitem`.`l_extendedprice`, `lineitem`.`l_discount`, `lineitem`.`l_tax`, `lineitem`.`l_returnflag`, `lineitem`.`l_linestatus`, `lineitem`.`l_shipdate`, `lineitem`.`l_commitdate`, `lineitem`.`l_receiptdate`, `lineitem`.`l_shipinstruct`, `lineitem`.`l_shipmode`, `lineitem`.`l_comment` from ? as `lineitem` ignore index(primary) where (`lineitem`.`l_orderkey` = 1)")

- sql: |
    select * from lineitem ignore index(primary) join orders on o_orderkey =  l_orderkey where o_custkey = 1;

  plan: |

    gather(concurrent=true)
      logicalview(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardcount=16, sql="select `lineitem`.`l_orderkey`, `lineitem`.`l_partkey`, `lineitem`.`l_suppkey`, `lineitem`.`l_linenumber`, `lineitem`.`l_quantity`, `lineitem`.`l_extendedprice`, `lineitem`.`l_discount`, `lineitem`.`l_tax`, `lineitem`.`l_returnflag`, `lineitem`.`l_linestatus`, `lineitem`.`l_shipdate`, `lineitem`.`l_commitdate`, `lineitem`.`l_receiptdate`, `lineitem`.`l_shipinstruct`, `lineitem`.`l_shipmode`, `lineitem`.`l_comment`, `orders`.`o_orderkey`, `orders`.`o_custkey`, `orders`.`o_orderstatus`, `orders`.`o_totalprice`, `orders`.`o_orderdate`, `orders`.`o_orderpriority`, `orders`.`o_clerk`, `orders`.`o_shippriority`, `orders`.`o_comment` from `lineitem` as `lineitem` ignore index(primary) inner join `orders` as `orders` on ((`orders`.`o_custkey` = 1) and (`lineitem`.`l_orderkey` = `orders`.`o_orderkey`))")

- sql: |
    select * from lineitem ignore index(primary) order by l_orderkey desc, l_linenumber desc,l_orderkey limit 2;

  plan: |

    mergesort(sort="l_orderkey desc,l_linenumber desc,l_orderkey asc", offset=0, fetch=2)
      logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` from `lineitem` as `lineitem` ignore index(primary) order by `l_orderkey` desc, `l_linenumber` desc, `l_orderkey` limit 2")

- sql: |
    /*+TDDL:cmd_extra(enable_push_agg=false,enable_cbo_push_agg=false)*/
    select distinct l_orderkey from lineitem order by l_orderkey;

  plan: |

    sortagg(group="l_orderkey")
      mergesort(sort="l_orderkey asc")
        logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey` from `lineitem` as `lineitem` force index(`primary`) order by `l_orderkey`")

- sql: |
    select * from orders join customer on o_custkey = c_custkey where  o_orderstatus = 0 and  o_orderstatus = 0 and  o_orderstatus = 0 and  o_orderstatus = 0 and  o_orderstatus = 0 and  o_orderstatus = 0 and  o_orderstatus = 0 and  o_orderstatus = 0 and  o_orderstatus = 0 and  o_orderstatus = 0 and  o_orderstatus = 0 and  o_orderstatus = 0;

  plan: |

    hashjoin(condition="o_custkey = c_custkey", type="inner")
      gather(concurrent=true)
        logicalview(tables="[0000-0003].orders_[00-15]", shardcount=16, sql="select `o_orderkey`, `o_custkey`, `o_orderstatus`, `o_totalprice`, `o_orderdate`, `o_orderpriority`, `o_clerk`, `o_shippriority`, `o_comment` from `orders` as `orders` where (`o_orderstatus` = 0)")
      gather(concurrent=true)
        logicalview(tables="[0000-0003].customer_[00-15]", shardcount=16, sql="select `c_custkey`, `c_name`, `c_address`, `c_nationkey`, `c_phone`, `c_acctbal`, `c_mktsegment`, `c_comment` from `customer` as `customer`")

- sql: |
    select * from orders join customer on o_custkey = c_custkey where o_clerk = 'Clerk#000000951' and o_orderdate = '1996-01-02'

  plan: |

    bkajoin(condition="o_custkey = c_custkey", type="inner")
      gather(concurrent=true)
        logicalview(tables="[0000-0003].orders_[00-15]", shardcount=16, sql="select `o_orderkey`, `o_custkey`, `o_orderstatus`, `o_totalprice`, `o_orderdate`, `o_orderpriority`, `o_clerk`, `o_shippriority`, `o_comment` from `orders` as `orders` where ((`o_clerk` = 'clerk#000000951') and (`o_orderdate` = '1996-01-02'))")
      gather(concurrent=true)
        logicalview(tables="[0000-0003].customer_[00-15]", shardcount=16, sql="select `c_custkey`, `c_name`, `c_address`, `c_nationkey`, `c_phone`, `c_acctbal`, `c_mktsegment`, `c_comment` from `customer` as `customer` force index(`primary`) where (`c_custkey` in (...))")

- sql: |
    select * from orders where 1=1
  plan: |

    gather(concurrent=true)
      logicalview(tables="[0000-0003].orders_[00-15]", shardcount=16, sql="select `o_orderkey`, `o_custkey`, `o_orderstatus`, `o_totalprice`, `o_orderdate`, `o_orderpriority`, `o_clerk`, `o_shippriority`, `o_comment` from `orders` as `orders` where (1 = 1)")

- sql: |
    /*+TDDL:cmd_extra(workload_type=ap)*/ select 1 from (select sum(l_orderkey)as t,l_partkey  from lineitem group by l_partkey) as ll where ll.l_partkey=12;
  plan: |

    project(1="1")
      hashagg(group="l_partkey", t="sum(t)")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_partkey`, sum(`l_orderkey`) as `t` from `lineitem` as `lineitem` force index(`i_l_partkey`) where (`l_partkey` = 12) group by `l_partkey`")
