
- sql: |
    select * from rng_tbl a where 3 between a and b
  plan: |
    gather(concurrent=true)
      logicalview(tables="rng_tbl[p1,p2,p3,p4,p5,p6,p7,p8,p9,p10]", shardcount=10, sql="select `a`, `b`, `c`, `d`, `e` from `rng_tbl` as `rng_tbl` where (3 between `a` and `b`)")


- sql: |
    select * from rng_tbl a where (a,b,3) in ((1,2,d),(4,5,6))
  plan: |
    gather(concurrent=true)
      logicalview(tables="rng_tbl[p1,p2,p3,p4,p5,p6,p7,p8,p9,p10]", shardcount=10, sql="select `a`, `b`, `c`, `d`, `e` from `rng_tbl` as `rng_tbl` where (((`a`, `b`, 3)) in((1, 2, `d`),(4, 5, 6)))")


- sql: |
    select * from rng_tbl a where (a,b,c) in ((1,2,d),(4,5,6))
  plan: |
    gather(concurrent=true)
      logicalview(tables="rng_tbl[p1,p2,p3,p4,p5,p6,p7,p8,p9,p10]", shardcount=10, sql="select `a`, `b`, `c`, `d`, `e` from `rng_tbl` as `rng_tbl` where (((`a`, `b`, `c`)) in((1, 2, `d`),(4, 5, 6)))")

- sql: |
    select * from rng_tbl a where (b, e, c) not in ((1,2,3),(4,5,6))
  plan: |
    gather(concurrent=true)
      logicalview(tables="rng_tbl[p1,p2,p3,p4,p5,p6,p7,p8,p9,p10]", shardcount=10, sql="select `a`, `b`, `c`, `d`, `e` from `rng_tbl` as `rng_tbl` where (((`b`, `e`, `c`)) not in((1, 2, 3),(4, 5, 6)))")
 

- sql: |
    select * from rng_col_tbl a where (d,b,a) in ((10000,2000,300),(4,5000,600))
  plan: |
    gather(concurrent=true)
      logicalview(tables="rng_col_tbl[p3,p6]", shardcount=2, sql="select `a`, `b`, `c`, `d`, `e` from `rng_col_tbl` as `rng_col_tbl` where (((`d`, `b`, `a`)) in((10000, 2000, 300),(4, 5000, 600)))")


- sql: |
    select * from rng_col_tbl a where (a,b) in ((300,2000), (600,5000))
  plan: |
    gather(concurrent=true)
      logicalview(tables="rng_col_tbl[p3,p6]", shardcount=2, sql="select `a`, `b`, `c`, `d`, `e` from `rng_col_tbl` as `rng_col_tbl` where (((`a`, `b`)) in((300, 2000),(600, 5000)))")


- sql: |
    select * from rng_tbl a where (b, e, c) in ((1,2,3),(4,5,6))
  plan: |
    gather(concurrent=true)
      logicalview(tables="rng_tbl[p1,p2,p3,p4,p5,p6,p7,p8,p9,p10]", shardcount=10, sql="select `a`, `b`, `c`, `d`, `e` from `rng_tbl` as `rng_tbl` where (((`b`, `e`, `c`)) in((1, 2, 3),(4, 5, 6)))") 

- sql: |
    select a,c from random_pruning_test where (c,d,a) in ((100,2,100),(400,5,400));

  plan: |
    gather(concurrent=true)
      logicalview(tables="random_pruning_test[p1,p2,p4,p5]", shardcount=4, sql="select `a`, `c` from `random_pruning_test` as `random_pruning_test` where (((`c`, `d`, `a`)) in((100, 2, 100),(400, 5, 400)))")


- sql: |
    select * from t_key a where (pk2, pk1, pk3) in ((19,2,11),(20,3,12))

  plan: |
    gather(concurrent=true)
      logicalview(tables="t_key[p2,p4]", shardcount=2, sql="select `pk1`, `pk2`, `pk3` from `t_key` as `t_key` where (((`pk2`, `pk1`, `pk3`)) in((19, 2, 11),(20, 3, 12)))")

- sql: |
    select * from rng_tbl a where (b, a, c) < (1,2,3)
  plan: |
    gather(concurrent=true)
      logicalview(tables="rng_tbl[p1,p2,p3,p4,p5,p6,p7,p8,p9,p10]", shardcount=10, sql="select `a`, `b`, `c`, `d`, `e` from `rng_tbl` as `rng_tbl` where ((`b`, `a`, `c`) <(1, 2, 3))")

#- sql: |
#    select * from rng_tbl a where (b, a, c) between (1,2,3) and  (6,7,8)
#  plan: |
#    toBeAdd !!! notice: should throw error like mysql 
- sql: |
    select * from rng_tbl a where (a,b,c) != (4,5,6)
  plan: |
    gather(concurrent=true)
      logicalview(tables="rng_tbl[p1,p2,p3,p4,p5,p6,p7,p8,p9,p10]", shardcount=10, sql="select `a`, `b`, `c`, `d`, `e` from `rng_tbl` as `rng_tbl` where ((`a`, `b`, `c`) <>(4, 5, 6))")

- sql: |
    select * from rng_col_tbl a where (a,b,c) <= (100,1000,10000)
  plan: |
    gather(concurrent=true)
      logicalview(tables="rng_col_tbl[p1,p2]", shardcount=2, sql="select `a`, `b`, `c`, `d`, `e` from `rng_col_tbl` as `rng_col_tbl` where ((`a`, `b`, `c`) <=(100, 1000, 10000))")

- sql: |
    select * from rng_col_tbl a where (a,b,c) > (100,1000,10000)
  plan: |
    gather(concurrent=true)
      logicalview(tables="rng_col_tbl[p2,p3,p4,p5,p6,p7,p8,p9,p10]", shardcount=9, sql="select `a`, `b`, `c`, `d`, `e` from `rng_col_tbl` as `rng_col_tbl` where ((`a`, `b`, `c`) >(100, 1000, 10000))")
