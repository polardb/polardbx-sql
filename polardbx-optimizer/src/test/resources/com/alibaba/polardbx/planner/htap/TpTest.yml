- sql: |
    select * from lineitem where l_orderkey in (select o_orderkey from orders where o_custkey = 1);

  plan: |
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardCount=16, sql="SELECT `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` FROM `lineitem` AS `lineitem` WHERE (`l_orderkey` IN (SELECT `o_orderkey` FROM `orders` AS `orders` WHERE (`o_custkey` = 1)))")

- sql: |
   select * from orders where o_orderkey in (select l_orderkey from lineitem where l_partkey = 1);

  plan: |
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].orders_[00-15],lineitem_[00-15]", shardCount=16, sql="SELECT `o_orderkey`, `o_custkey`, `o_orderstatus`, `o_totalprice`, `o_orderdate`, `o_orderpriority`, `o_clerk`, `o_shippriority`, `o_comment` FROM `orders` AS `orders` WHERE (`o_orderkey` IN (SELECT `l_orderkey` FROM `lineitem` AS `lineitem` WHERE (`l_partkey` = 1)))")

- sql: |
    select * from orders where o_orderkey in (select l_orderkey from lineitem where l_partkey = 1);

  plan: |
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].orders_[00-15],lineitem_[00-15]", shardCount=16, sql="SELECT `o_orderkey`, `o_custkey`, `o_orderstatus`, `o_totalprice`, `o_orderdate`, `o_orderpriority`, `o_clerk`, `o_shippriority`, `o_comment` FROM `orders` AS `orders` WHERE (`o_orderkey` IN (SELECT `l_orderkey` FROM `lineitem` AS `lineitem` WHERE (`l_partkey` = 1)))")

# until now do not support this optimization
#- sql: |
#    select * from orders where o_orderkey in (select l_orderkey from lineitem join part on l_partkey = p_partkey)
#    and o_custkey = 1;
#
#  plan: |
#    MaterializedSemiJoin(condition="o_orderkey = l_orderkey", type="semi")
#      Gather(concurrent=true)
#        LogicalView(tables="[0000-0003].orders_[00-15]", shardCount=16, sql="SELECT `o_orderkey`, `o_custkey`, `o_orderstatus`, `o_totalprice`, `o_orderdate`, `o_orderpriority`, `o_clerk`, `o_shippriority`, `o_comment` FROM `orders` AS `orders` WHERE (`o_orderkey` IN (...))")
#      Project(l_orderkey="l_orderkey")
#        BKAJoin(condition="l_partkey = p_partkey", type="inner")
#          Gather(concurrent=true)
#            LogicalView(tables="[0000-0003].lineitem_[00-15]", shardCount=16, sql="SELECT `l_orderkey`, `l_partkey` FROM `lineitem` AS `lineitem` WHERE (`l_suppkey` = 1)")
#          Gather(concurrent=true)
#            LogicalView(tables="[0000-0003].part_[00-15]", shardCount=16, sql="SELECT `p_partkey` FROM `part` AS `part` WHERE (`p_partkey` IN (...))")

- sql: |
    select o_orderkey from orders where o_orderkey in (select l_orderkey from lineitem join supplier on l_suppkey = s_suppkey where l_partkey = 1);

  plan: |
    MaterializedSemiJoin(condition="o_orderkey = l_orderkey", type="semi")
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].orders_[00-15]", shardCount=16, sql="SELECT `o_orderkey` FROM `orders` AS `orders` WHERE (`o_orderkey` IN (...))")
      Project(l_orderkey="l_orderkey")
        BKAJoin(condition="l_suppkey = s_suppkey", type="inner")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].lineitem_[00-15]", shardCount=16, sql="SELECT `l_orderkey`, `l_suppkey` FROM `lineitem` AS `lineitem` WHERE (`l_partkey` = 1)")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].supplier_[00-15]", shardCount=16, sql="SELECT `s_suppkey` FROM `supplier` AS `supplier` WHERE (`s_suppkey` IN (...))")

- sql: |
    select o_orderkey from orders where o_orderkey in (select l_orderkey from lineitem join part on l_partkey =
    p_partkey where l_partkey = 1 ) and o_custkey = 1;

  plan: |
    MaterializedSemiJoin(condition="o_orderkey = l_orderkey", type="semi")
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].orders_[00-15]", shardCount=16, sql="SELECT `o_orderkey` FROM `orders` AS `orders` WHERE ((`o_custkey` = 1) AND (`o_orderkey` IN (...)))")
      Project(l_orderkey="l_orderkey")
        BKAJoin(condition="l_partkey = p_partkey", type="inner")
          LogicalView(tables="optest_0000.part_01", sql="SELECT `p_partkey` FROM `part` AS `part` WHERE (`p_partkey` = 1)")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].lineitem_[00-15]", shardCount=16, sql="SELECT `l_orderkey`, `l_partkey` FROM `lineitem` AS `lineitem` WHERE ((`l_partkey` = 1) AND (`l_partkey` IN (...)))")

- sql: |
    select * from (select o_orderkey from orders) join (select l_orderkey from lineitem where l_partkey = 1) a on a
    .l_orderkey = o_orderkey;

  plan: |
    gather(concurrent=true)
      logicalview(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardcount=16, sql="select `orders`.`o_orderkey`, `lineitem`.`l_orderkey` from `lineitem` as `lineitem` inner join `orders` as `orders` on (`lineitem`.`l_orderkey` = `orders`.`o_orderkey`) where (`lineitem`.`l_partkey` = 1)")

- sql: |
    select * from lineitem join orders on l_orderkey = o_orderkey where o_custkey = 1;

  plan: |
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardCount=16, sql="SELECT `lineitem`.`l_orderkey`, `lineitem`.`l_partkey`, `lineitem`.`l_suppkey`, `lineitem`.`l_linenumber`, `lineitem`.`l_quantity`, `lineitem`.`l_extendedprice`, `lineitem`.`l_discount`, `lineitem`.`l_tax`, `lineitem`.`l_returnflag`, `lineitem`.`l_linestatus`, `lineitem`.`l_shipdate`, `lineitem`.`l_commitdate`, `lineitem`.`l_receiptdate`, `lineitem`.`l_shipinstruct`, `lineitem`.`l_shipmode`, `lineitem`.`l_comment`, `orders`.`o_orderkey`, `orders`.`o_custkey`, `orders`.`o_orderstatus`, `orders`.`o_totalprice`, `orders`.`o_orderdate`, `orders`.`o_orderpriority`, `orders`.`o_clerk`, `orders`.`o_shippriority`, `orders`.`o_comment` FROM `lineitem` AS `lineitem` INNER JOIN `orders` AS `orders` ON ((`orders`.`o_custkey` = 1) AND (`lineitem`.`l_orderkey` = `orders`.`o_orderkey`))")
- sql: |
    select * from part, lineitem, orders, supplier where l_orderkey = o_orderkey and l_partkey = p_partkey and l_suppkey = s_suppkey and o_custkey = 1;

  plan: |
    Project(p_partkey="p_partkey", p_name="p_name", p_mfgr="p_mfgr", p_brand="p_brand", p_type="p_type", p_size="p_size", p_container="p_container", p_retailprice="p_retailprice", p_comment="p_comment", l_orderkey="l_orderkey", l_partkey="l_partkey", l_suppkey="l_suppkey", l_linenumber="l_linenumber", l_quantity="l_quantity", l_extendedprice="l_extendedprice", l_discount="l_discount", l_tax="l_tax", l_returnflag="l_returnflag", l_linestatus="l_linestatus", l_shipdate="l_shipdate", l_commitdate="l_commitdate", l_receiptdate="l_receiptdate", l_shipinstruct="l_shipinstruct", l_shipmode="l_shipmode", l_comment="l_comment", o_orderkey="o_orderkey", o_custkey="o_custkey", o_orderstatus="o_orderstatus", o_totalprice="o_totalprice", o_orderdate="o_orderdate", o_orderpriority="o_orderpriority", o_clerk="o_clerk", o_shippriority="o_shippriority", o_comment="o_comment", s_suppkey="s_suppkey", s_name="s_name", s_address="s_address", s_nationkey="s_nationkey", s_phone="s_phone", s_acctbal="s_acctbal", s_comment="s_comment")
      BKAJoin(condition="p_partkey = l_partkey", type="inner")
        BKAJoin(condition="l_suppkey = s_suppkey", type="inner")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardCount=16, sql="SELECT `lineitem`.`l_orderkey`, `lineitem`.`l_partkey`, `lineitem`.`l_suppkey`, `lineitem`.`l_linenumber`, `lineitem`.`l_quantity`, `lineitem`.`l_extendedprice`, `lineitem`.`l_discount`, `lineitem`.`l_tax`, `lineitem`.`l_returnflag`, `lineitem`.`l_linestatus`, `lineitem`.`l_shipdate`, `lineitem`.`l_commitdate`, `lineitem`.`l_receiptdate`, `lineitem`.`l_shipinstruct`, `lineitem`.`l_shipmode`, `lineitem`.`l_comment`, `orders`.`o_orderkey`, `orders`.`o_custkey`, `orders`.`o_orderstatus`, `orders`.`o_totalprice`, `orders`.`o_orderdate`, `orders`.`o_orderpriority`, `orders`.`o_clerk`, `orders`.`o_shippriority`, `orders`.`o_comment` FROM `lineitem` AS `lineitem` INNER JOIN `orders` AS `orders` ON ((`orders`.`o_custkey` = 1) AND (`lineitem`.`l_orderkey` = `orders`.`o_orderkey`))")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].supplier_[00-15]", shardCount=16, sql="SELECT `s_suppkey`, `s_name`, `s_address`, `s_nationkey`, `s_phone`, `s_acctbal`, `s_comment` FROM `supplier` AS `supplier` WHERE (`s_suppkey` IN (...))")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].part_[00-15]", shardCount=16, sql="SELECT `p_partkey`, `p_name`, `p_mfgr`, `p_brand`, `p_type`, `p_size`, `p_container`, `p_retailprice`, `p_comment` FROM `part` AS `part` WHERE (`p_partkey` IN (...))")

- sql: |
    select * from part, lineitem, orders where l_orderkey = o_orderkey and l_partkey = p_partkey and o_custkey = 1;

  plan: |
    Project(p_partkey="p_partkey", p_name="p_name", p_mfgr="p_mfgr", p_brand="p_brand", p_type="p_type", p_size="p_size", p_container="p_container", p_retailprice="p_retailprice", p_comment="p_comment", l_orderkey="l_orderkey", l_partkey="l_partkey", l_suppkey="l_suppkey", l_linenumber="l_linenumber", l_quantity="l_quantity", l_extendedprice="l_extendedprice", l_discount="l_discount", l_tax="l_tax", l_returnflag="l_returnflag", l_linestatus="l_linestatus", l_shipdate="l_shipdate", l_commitdate="l_commitdate", l_receiptdate="l_receiptdate", l_shipinstruct="l_shipinstruct", l_shipmode="l_shipmode", l_comment="l_comment", o_orderkey="o_orderkey", o_custkey="o_custkey", o_orderstatus="o_orderstatus", o_totalprice="o_totalprice", o_orderdate="o_orderdate", o_orderpriority="o_orderpriority", o_clerk="o_clerk", o_shippriority="o_shippriority", o_comment="o_comment")
      BKAJoin(condition="l_partkey = p_partkey", type="inner")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardCount=16, sql="SELECT `lineitem`.`l_orderkey`, `lineitem`.`l_partkey`, `lineitem`.`l_suppkey`, `lineitem`.`l_linenumber`, `lineitem`.`l_quantity`, `lineitem`.`l_extendedprice`, `lineitem`.`l_discount`, `lineitem`.`l_tax`, `lineitem`.`l_returnflag`, `lineitem`.`l_linestatus`, `lineitem`.`l_shipdate`, `lineitem`.`l_commitdate`, `lineitem`.`l_receiptdate`, `lineitem`.`l_shipinstruct`, `lineitem`.`l_shipmode`, `lineitem`.`l_comment`, `orders`.`o_orderkey`, `orders`.`o_custkey`, `orders`.`o_orderstatus`, `orders`.`o_totalprice`, `orders`.`o_orderdate`, `orders`.`o_orderpriority`, `orders`.`o_clerk`, `orders`.`o_shippriority`, `orders`.`o_comment` FROM `lineitem` AS `lineitem` INNER JOIN `orders` AS `orders` ON ((`orders`.`o_custkey` = 1) AND (`lineitem`.`l_orderkey` = `orders`.`o_orderkey`))")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].part_[00-15]", shardCount=16, sql="SELECT `p_partkey`, `p_name`, `p_mfgr`, `p_brand`, `p_type`, `p_size`, `p_container`, `p_retailprice`, `p_comment` FROM `part` AS `part` WHERE (`p_partkey` IN (...))")

- sql: |
    /*+TDDL:cmd_extra(enable_push_join=false)*/
    select * from orders where exists (select * from lineitem where l_orderkey = o_orderkey and l_partkey = 1 and L_SUPPKEY = 2);

  plan: |
    MaterializedSemiJoin(condition="l_orderkey = o_orderkey", type="semi")
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].orders_[00-15]", shardCount=16, sql="SELECT `o_orderkey`, `o_custkey`, `o_orderstatus`, `o_totalprice`, `o_orderdate`, `o_orderpriority`, `o_clerk`, `o_shippriority`, `o_comment` FROM `orders` AS `orders` WHERE (`o_orderkey` IN (...))")
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].lineitem_[00-15]", shardCount=16, sql="SELECT `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` FROM `lineitem` AS `lineitem` WHERE ((`l_partkey` = 1) AND (`l_suppkey` = 2))")

- sql: |
    select * from X join Y on X.b = Y.b where X.id = 1 and Y.a = 2

  plan: |
    BKAJoin(condition="b = b", type="inner")
      LogicalView(tables="optest_0000.X_01", sql="SELECT `b`, `id` FROM `X` AS `X` WHERE (`id` = 1)")
      Gather(concurrent=true)
        LogicalView(tables="optest_0002.Y_[0-3]", shardCount=4, sql="SELECT `a`, `b` FROM `Y` AS `Y` WHERE ((`a` = 2) AND (`b` IN (...)))")

- sql: |
    select * from lineitem_index_reverse where l_linenumber = 1 and l_orderkey in (1,2,3);

  plan: |
    gather(concurrent=true)
      logicalview(tables="[0001-0003].lineitem_index_reverse", shardcount=3, sql="select `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` from `lineitem_index_reverse` as `lineitem_index_reverse` where ((`l_orderkey` in(1, 2, 3)) and (`l_linenumber` = 1))")

- sql: |
    /*+TDDL:cmd_extra(enable_push_join=false,enable_cbo_push_join=false)*/ select * from orders join lineitem_index_reverse on l_orderkey = o_orderkey where l_linenumber in (1,2) and o_custkey = 1;

  plan: |
    BKAJoin(condition="l_orderkey = o_orderkey", type="inner")
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].orders_[00-15]", shardCount=16, sql="SELECT `o_orderkey`, `o_custkey`, `o_orderstatus`, `o_totalprice`, `o_orderdate`, `o_orderpriority`, `o_clerk`, `o_shippriority`, `o_comment` FROM `orders` AS `orders` WHERE (`o_custkey` = 1)")
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].lineitem_index_reverse", shardCount=4, sql="SELECT `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` FROM `lineitem_index_reverse` AS `lineitem_index_reverse` WHERE ((`l_linenumber` IN(1, 2)) AND (`l_orderkey` IN (...)))")


- sql: |
    /*+TDDL:cmd_extra(ENABLE_DIRECT_PLAN=false)*/
    select * from supplier a join supplier b on a.s_suppkey = b.s_suppkey join X c on b.s_suppkey=c.id where c.b = 1;

  plan: |
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].supplier_[00-15],X_[00-15]", shardCount=16, sql="SELECT `supplier`.`s_suppkey`, `supplier`.`s_name`, `supplier`.`s_address`, `supplier`.`s_nationkey`, `supplier`.`s_phone`, `supplier`.`s_acctbal`, `supplier`.`s_comment`, `supplier0`.`s_suppkey` AS `s_suppkey0`, `supplier0`.`s_name` AS `s_name0`, `supplier0`.`s_address` AS `s_address0`, `supplier0`.`s_nationkey` AS `s_nationkey0`, `supplier0`.`s_phone` AS `s_phone0`, `supplier0`.`s_acctbal` AS `s_acctbal0`, `supplier0`.`s_comment` AS `s_comment0`, `X`.`b`, `X`.`id` FROM `supplier` AS `supplier` INNER JOIN `supplier` AS `supplier0` ON (`supplier`.`s_suppkey` = `supplier0`.`s_suppkey`) INNER JOIN `X` AS `X` ON (((`X`.`b` = 1) AND (`supplier0`.`s_suppkey` = `X`.`id`)) AND (`supplier`.`s_suppkey` = `X`.`id`))")

- sql: |
    select * from lineitem  limit 2;

  plan: |
    MergeSort(sort="", offset=0, fetch=2)
      LogicalView(tables="[0000-0003].lineitem_[00-15]", shardCount=16, sql="SELECT `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` FROM `lineitem` AS `lineitem` LIMIT 2")

- sql: |
    select * from lineitem order by l_orderkey limit 2;

  plan: |
    MergeSort(sort="l_orderkey ASC", offset=0, fetch=2)
      LogicalView(tables="[0000-0003].lineitem_[00-15]", shardCount=16, sql="SELECT `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` FROM `lineitem` AS `lineitem` ORDER BY `l_orderkey` LIMIT 2")

- sql: |
    select * from lineitem order by l_orderkey desc, l_linenumber desc limit 2;

  plan: |
    MergeSort(sort="l_orderkey DESC,l_linenumber DESC", offset=0, fetch=2)
      LogicalView(tables="[0000-0003].lineitem_[00-15]", shardCount=16, sql="SELECT `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` FROM `lineitem` AS `lineitem` ORDER BY `l_orderkey` DESC, `l_linenumber` DESC LIMIT 2")

- sql: |
    select * from lineitem order by l_orderkey,l_linenumber,l_orderkey limit 2;

  plan: |
    MergeSort(sort="l_orderkey ASC,l_linenumber ASC,l_orderkey ASC", offset=0, fetch=2)
      LogicalView(tables="[0000-0003].lineitem_[00-15]", shardCount=16, sql="SELECT `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` FROM `lineitem` AS `lineitem` ORDER BY `l_orderkey`, `l_linenumber`, `l_orderkey` LIMIT 2")

- sql: |
    select * from lineitem order by l_orderkey desc, l_linenumber desc,l_orderkey limit 2;

  plan: |
    MergeSort(sort="l_orderkey DESC,l_linenumber DESC,l_orderkey ASC", offset=0, fetch=2)
      LogicalView(tables="[0000-0003].lineitem_[00-15]", shardCount=16, sql="SELECT `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` FROM `lineitem` AS `lineitem` ORDER BY `l_orderkey` DESC, `l_linenumber` DESC, `l_orderkey` LIMIT 2")

- sql: |
    select * from lineitem ignore index(primary) use index(IDX_LINEITEM_ORDERKEY) where l_orderkey = 1;

  plan: |
    LogicalView(tables="optest_0000.lineitem_00", sql="SELECT `l_orderkey`, `l_partkey`, `l_suppkey`, `l_linenumber`, `l_quantity`, `l_extendedprice`, `l_discount`, `l_tax`, `l_returnflag`, `l_linestatus`, `l_shipdate`, `l_commitdate`, `l_receiptdate`, `l_shipinstruct`, `l_shipmode`, `l_comment` FROM `lineitem` AS `lineitem` USE INDEX(IDX_LINEITEM_ORDERKEY) IGNORE INDEX(PRIMARY) WHERE (`l_orderkey` = 1)")

- sql: |
    select * from lineitem use index(IDX_LINEITEM_ORDERKEY) join orders on o_orderkey =  l_orderkey where o_custkey = 1;

  plan: |
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardCount=16, sql="SELECT `lineitem`.`l_orderkey`, `lineitem`.`l_partkey`, `lineitem`.`l_suppkey`, `lineitem`.`l_linenumber`, `lineitem`.`l_quantity`, `lineitem`.`l_extendedprice`, `lineitem`.`l_discount`, `lineitem`.`l_tax`, `lineitem`.`l_returnflag`, `lineitem`.`l_linestatus`, `lineitem`.`l_shipdate`, `lineitem`.`l_commitdate`, `lineitem`.`l_receiptdate`, `lineitem`.`l_shipinstruct`, `lineitem`.`l_shipmode`, `lineitem`.`l_comment`, `orders`.`o_orderkey`, `orders`.`o_custkey`, `orders`.`o_orderstatus`, `orders`.`o_totalprice`, `orders`.`o_orderdate`, `orders`.`o_orderpriority`, `orders`.`o_clerk`, `orders`.`o_shippriority`, `orders`.`o_comment` FROM `lineitem` AS `lineitem` USE INDEX(IDX_LINEITEM_ORDERKEY) INNER JOIN `orders` AS `orders` ON ((`orders`.`o_custkey` = 1) AND (`lineitem`.`l_orderkey` = `orders`.`o_orderkey`))")

- sql: |
    SELECT pad FROM sbtest1 force index(g_i_g) WHERE g=79733308;

  plan: |
    Project(pad="pad")
      BKAJoin(condition="id = id", type="inner")
        IndexScan(tables="optest_0000.g_i_g_04", sql="SELECT `id` FROM `g_i_g` AS `g_i_g` WHERE (`g` = 79733308)")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].sbtest1_[0-7]", shardCount=8, sql="SELECT `id`, `pad` FROM `sbtest1` AS `sbtest1` WHERE ((`g` = 79733308) AND (`id` IN (...)))")

- sql: |
    SELECT pad FROM sbtest1 force index(g_i_g) WHERE g=79733308 and id = 1;

  plan: |
    project(pad="pad")
      bkajoin(condition="id = id", type="inner")
        indexscan(tables="optest_0000.g_i_g_04", sql="select `id` from `g_i_g` as `g_i_g` where ((`id` = 1) and (`g` = 79733308))")
        logicalview(tables="optest_0000.sbtest1_1", sql="select `id`, `pad` from `sbtest1` as `sbtest1` where (((`id` = 1) and (`g` = 79733308)) and (`id` in (...)))")
- sql: |
    /*+TDDL:cmd_extra(ENABLE_PUSH_JOIN=false,ENABLE_CBO_PUSH_JOIN=false)*/
    select l_orderkey from lineitem join orders on l_orderkey = o_orderkey limit 10;

  plan: |
    limit(offset=0, fetch=10)
      project(l_orderkey="l_orderkey")
        bkajoin(condition="o_orderkey = l_orderkey", type="inner")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey` from `lineitem` as `lineitem`")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].orders_[00-15]", shardcount=16, sql="select `o_orderkey` from `orders` as `orders` where (`o_orderkey` in (...))")

- sql: |
    /*+TDDL:cmd_extra(ENABLE_PUSH_JOIN=false,ENABLE_CBO_PUSH_JOIN=false)*/
    select l_orderkey from lineitem left join orders on l_orderkey = o_orderkey limit 10;

  plan: |
    Project(l_orderkey="l_orderkey")
      BKAJoin(condition="l_orderkey = o_orderkey", type="left")
        MergeSort(sort="", offset=0, fetch=10)
          LogicalView(tables="[0000-0003].lineitem_[00-15]", shardCount=16, sql="SELECT `l_orderkey` FROM `lineitem` AS `lineitem` LIMIT 10")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].orders_[00-15]", shardCount=16, sql="SELECT `o_orderkey` FROM `orders` AS `orders` WHERE (`o_orderkey` IN (...))")

- sql: |
    /*+TDDL:cmd_extra(ENABLE_PUSH_JOIN=false,ENABLE_CBO_PUSH_JOIN=false)*/
    select l_orderkey from lineitem join orders on l_orderkey = o_orderkey order by l_partkey limit 10;

  plan: |
    project(l_orderkey="l_orderkey")
      limit(offset=0, fetch=10)
        project(l_orderkey="l_orderkey", l_partkey="l_partkey")
          bkajoin(condition="o_orderkey = l_orderkey", type="inner")
            mergesort(sort="l_partkey asc")
              logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey`, `l_partkey` from `lineitem` as `lineitem` order by `l_partkey`")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].orders_[00-15]", shardcount=16, sql="select `o_orderkey` from `orders` as `orders` where (`o_orderkey` in (...))")

- sql: |
    /*+TDDL:cmd_extra(ENABLE_PUSH_JOIN=false,ENABLE_CBO_PUSH_JOIN=false)*/
    select l_orderkey from lineitem left join orders on l_orderkey = o_orderkey order by l_partkey limit 10;

  plan: |
    project(l_orderkey="l_orderkey")
      bkajoin(condition="l_orderkey = o_orderkey", type="right")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].orders_[00-15]", shardcount=16, sql="select `o_orderkey` from `orders` as `orders` where (`o_orderkey` in (...))")
        mergesort(sort="l_partkey asc", offset=0, fetch=10)
          logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey`, `l_partkey` from `lineitem` as `lineitem` order by `l_partkey` limit 10")

- sql: |
    /*+TDDL:cmd_extra(ENABLE_PUSH_JOIN=false,ENABLE_CBO_PUSH_JOIN=false)*/
    select l_orderkey from part left join lineitem on l_partkey = p_partkey limit 1;

  plan: |
    project(l_orderkey="l_orderkey")
      limit(offset=0, fetch=1)
        bkajoin(condition="l_partkey = p_partkey", type="left")
          mergesort(sort="", fetch=1)
            logicalview(tables="[0000-0003].part_[00-15]", shardcount=16, sql="select `p_partkey` from `part` as `part` limit 1")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey`, `l_partkey` from `lineitem` as `lineitem` where (`l_partkey` in (...))")

- sql: |
    /*+TDDL:cmd_extra(ENABLE_PUSH_JOIN=false,ENABLE_CBO_PUSH_JOIN=false)*/ select l_orderkey from lineitem join part on l_partkey = p_partkey join orders on o_orderkey = l_orderkey limit 10;

  plan: |
    Limit(offset=0, fetch=10)
      Project(l_orderkey="l_orderkey")
        BKAJoin(condition="l_orderkey = o_orderkey", type="inner")
          Project(p_partkey="p_partkey", l_orderkey="l_orderkey", l_partkey="l_partkey")
            BKAJoin(condition="l_partkey = p_partkey", type="inner")
              Gather(concurrent=true)
                LogicalView(tables="[0000-0003].lineitem_[00-15]", shardCount=16, sql="SELECT `l_orderkey`, `l_partkey` FROM `lineitem` AS `lineitem`")
              Gather(concurrent=true)
                LogicalView(tables="[0000-0003].part_[00-15]", shardCount=16, sql="SELECT `p_partkey` FROM `part` AS `part` WHERE (`p_partkey` IN (...))")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].orders_[00-15]", shardCount=16, sql="SELECT `o_orderkey` FROM `orders` AS `orders` WHERE (`o_orderkey` IN (...))")

- sql: |
    /*+TDDL:cmd_extra(ENABLE_PUSH_JOIN=false,ENABLE_CBO_PUSH_JOIN=false,enable_sort_merge_join=false,enable_hash_join=false)*/ select l_orderkey from lineitem join part on l_partkey = p_partkey join orders on o_orderkey = l_orderkey order by o_orderkey limit 10;

  plan: |
    project(l_orderkey="l_orderkey")
      limit(offset=0, fetch=10)
        bkajoin(condition="l_partkey = p_partkey", type="inner")
          project(l_orderkey="l_orderkey", l_partkey="l_partkey", o_orderkey="o_orderkey")
            bkajoin(condition="l_orderkey = o_orderkey", type="inner")
              mergesort(sort="o_orderkey asc")
                logicalview(tables="[0000-0003].orders_[00-15]", shardcount=16, sql="select `o_orderkey` from `orders` as `orders` order by `o_orderkey`")
              gather(concurrent=true)
                logicalview(tables="[0000-0003].lineitem_[00-15]", shardcount=16, sql="select `l_orderkey`, `l_partkey` from `lineitem` as `lineitem` where (`l_orderkey` in (...))")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].part_[00-15]", shardcount=16, sql="select `p_partkey` from `part` as `part` where (`p_partkey` in (...))")

# now we don't think sortAgg is fast
#- sql: |
#    /*+TDDL:cmd_extra(ENABLE_PUSH_JOIN=false,ENABLE_CBO_PUSH_JOIN=false)*/ select avg(p_size) from lineitem join part on l_partkey = p_partkey group by l_orderkey order by l_orderkey desc limit 1;
#
#  plan: |
#    Limit(offset=0, fetch=1)
#      Project(avg(p_size)="avg(p_size)")
#        SortAgg(group="l_orderkey", avg(p_size)="AVG(p_size)")
#          Project(p_partkey="p_partkey", p_size="p_size", l_orderkey="l_orderkey", l_partkey="l_partkey")
#            BKAJoin(condition="l_partkey = p_partkey", type="inner")
#              MergeSort(sort="l_orderkey DESC")
#                LogicalView(tables="[0000-0003].lineitem_[00-15]", shardCount=16, sql="SELECT `l_orderkey`, `l_partkey` FROM `lineitem` AS `lineitem` ORDER BY `l_orderkey` DESC")
#              Gather(concurrent=true)
#                LogicalView(tables="[0000-0003].part_[00-15]", shardCount=16, sql="SELECT `p_partkey`, `p_size` FROM `part` AS `part` WHERE (`p_partkey` IN (...))")

- sql: |
    select l_orderkey from orders join lineitem on l_orderkey = o_orderkey order by l_partkey limit 10;

  plan: |
    Project(l_orderkey="l_orderkey")
      MergeSort(sort="l_partkey ASC", offset=0, fetch=10)
        LogicalView(tables="[0000-0003].orders_[00-15],lineitem_[00-15]", shardCount=16, sql="SELECT `lineitem`.`l_orderkey`, `lineitem`.`l_partkey` FROM `orders` AS `orders` INNER JOIN `lineitem` AS `lineitem` ON (`orders`.`o_orderkey` = `lineitem`.`l_orderkey`) ORDER BY `lineitem`.`l_partkey` LIMIT 10")

- sql: |
    select l_orderkey from orders join lineitem on l_orderkey = o_orderkey order by o_custkey limit 10;

  plan: |
    Project(l_orderkey="l_orderkey")
      MergeSort(sort="o_custkey ASC", offset=0, fetch=10)
        LogicalView(tables="[0000-0003].orders_[00-15],lineitem_[00-15]", shardCount=16, sql="SELECT `lineitem`.`l_orderkey`, `orders`.`o_custkey` FROM `orders` AS `orders` INNER JOIN `lineitem` AS `lineitem` ON (`orders`.`o_orderkey` = `lineitem`.`l_orderkey`) ORDER BY `orders`.`o_custkey` LIMIT 10")

- sql: |
    select  count(*) from lineitem join orders on o_orderkey = l_orderkey group by l_orderkey order by l_orderkey limit 1;

  plan: |
    Project(count(*)="count(*)")
      MergeSort(sort="l_orderkey ASC", offset=0, fetch=1)
        LogicalView(tables="[0000-0003].lineitem_[00-15],orders_[00-15]", shardCount=16, sql="SELECT `lineitem`.`l_orderkey`, COUNT(*) AS `count(*)` FROM `lineitem` AS `lineitem` INNER JOIN `orders` AS `orders` ON (`lineitem`.`l_orderkey` = `orders`.`o_orderkey`) GROUP BY `lineitem`.`l_orderkey` ORDER BY `lineitem`.`l_orderkey` LIMIT 1")

