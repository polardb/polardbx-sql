- sql: |
    /*+TDDL:HASH_JOIN(t_shard_id1,t_shard_id2)*/
    select t_shard_id1.id from t_shard_id1, t_shard_id2 where t_shard_id1.name = t_shard_id2.name order by t_shard_id1.id;

  plan: |
    project(id="id")
      hashjoin(condition="name = name", type="inner")
        mergesort(sort="id asc")
          logicalview(tables="[0000-0003].t_shard_id1", shardcount=4, sql="select `id`, `name` from `t_shard_id1` as `t_shard_id1` force index(`primary`) order by `id`")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].t_shard_id2", shardcount=4, sql="select `name` from `t_shard_id2` as `t_shard_id2`")
- sql: |
    /*+TDDL:HASH_JOIN(t_shard_id2,t_shard_id1)*/
    select t_shard_id1.id from t_shard_id1, t_shard_id2 where t_shard_id1.name = t_shard_id2.name order by t_shard_id2.id;

  plan: |
    project(id="id0")
      hashjoin(condition="name = name", type="inner")
        mergesort(sort="id asc")
          logicalview(tables="[0000-0003].t_shard_id2", shardcount=4, sql="select `id`, `name` from `t_shard_id2` as `t_shard_id2` force index(`primary`) order by `id`")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].t_shard_id1", shardcount=4, sql="select `id`, `name` from `t_shard_id1` as `t_shard_id1`")
- sql: |
    /*+TDDL:HASH_JOIN(t_shard_id1,t_shard_id2)*/
    select t_shard_id1.id from t_shard_id1, t_shard_id2 where t_shard_id1.name = t_shard_id2.name order by t_shard_id2.id, t_shard_id1.id;

  plan: |

    Project(id="id")
      MemSort(sort="id0 ASC,id ASC")
        Project(id="id", id0="id0")
          HashJoin(condition="name = name", type="inner")
            Gather(concurrent=true)
              LogicalView(tables="[0000-0003].t_shard_id1", shardCount=4, sql="SELECT `id`, `name` FROM `t_shard_id1` AS `t_shard_id1`")
            Gather(concurrent=true)
              LogicalView(tables="[0000-0003].t_shard_id2", shardCount=4, sql="SELECT `id`, `name` FROM `t_shard_id2` AS `t_shard_id2`")
