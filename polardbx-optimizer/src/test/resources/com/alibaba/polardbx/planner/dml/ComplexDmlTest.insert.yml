- sql: |
    insert into test_hash_tb values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0001.[test_hash_tb]", sql="INSERT INTO ? (`id`, `name`, `create_time`) VALUES(?, ?, CAST(? AS DATETIME))", params="`test_hash_tb`,1,a,?")

- sql: |
    insert into test_hash_tb values(last_insert_id(), 'a', now());

  plan: |

    phytableoperation(tables="optest_0000.[test_hash_tb]", sql="insert into ? (`id`, `name`, `create_time`) values(?, ?, cast(? as datetime))", params="`test_hash_tb`,0,a,?")

# Table without primary key

- sql: |
    insert into test_tb_without_pk(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_01]", sql="INSERT INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_01`,1,a,?")

- sql: |
    insert ignore into test_tb_without_pk(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_01]", sql="INSERT IGNORE INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_01`,1,a,?")

- sql: |
    replace into test_tb_without_pk(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_01]", sql="REPLACE INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_01`,1,a,?")

- sql: |
    insert into test_tb_without_pk(c1, c5, c8) values(1, 'a', now()) on duplicate key update c8=values(c8);

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_01]", sql="INSERT INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CAST(? AS DATETIME)) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_without_pk_01`,1,a,?")

- sql: |
    insert into test_tb_without_pk(c1, c5, c8) values(last_insert_id(), 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_00]", sql="INSERT INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_00`,0,a,?")


- sql: |
    replace into test_tb_without_pk(c1, c5, c8) values(last_insert_id(), 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_00]", sql="REPLACE INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_00`,0,a,?")

- sql: |
    insert into test_tb_without_pk(c1, c5, c8) values(last_insert_id(), 'a', now()) on duplicate key update c1=last_insert_id();

  plan: |

    phytableoperation(tables="optest_0000.[test_tb_without_pk_00]", sql="insert into ? (`id`, `c1`, `c2`, `c3`, `c4`, `c5`, `c6`, `c7`, `c8`) values(1, ?, null, null, null, ?, null, null, cast(? as datetime)) on duplicate key update `c1` = ?", params="`test_tb_without_pk_00`,0,a,?,0")

- sql: |
    insert into test_tb_without_pk(c1, c5, c8) values(1, 'a', now()), (2, 'b', current_timestamp()), (3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_01]", sql="INSERT INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_01`,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_02]", sql="INSERT INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CURRENT_TIMESTAMP)", params="`test_tb_without_pk_02`,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_03]", sql="INSERT INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, UNIX_TIMESTAMP())", params="`test_tb_without_pk_03`,3,c")

- sql: |
    insert into test_tb_without_pk(c1, c5, c8) values(last_insert_id() + 1, 'a', now()), (last_insert_id() + 2, 'b', current_timestamp()), (last_insert_id() + 3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_01]", sql="INSERT INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_01`,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_02]", sql="INSERT INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CURRENT_TIMESTAMP)", params="`test_tb_without_pk_02`,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_03]", sql="INSERT INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, UNIX_TIMESTAMP())", params="`test_tb_without_pk_03`,3,c")

- sql: |
    insert ignore into test_tb_without_pk(c1, c5, c8) values(1, 'a', now()), (2, 'b', current_timestamp()), (3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_01]", sql="INSERT IGNORE INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_01`,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_02]", sql="INSERT IGNORE INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CURRENT_TIMESTAMP)", params="`test_tb_without_pk_02`,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_03]", sql="INSERT IGNORE INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, UNIX_TIMESTAMP())", params="`test_tb_without_pk_03`,3,c")

- sql: |
    replace into test_tb_without_pk(c1, c5, c8) values(1, 'a', now()), (2, 'b', current_timestamp()), (3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_01]", sql="REPLACE INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_01`,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_02]", sql="REPLACE INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CURRENT_TIMESTAMP)", params="`test_tb_without_pk_02`,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_03]", sql="REPLACE INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, UNIX_TIMESTAMP())", params="`test_tb_without_pk_03`,3,c")

- sql: |
    insert into test_tb_without_pk(c1, c5, c8) values(1, 'a', now()), (2, 'b', current_timestamp()), (3, 'c', unix_timestamp()) on duplicate key update c8=values(c8);

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_01]", sql="INSERT INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CAST(? AS DATETIME)) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_without_pk_01`,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_02]", sql="INSERT INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_without_pk_02`,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_03]", sql="INSERT INTO ? (`c1`, `c5`, `c8`) VALUES(?, ?, UNIX_TIMESTAMP()) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_without_pk_03`,3,c")

# Table without primary key and has unique key

- sql: |
    insert into test_tb_without_pk_has_uk(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_01]", sql="INSERT INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_has_uk_01`,1,a,?")

- sql: |
    insert ignore into test_tb_without_pk_has_uk(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_01]", sql="INSERT IGNORE INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_has_uk_01`,1,a,?")

- sql: |
    replace into test_tb_without_pk_has_uk(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_01]", sql="REPLACE INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_has_uk_01`,1,a,?")

- sql: |
    insert into test_tb_without_pk_has_uk(c1, c5, c8) values(1, 'a', now()) on duplicate key update c8=values(c8);

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_01]", sql="INSERT INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CAST(? AS DATETIME)) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_without_pk_has_uk_01`,1,a,?")

- sql: |
    insert into test_tb_without_pk_has_uk(c1, c5, c8) values(1, 'a', now()), (2, 'b', current_timestamp()), (3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_01]", sql="INSERT INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_has_uk_01`,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_02]", sql="INSERT INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CURRENT_TIMESTAMP)", params="`test_tb_without_pk_has_uk_02`,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_03]", sql="INSERT INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, UNIX_TIMESTAMP())", params="`test_tb_without_pk_has_uk_03`,3,c")

- sql: |
    insert ignore into test_tb_without_pk_has_uk(c1, c5, c8) values(1, 'a', now()), (2, 'b', current_timestamp()), (3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_01]", sql="INSERT IGNORE INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_has_uk_01`,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_02]", sql="INSERT IGNORE INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CURRENT_TIMESTAMP)", params="`test_tb_without_pk_has_uk_02`,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_03]", sql="INSERT IGNORE INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, UNIX_TIMESTAMP())", params="`test_tb_without_pk_has_uk_03`,3,c")

- sql: |
    replace into test_tb_without_pk_has_uk(c1, c5, c8) values(1, 'a', now()), (2, 'b', current_timestamp()), (3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_01]", sql="REPLACE INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CAST(? AS DATETIME))", params="`test_tb_without_pk_has_uk_01`,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_02]", sql="REPLACE INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CURRENT_TIMESTAMP)", params="`test_tb_without_pk_has_uk_02`,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_03]", sql="REPLACE INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, UNIX_TIMESTAMP())", params="`test_tb_without_pk_has_uk_03`,3,c")

- sql: |
    insert into test_tb_without_pk_has_uk(c1, c5, c8) values(1, 'a', now()), (2, 'b', current_timestamp()), (3, 'c', unix_timestamp()) on duplicate key update c8=values(c8);

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_01]", sql="INSERT INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CAST(? AS DATETIME)) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_without_pk_has_uk_01`,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_02]", sql="INSERT INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_without_pk_has_uk_02`,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_without_pk_has_uk_03]", sql="INSERT INTO ? (`id`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, UNIX_TIMESTAMP()) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_without_pk_has_uk_03`,3,c")

# Table with auto_increment primary key and has no unique key

- sql: |
    insert into test_tb_pk_auto_increment(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_01]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_auto_increment_01`,1,1,a,?")

- sql: |
    insert ignore into test_tb_pk_auto_increment(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_01]", sql="INSERT IGNORE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_auto_increment_01`,2,1,a,?")

- sql: |
    replace into test_tb_pk_auto_increment(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_01]", sql="REPLACE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_auto_increment_01`,3,1,a,?")

- sql: |
    insert into test_tb_pk_auto_increment(c1, c5, c8) values(1, 'a', now()) on duplicate key update c8=values(c8);

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_01]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CAST(? AS DATETIME)) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_pk_auto_increment_01`,4,1,a,?")

- sql: |
    insert into test_tb_pk_auto_increment(pk, c1, c5, c8) values(0, 1, 'a', now()), (null, 2, 'b', current_timestamp()), (default, 3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_01]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_auto_increment_01`,5,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_02]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CURRENT_TIMESTAMP)", params="`test_tb_pk_auto_increment_02`,6,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_03]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, UNIX_TIMESTAMP())", params="`test_tb_pk_auto_increment_03`,7,3,c")

- sql: |
    insert ignore into test_tb_pk_auto_increment(pk, c1, c5, c8) values(0, 1, 'a', now()), (null, 2, 'b', current_timestamp()), (default, 3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_01]", sql="INSERT IGNORE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_auto_increment_01`,8,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_02]", sql="INSERT IGNORE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CURRENT_TIMESTAMP)", params="`test_tb_pk_auto_increment_02`,9,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_03]", sql="INSERT IGNORE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, UNIX_TIMESTAMP())", params="`test_tb_pk_auto_increment_03`,10,3,c")

- sql: |
    replace into test_tb_pk_auto_increment(pk, c1, c5, c8) values(0, 1, 'a', now()), (null, 2, 'b', current_timestamp()), (default, 3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_01]", sql="REPLACE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_auto_increment_01`,11,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_02]", sql="REPLACE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CURRENT_TIMESTAMP)", params="`test_tb_pk_auto_increment_02`,12,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_03]", sql="REPLACE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, UNIX_TIMESTAMP())", params="`test_tb_pk_auto_increment_03`,13,3,c")

- sql: |
    insert into test_tb_pk_auto_increment(pk, c1, c5, c8) values(0, 1, 'a', now()), (null, 2, 'b', current_timestamp()), (default, 3, 'c', unix_timestamp()) on duplicate key update c8=values(c8);

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_01]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CAST(? AS DATETIME)) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_pk_auto_increment_01`,14,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_02]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_pk_auto_increment_02`,15,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_03]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, UNIX_TIMESTAMP()) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_pk_auto_increment_03`,16,3,c")

# Table with primary key, no unique key, no auto_increment, no default value

- sql: |
    insert into test_tb_pk_no_auto_increment_no_default(c1, c5, c8) values(1, 'a', now());

  plan: |

    ERR-CODE: [PXC-4518][ERR_VALIDATE] : Column 'pk' has no default value and does not allow NULLs

- sql: |
    insert ignore into test_tb_pk_no_auto_increment_no_default(c1, c5, c8) values(1, 'a', now());

  plan: |

    ERR-CODE: [PXC-4518][ERR_VALIDATE] : Column 'pk' has no default value and does not allow NULLs

- sql: |
    replace into test_tb_pk_no_auto_increment_no_default(c1, c5, c8) values(1, 'a', now());

  plan: |

    ERR-CODE: [PXC-4518][ERR_VALIDATE] : Column 'pk' has no default value and does not allow NULLs

- sql: |
    insert into test_tb_pk_no_auto_increment_no_default(c1, c5, c8) values(1, 'a', now()) on duplicate key update c8=values(c8);

  plan: |

    ERR-CODE: [PXC-4518][ERR_VALIDATE] : Column 'pk' has no default value and does not allow NULLs

- sql: |
    replace into test_tb_pk_no_auto_increment_no_default(pk, c1, c5, c8) values(0, 1, 'a', now()), (null, 2, 'b', current_timestamp()), (default, 3, 'c', unix_timestamp());

  plan: |

    ERR-CODE: [PXC-4518][ERR_VALIDATE] : Column 'pk' has no default value and does not allow NULLs

- sql: |
    insert into test_tb_pk_no_auto_increment_no_default(pk, c1, c5, c8) values(0, 1, 'a', now()), (null, 2, 'b', current_timestamp()), (default, 3, 'c', unix_timestamp()) on duplicate key update c8=values(c8);

  plan: |

    ERR-CODE: [PXC-4518][ERR_VALIDATE] : Column 'pk' has no default value and does not allow NULLs


# Table with primary key, no unique key, no auto_increment, default 1

- sql: |
    insert into test_tb_pk_no_auto_increment_default_1(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_01]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_no_auto_increment_default_1_01`,1,a,?")

- sql: |
    insert ignore into test_tb_pk_no_auto_increment_default_1(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_01]", sql="INSERT IGNORE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_no_auto_increment_default_1_01`,1,a,?")

- sql: |
    replace into test_tb_pk_no_auto_increment_default_1(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_01]", sql="REPLACE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_no_auto_increment_default_1_01`,1,a,?")

- sql: |
    insert into test_tb_pk_no_auto_increment_default_1(c1, c5, c8) values(1, 'a', now()) on duplicate key update c8=values(c8);

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_01]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, CAST(? AS DATETIME)) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_pk_no_auto_increment_default_1_01`,1,a,?")

- sql: |
    insert into test_tb_pk_no_auto_increment_default_1(pk, c1, c5, c8) values(0, 1, 'a', now()), (null, 2, 'b', current_timestamp()), (default, 3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_01]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_no_auto_increment_default_1_01`,0,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_02]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CURRENT_TIMESTAMP)", params="`test_tb_pk_no_auto_increment_default_1_02`,NULL,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_03]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, UNIX_TIMESTAMP())", params="`test_tb_pk_no_auto_increment_default_1_03`,3,c")

- sql: |
    insert ignore into test_tb_pk_no_auto_increment_default_1(pk, c1, c5, c8) values(0, 1, 'a', now()), (null, 2, 'b', current_timestamp()), (default, 3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_01]", sql="INSERT IGNORE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_no_auto_increment_default_1_01`,0,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_02]", sql="INSERT IGNORE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CURRENT_TIMESTAMP)", params="`test_tb_pk_no_auto_increment_default_1_02`,NULL,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_03]", sql="INSERT IGNORE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, UNIX_TIMESTAMP())", params="`test_tb_pk_no_auto_increment_default_1_03`,3,c")

- sql: |
    replace into test_tb_pk_no_auto_increment_default_1(pk, c1, c5, c8) values(0, 1, 'a', now()), (null, 2, 'b', current_timestamp()), (default, 3, 'c', unix_timestamp());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_01]", sql="REPLACE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_no_auto_increment_default_1_01`,0,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_02]", sql="REPLACE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CURRENT_TIMESTAMP)", params="`test_tb_pk_no_auto_increment_default_1_02`,NULL,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_03]", sql="REPLACE INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, UNIX_TIMESTAMP())", params="`test_tb_pk_no_auto_increment_default_1_03`,3,c")

- sql: |
    insert into test_tb_pk_no_auto_increment_default_1(pk, c1, c5, c8) values(0, 1, 'a', now()), (null, 2, 'b', current_timestamp()), (default, 3, 'c', unix_timestamp()) on duplicate key update c8=values(c8);

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_01]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CAST(? AS DATETIME)) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_pk_no_auto_increment_default_1_01`,0,1,a,?")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_02]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(?, ?, ?, CURRENT_TIMESTAMP) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_pk_no_auto_increment_default_1_02`,NULL,2,b")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_03]", sql="INSERT INTO ? (`pk`, `c1`, `c5`, `c8`) VALUES(1, ?, ?, UNIX_TIMESTAMP()) ON DUPLICATE KEY UPDATE `c8` = VALUES(`c8`)", params="`test_tb_pk_no_auto_increment_default_1_03`,3,c")


# Table with primary key, with unique key, with auto_increment, with ugsi


- sql: |
    insert into test_tb_pk_auto_increment_with_ugsi(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_with_ugsi_01]", sql="INSERT INTO ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) VALUES(?, ?, ?, ?, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_auto_increment_with_ugsi_01`,1,1,NULL,NULL,NULL,a,?")

- sql: |
    insert ignore into test_tb_pk_auto_increment_with_ugsi(c1, c5, c8) values(1, 'a', now());

  plan: |

    logicalinsertignore(sql="insert ignore into ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) values(?, ?, ?, ?, ?, ?, cast(? as datetime))", uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_auto_increment_with_ugsi, select [[c2]] on g_u_c2_a])

- sql: |
    replace into test_tb_pk_auto_increment_with_ugsi(c1, c5, c8) values(1, 'a', now());

  plan: |

    logicalreplace(sql="replace into ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) values(?, ?, ?, ?, ?, ?, cast(? as datetime))", uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_auto_increment_with_ugsi, select [[c2]] on g_u_c2_a])

- sql: |
    insert into test_tb_pk_auto_increment_with_ugsi(c1, c5, c8) values(1, 'a', 2 + 3) on duplicate key update c8=values(c8);

  plan: |

    logicalupsert(sql="insert into ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c6`, `c7`, `c8`) values(?, ?, ?, ?, ?, ?, null, null, ?) on duplicate key update `c8` = ?", uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_auto_increment_with_ugsi, select [[c2]] on g_u_c2_a])

- sql: |
    insert into test_tb_pk_auto_increment_with_ugsi(pk, c1, c5, c8) values(0, 1, 'a', 2 + 3), (null, 2, 'b', 2 + 3), (default, 3, 'c', 2 + 3);

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_with_ugsi_01]", sql="INSERT INTO ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) VALUES(?, ?, ?, ?, ?, ?, ?)", params="`test_tb_pk_auto_increment_with_ugsi_01`,2,1,NULL,NULL,NULL,a,5")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_with_ugsi_02]", sql="INSERT INTO ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) VALUES(?, ?, ?, ?, ?, ?, ?)", params="`test_tb_pk_auto_increment_with_ugsi_02`,3,2,NULL,NULL,NULL,b,5")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_auto_increment_with_ugsi_03]", sql="INSERT INTO ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) VALUES(?, ?, ?, ?, ?, ?, ?)", params="`test_tb_pk_auto_increment_with_ugsi_03`,4,3,NULL,NULL,NULL,c,5")

- sql: |
    insert ignore into test_tb_pk_auto_increment_with_ugsi(pk, c1, c5, c8) values(0, 1, 'a', 2 + 3), (null, 2, 'b', 2 + 3), (default, 3, 'c', 2 + 3)

  plan: |

    logicalinsertignore(sql="insert ignore into ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) values(?, ?, ?, ?, ?, ?, ?)", uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_auto_increment_with_ugsi, select [[c2]] on g_u_c2_a])

- sql: |
    replace into test_tb_pk_auto_increment_with_ugsi(pk, c1, c5, c8) values(0, 1, 'a', 2 + 3), (null, 2, 'b', 2 + 3), (default, 3, 'c', 2 + 3);

  plan: |

    logicalreplace(sql="replace into ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) values(?, ?, ?, ?, ?, ?, ?)", uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_auto_increment_with_ugsi, select [[c2]] on g_u_c2_a])

- sql: |
    insert into test_tb_pk_auto_increment_with_ugsi(pk, c1, c5, c8) values(0, 1, 'a', 2 + 3), (null, 2, 'b', 2 + 3), (default, 3, 'c', 2 + 3) on duplicate key update c8=values(c8);

  plan: |

    logicalupsert(sql="insert into ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c6`, `c7`, `c8`) values(?, ?, ?, ?, ?, ?, ?, ?, ?) on duplicate key update `c8` = ?", uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_auto_increment_with_ugsi, select [[c2]] on g_u_c2_a])

# Table with primary key, with unique key, no auto_increment, no default value, with gusi

- sql: |
    insert into test_tb_pk_no_auto_increment_no_default_with_ugsi(c1, c5, c8) values(1, 'a', now());

  plan: |

    ERR-CODE: [PXC-4518][ERR_VALIDATE] : Column 'pk' has no default value and does not allow NULLs

- sql: |
    insert ignore into test_tb_pk_no_auto_increment_no_default_with_ugsi(c1, c5, c8) values(1, 'a', now());

  plan: |

    ERR-CODE: [PXC-4518][ERR_VALIDATE] : Column 'pk' has no default value and does not allow NULLs

- sql: |
    replace into test_tb_pk_no_auto_increment_no_default_with_ugsi(c1, c5, c8) values(1, 'a', now());

  plan: |

    ERR-CODE: [PXC-4518][ERR_VALIDATE] : Column 'pk' has no default value and does not allow NULLs

- sql: |
    insert into test_tb_pk_no_auto_increment_no_default_with_ugsi(c1, c5, c8) values(1, 'a', now()) on duplicate key update c8=values(c8);

  plan: |

    ERR-CODE: [PXC-4518][ERR_VALIDATE] : Column 'pk' has no default value and does not allow NULLs

- sql: |
    replace into test_tb_pk_no_auto_increment_no_default_with_ugsi(pk, c1, c5, c8) values(0, 1, 'a', now()), (null, 2, 'b', current_timestamp()), (default, 3, 'c', unix_timestamp());

  plan: |

    ERR-CODE: [PXC-4518][ERR_VALIDATE] : Column 'pk' has no default value and does not allow NULLs

- sql: |
    insert into test_tb_pk_no_auto_increment_no_default_with_ugsi(pk, c1, c5, c8) values(0, 1, 'a', now()), (null, 2, 'b', current_timestamp()), (default, 3, 'c', unix_timestamp()) on duplicate key update c8=values(c8);

  plan: |

    ERR-CODE: [PXC-4518][ERR_VALIDATE] : Column 'pk' has no default value and does not allow NULLs


# Table with primary key, with unique key, no auto_increment, default 1, with gusi

- sql: |
    insert into test_tb_pk_no_auto_increment_default_1_with_ugsi(c1, c5, c8) values(1, 'a', now());

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_with_ugsi_01]", sql="INSERT INTO ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) VALUES(?, ?, ?, ?, ?, ?, CAST(? AS DATETIME))", params="`test_tb_pk_no_auto_increment_default_1_with_ugsi_01`,1,1,NULL,NULL,NULL,a,?")

- sql: |
    insert ignore into test_tb_pk_no_auto_increment_default_1_with_ugsi(c1, c5, c8) values(1, 'a', now());

  plan: |

    logicalinsertignore(sql="insert ignore into ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) values(?, ?, ?, ?, ?, ?, cast(? as datetime))", uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_no_auto_increment_default_1_with_ugsi, select [[c2]] on g_u_c2_c])

- sql: |
    replace into test_tb_pk_no_auto_increment_default_1_with_ugsi(c1, c5, c8) values(1, 'a', now());

  plan: |

    logicalreplace(sql="replace into ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) values(?, ?, ?, ?, ?, ?, cast(? as datetime))", uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_no_auto_increment_default_1_with_ugsi, select [[c2]] on g_u_c2_c])

- sql: |
    insert into test_tb_pk_no_auto_increment_default_1_with_ugsi(c1, c5, c8) values(1, 'a', 2 + 3) on duplicate key update c8=values(c8);

  plan: |

    logicalupsert(sql="insert into ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c6`, `c7`, `c8`) values(?, ?, ?, ?, ?, ?, null, null, ?) on duplicate key update `c8` = ?", uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_no_auto_increment_default_1_with_ugsi, select [[c2]] on g_u_c2_c])

- sql: |
    insert into test_tb_pk_no_auto_increment_default_1_with_ugsi(pk, c1, c5, c8) values(0, 1, 'a', 2 + 3), (null, 2, 'b', 2 + 3), (default, 3, 'c', 2 + 3);

  plan: |

    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_with_ugsi_01]", sql="INSERT INTO ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) VALUES(?, ?, ?, ?, ?, ?, ?)", params="`test_tb_pk_no_auto_increment_default_1_with_ugsi_01`,0,1,NULL,NULL,NULL,a,5")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_with_ugsi_02]", sql="INSERT INTO ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) VALUES(?, ?, ?, ?, ?, ?, ?)", params="`test_tb_pk_no_auto_increment_default_1_with_ugsi_02`,NULL,2,NULL,NULL,NULL,b,5")
    PhyTableOperation(tables="optest_0000.[test_tb_pk_no_auto_increment_default_1_with_ugsi_03]", sql="INSERT INTO ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) VALUES(?, ?, ?, ?, ?, ?, ?)", params="`test_tb_pk_no_auto_increment_default_1_with_ugsi_03`,1,3,NULL,NULL,NULL,c,5")

- sql: |
    insert ignore into test_tb_pk_no_auto_increment_default_1_with_ugsi(pk, c1, c5, c8) values(0, 1, 'a', 2 + 3), (null, 2, 'b', 2 + 3), (default, 3, 'c', 2 + 3);

  plan: |

    logicalinsertignore(sql="insert ignore into ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) values(?, ?, ?, ?, ?, ?, ?)", uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_no_auto_increment_default_1_with_ugsi, select [[c2]] on g_u_c2_c])

- sql: |
    replace into test_tb_pk_no_auto_increment_default_1_with_ugsi(pk, c1, c5, c8) values(0, 1, 'a', 2 + 3), (null, 2, 'b', 2 + 3), (default, 3, 'c', 2 + 3);

  plan: |

    logicalreplace(sql="replace into ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c8`) values(?, ?, ?, ?, ?, ?, ?)", uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_no_auto_increment_default_1_with_ugsi, select [[c2]] on g_u_c2_c])

- sql: |
    insert into test_tb_pk_no_auto_increment_default_1_with_ugsi(pk, c1, c5, c8) values(0, 1, 'a', 2 + 3), (null, 2, 'b', 2 + 3), (default, 3, 'c', 2 + 3) on duplicate key update c8=values(c8);

  plan: |

    logicalupsert(sql="insert into ? (`pk`, `c1`, `c2`, `c3`, `c4`, `c5`, `c6`, `c7`, `c8`) values(?, ?, ?, ?, ?, ?, ?, ?, ?) on duplicate key update `c8` = ?", uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_no_auto_increment_default_1_with_ugsi, select [[c2]] on g_u_c2_c])

- sql: |
    INSERT ignore INTO test_tb_pk_auto_increment_with_ugsi (c1, c2, c3, c6, c7)
    select distinct (ar.id), NULL, 92822, '2020-03-03 18:20:17', null
    from test_hash_tb1 ar, test_hash_tb2 arpr
    where not exists (
        select *
        from test_hash_tb2
        where int_col1    = ar.int_col2
          and ar.int_col3 = 0
        )

  plan: |
    
    logicalinsertignore(table="test_tb_pk_auto_increment_with_ugsi", columns=recordtype(bigint pk, integer c1, null c2, bigint c3, bigint c4, char c6, null c7), uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_auto_increment_with_ugsi, select [[c2]] on g_u_c2_a], mode=single)
      project(pk="null", c1="id", c2="null", c3="92822", c4="null", c6="2020-03-03 18:20:17", c7="null")
        hashagg(group="id,null,92822,2020-03-03 18:20:17")
          project(id="id", null="null", 92822="?0", 2020-03-03 18:20:17="?1")
            filter(condition="apply_boolean")
              correlateapply(cor=$cor, leftconditions=[], opkind=null, type=anti)
                project(id="id", int_col2="int_col2", int_col3="int_col3")
                  nljoin(condition="true", type="inner")
                    gather(concurrent=true)
                      logicalview(tables="[0000-0003].test_hash_tb1", shardcount=4, sql="select `id`, `int_col2`, `int_col3` from `test_hash_tb1` as `test_hash_tb1`")
                    gather(concurrent=true)
                      logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id` from `test_hash_tb2` as `test_hash_tb2`")
                filter(condition="int_col1 = $cor.int_col2 and $cor.int_col3 = ?2")
                  gather(concurrent=true)
                    logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2`")
    cache node:

    gather(concurrent=true)
      logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2`")

- sql: |
    INSERT ignore INTO test_tb_pk_auto_increment_with_ugsi (c1, c2, c3, c4, c6, c7)
    select distinct (ar.id), 1500000039, NULL, 92822, '2020-03-03 18:20:17', null
    from test_hash_tb1 ar, test_hash_tb2 arpr
    where not exists (
        select *
        from test_hash_tb2
        where int_col1    = ar.int_col2
          and ar.int_col3 = 0
        )

  plan: |
    
    logicalinsertignore(table="test_tb_pk_auto_increment_with_ugsi", columns=recordtype(bigint pk, integer c1, bigint c2, null c3, bigint c4, char c6, null c7), uniquekeyselect=[select [[c4, c3], [pk]] on test_tb_pk_auto_increment_with_ugsi, select [[c2]] on g_u_c2_a], mode=single)
      project(pk="null", c1="id", c2="1500000039", c3="null", c4="92822", c6="2020-03-03 18:20:17", c7="null")
        hashagg(group="id,1500000039,null,92822,2020-03-03 18:20:17")
          project(id="id", 1500000039="?0", null="null", 92822="?1", 2020-03-03 18:20:17="?2")
            filter(condition="apply_boolean")
              correlateapply(cor=$cor, leftconditions=[], opkind=null, type=anti)
                project(id="id", int_col2="int_col2", int_col3="int_col3")
                  nljoin(condition="true", type="inner")
                    gather(concurrent=true)
                      logicalview(tables="[0000-0003].test_hash_tb1", shardcount=4, sql="select `id`, `int_col2`, `int_col3` from `test_hash_tb1` as `test_hash_tb1`")
                    gather(concurrent=true)
                      logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id` from `test_hash_tb2` as `test_hash_tb2`")
                filter(condition="int_col1 = $cor.int_col2 and $cor.int_col3 = ?3")
                  gather(concurrent=true)
                    logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2`")
    cache node:

    gather(concurrent=true)
      logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2`")

- sql: |
    
    insert into t1_upsert(id, xx_date) values (1, "2024-01-27 00:00:00.0") on duplicate key update xx_date=values(xx_date);

  plan: |
    
    phytableoperation(tables="optest_0001.[t1_upsert_27]", sql="insert into ? (`id`, `xx_date`) values(?, ?) on duplicate key update `xx_date` = values(`xx_date`)", params="`t1_upsert_27`,1,2024-01-27 00:00:00.0")
    
- sql: |
    
    insert into t2_upsert(id, name, xx_date) values (1, "b", "2024-01-27 00:00:00.0") on duplicate key update xx_date=values(xx_date);

  plan: |
    
    logicalupsert(sql="insert into ? (`id`, `name`, `xx_date`) values(?, ?, ?) on duplicate key update `xx_date` = ?", uniquekeyselect=[select [[id]] on t2_upsert])

- sql: |
    
    insert into t2_upsert(id, name, xx_date) values (1, "b", "2024-01-27 00:00:00.0") on duplicate key update xx_date=values(xx_date), name=values(name);

  plan: |
    
    logicalupsert(sql="insert into ? (`id`, `name`, `xx_date`) values(?, ?, ?) on duplicate key update `xx_date` = ?, `name` = ?", uniquekeyselect=[select [[id]] on t2_upsert])

- sql: |
    
    insert into t3_upsert(name, xx_date) values ("b", "2024-01-27 00:00:00.0") on duplicate key update xx_date=values(xx_date);

  plan: |
    
    logicalupsert(sql="insert into ? (`id`, `name`, `xx_date`) values(?, ?, ?) on duplicate key update `xx_date` = ?", uniquekeyselect=[select [[id], [name]] on t3_upsert])
