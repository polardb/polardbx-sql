-
  sql: |
    /*+TDDL:HASH_JOIN(t_shard_id1,t_shard_id2)*/
    select t_shard_id1.id from t_shard_id1, t_shard_id2 where t_shard_id1.name = t_shard_id2.name order by t_shard_id1.id;

  plan: |

    project(id="id")
      hashjoin(condition="name = name", type="inner")
        mergesort(sort="id asc")
          logicalview(tables="[0000-0003].t_shard_id1", shardcount=4, sql="select `id`, `name` from `t_shard_id1` as `t_shard_id1` force index(`primary`) order by `id`")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].t_shard_id2", shardcount=4, sql="select `name` from `t_shard_id2` as `t_shard_id2`")

-
  sql: |
    /*+TDDL:HASH_JOIN(t_shard_id2,t_shard_id1)*/
    select t_shard_id1.id from t_shard_id1, t_shard_id2 where t_shard_id1.name = t_shard_id2.name order by t_shard_id2.id;

  plan: |

    project(id="id0")
      hashjoin(condition="name = name", type="inner")
        mergesort(sort="id asc")
          logicalview(tables="[0000-0003].t_shard_id2", shardcount=4, sql="select `id`, `name` from `t_shard_id2` as `t_shard_id2` force index(`primary`) order by `id`")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].t_shard_id1", shardcount=4, sql="select `id`, `name` from `t_shard_id1` as `t_shard_id1`")

-
  sql: |
    /*+TDDL:HASH_JOIN(t_shard_id1,t_shard_id2)*/
    select t_shard_id1.id from t_shard_id1, t_shard_id2 where t_shard_id1.name = t_shard_id2.name order by t_shard_id2.id, t_shard_id1.id;

  plan: |

    project(id="id")
      memsort(sort="id0 asc,id asc")
        project(id="id", id0="id0")
          hashjoin(condition="name = name", type="inner")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].t_shard_id1", shardcount=4, sql="select `id`, `name` from `t_shard_id1` as `t_shard_id1`")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].t_shard_id2", shardcount=4, sql="select `id`, `name` from `t_shard_id2` as `t_shard_id2`")

-
  sql: |
    /*+TDDL:HASH_JOIN(t_one,t_two)*/
    select a.id from (select id, name from t_one) a left join ( select name from t_two where id = 2 group by name ) b  on a.name = b.name order by a.id limit 10, 10;

  plan: |

    project(id="id")
      hashjoin(condition="name = name", type="left")
        mergesort(sort="id asc", offset=10, fetch=10)
          logicalview(tables="[0000-0003].t_one", shardcount=4, sql="select `id`, `name` from `t_one` as `t_one` force index(`primary`) order by `id` limit 20")
        logicalview(tables="optest_0002.t_two", sql="select `name` from `t_two` as `t_two` force index(`primary`) where (`id` = 2) group by `name`")

-
  sql: |
    /*+TDDL:HASH_OUTER_JOIN(t_one,t_two)*/
    select a.id from (select id, name from t_one where id = 1) a left join ( select name from t_two where id = 2 group by name ) b  on a.name = b.name order by a.id limit 10, 10;

  plan: |

    topn(sort="id asc", offset=10, fetch=10)
      project(id="id")
        hashjoin(condition="name = name", type="left", build="left")
          logicalview(tables="optest_0001.t_one", sql="select `id`, `name` from `t_one` as `t_one` force index(`primary`) where (`id` = 1)")
          logicalview(tables="optest_0002.t_two", sql="select `name` from `t_two` as `t_two` force index(`primary`) where (`id` = 2) group by `name`")

-
  sql: |
    select * from t_broadcast right join t_shard_id3 on (70>=80);

  plan: |

    gather(concurrent=true)
      logicalview(tables="[0000-0003].t_broadcast,t_shard_id3_[0-3]", shardcount=16, sql="select `t_broadcast`.`id`, `t_broadcast`.`name`, `t_broadcast`.`create_time`, `t_shard_id3`.`id` as `id0`, `t_shard_id3`.`name` as `name0`, `t_shard_id3`.`create_time` as `create_time0` from `t_broadcast` as `t_broadcast` right join `t_shard_id3` as `t_shard_id3` on (70 >= 80)")
    
    
    
    
