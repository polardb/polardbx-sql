- sql: |
    select a.id
    from 
      test_hash_tb a
    where 
       a.id in ( 
                  select id     
                  from test_hash_tb2 b
                  where b.name=a.name
                )

  plan: |

    gather(concurrent=true)
      logicalview(tables="[0000-0003].test_hash_tb,test_hash_tb2", shardcount=4, sql="select `id` from `test_hash_tb` as `test_hash_tb` where (`id` in (select `id` from `test_hash_tb2` as `test_hash_tb2` where ((`test_hash_tb`.`id` = `id`) and (`name` = `test_hash_tb`.`name`))))")

- sql: |
    /*+TDDL:SEMI_HASH_JOIN(test_hash_tb,test_hash_tb2)*/
    select a.id
    from
      test_hash_tb a
    where
       a.id in (
                  select id + 1
                  from test_hash_tb2 b
                  where b.name=a.name
                )

  plan: |

    Project(id="id")
      SemiHashJoin(condition="id = id + 1 AND name = name", type="semi")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb` AS `test_hash_tb`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT (`id` + 1) AS `id + 1`, `name` FROM `test_hash_tb2` AS `test_hash_tb2`")

- sql: |
    select a.id
    from
      test_hash_tb a
    where
       a.id = any (
                  select id
                  from test_hash_tb2 b
                  where b.name=a.name
                )

  plan: |

    gather(concurrent=true)
      logicalview(tables="[0000-0003].test_hash_tb,test_hash_tb2", shardcount=4, sql="select `id` from `test_hash_tb` as `test_hash_tb` where (`id` = some (select `id` from `test_hash_tb2` as `test_hash_tb2` where ((`test_hash_tb`.`id` = `id`) and (`name` = `test_hash_tb`.`name`))))")

- sql: |
    select a.id
    from
      test_hash_tb a
    where
       a.id = all (
                  select id + 1
                  from test_hash_tb2 b
                  where b.name=a.name
                )

  plan: |

    Project(id="id")
      SemiNLJoin(condition="id <> id + 1 AND name = name", type="anti")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb` AS `test_hash_tb`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT (`id` + 1) AS `id + 1`, `name` FROM `test_hash_tb2` AS `test_hash_tb2`")

- sql: |
    select a.id
    from
      test_hash_tb a
    where
       a.id = some (
                  select id
                  from test_hash_tb2 b
                  where b.name=a.name
                )

  plan: |

    gather(concurrent=true)
      logicalview(tables="[0000-0003].test_hash_tb,test_hash_tb2", shardcount=4, sql="select `id` from `test_hash_tb` as `test_hash_tb` where (`id` = some (select `id` from `test_hash_tb2` as `test_hash_tb2` where ((`test_hash_tb`.`id` = `id`) and (`name` = `test_hash_tb`.`name`))))")

- sql: |
    select a.id
    from
      test_hash_tb a
    where
       a.id in (
                  select id
                  from test_hash_tb2 b
                  where
                    b.name=a.name
                    and
                    a.create_time=b.create_time
                )

  plan: |

    gather(concurrent=true)
      logicalview(tables="[0000-0003].test_hash_tb,test_hash_tb2", shardcount=4, sql="select `id` from `test_hash_tb` as `test_hash_tb` where (`id` in (select `id` from `test_hash_tb2` as `test_hash_tb2` where (((`test_hash_tb`.`id` = `id`) and (`name` = `test_hash_tb`.`name`)) and (`test_hash_tb`.`create_time` = `create_time`))))")

- sql: |
    select a.id
    from
      test_hash_tb a
    where
       a.id in (
                  select id
                  from test_hash_tb2 b
                  where
                    b.name=a.name
                    or
                    a.create_time=b.create_time
                )

  plan: |
    Project(id="id")
      Filter(condition="APPLY_BOOLEAN")
        CorrelateApply(cor=$cor0, leftConditions=[$0], opKind=EQUALS, type=SEMI)
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb`")
          Project($f0="id")
            Filter(condition="name = $cor0.name OR $cor0.create_time = create_time")
              Gather(concurrent=true)
                LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb2` AS `test_hash_tb2`")
    cache node:

    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb` AS `test_hash_tb`")
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb2` AS `test_hash_tb2`")

- sql: |
    select a.id
    from
      test_hash_tb a
    where
       a.id in (
                  select id
                  from test_hash_tb2 b
                  where
                    b.name= left( a.name, 3)
                )

  plan: |
    Project(id="id")
      Filter(condition="APPLY_BOOLEAN")
        CorrelateApply(cor=$cor0, leftConditions=[$0], opKind=EQUALS, type=SEMI)
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb` AS `test_hash_tb`")
          Project($f0="id")
            Filter(condition="name = LEFT($cor0.name, 3)")
              Gather(concurrent=true)
                LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb2` AS `test_hash_tb2`")
    cache node:

    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb` AS `test_hash_tb`")
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb2` AS `test_hash_tb2`")

- sql: |
    select a.id
    from
      test_hash_tb a
    where
       a.id in (
                  select b.id as id
                  from
                    test_hash_tb2 b
                    join
                    test_hash_tb3 c
                    on
                    b.id=c.id
                  where
                    a.name > b.name
                )

  plan: |

    gather(concurrent=true)
      logicalview(tables="[0000-0003].test_hash_tb,test_hash_tb2,test_hash_tb3", shardcount=4, sql="select `id` from `test_hash_tb` as `test_hash_tb` where (`id` in (select `test_hash_tb2`.`id` from `test_hash_tb2` as `test_hash_tb2` inner join `test_hash_tb3` as `test_hash_tb3` on (`test_hash_tb2`.`id` = `test_hash_tb3`.`id`) where ((`test_hash_tb`.`id` = `test_hash_tb2`.`id`) and (`test_hash_tb`.`name` > `test_hash_tb2`.`name`))))")

- sql: |
    select a.id
    from
      test_hash_tb a
    where
       a.id in (
                  select b.id as id
                  from
                    test_hash_tb2 b
                  where
                    b.name='xx'
                    and
                    b.id in
                    (
                      select id
                      from test_hash_tb3 c
                      where
                      c.name=b.name

                    )
                )

  plan: |
    gather(concurrent=true)
      logicalview(tables="[0000-0003].test_hash_tb,test_hash_tb2,test_hash_tb3", shardcount=4, sql="select `id` from `test_hash_tb` as `test_hash_tb` where (`id` in (select `id` from `test_hash_tb2` as `test_hash_tb2` where ((`name` = 'xx') and (`id` in (select `id` from `test_hash_tb3` as `test_hash_tb3` where (((`name` = 'xx') and (`test_hash_tb2`.`id` = `id`)) and (`name` = `test_hash_tb2`.`name`)))))))")

- sql: |
    select a.id
    from
      test_hash_tb a
    where
       a.id in (
                  select b.id as id
                  from
                    test_hash_tb2 b
                  where
                    b.name='xx'
                    and
                    b.id in
                    (
                      select id
                      from test_hash_tb3 c
                      where
                      c.name=b.name
                      and
                        c.id in
                          (
                              select id
                              from test_hash_tb4 d
                              where c.create_time=d.create_time
                          )


                    )
                )

  plan: |

    MaterializedSemiJoin(condition="id = id", type="semi")
      Gather(concurrent=true)
        LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id` FROM `test_hash_tb` AS `test_hash_tb` WHERE (`id` IN (...))")
      Project(id="id")
        MaterializedSemiJoin(condition="id = id AND name = name", type="semi")
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb2` AS `test_hash_tb2` WHERE ((`name` = 'xx') AND (((`id`, `name`)) IN (...)))")
          Project(id="id", name="name")
            SemiBKAJoin(condition="id = id AND create_time = create_time", type="semi")
              Gather(concurrent=true)
                LogicalView(tables="[0000-0003].test_hash_tb3", shardCount=4, sql="SELECT `id`, `name`, `create_time` FROM `test_hash_tb3` AS `test_hash_tb3` WHERE (`name` = 'xx')")
              Gather(concurrent=true)
                LogicalView(tables="[0000-0003].test_hash_tb4_[0,1]", shardCount=8, sql="SELECT `id`, `create_time` FROM `test_hash_tb4` AS `test_hash_tb4` WHERE (((`id`, `create_time`)) IN (...))")

- sql: |
    select a.id
    from
      test_hash_tb a
    where
       a.id in (
                  select b.id as id
                  from
                    test_hash_tb2 b
                  where
                    b.name='xx'
                    and
                    b.id in
                    (
                      select id
                      from test_hash_tb3 c
                      where
                      c.name=a.name

                    )
                )

  plan: |
    Project(id="id")
      Filter(condition="APPLY_BOOLEAN")
        CorrelateApply(cor=$cor0, leftConditions=[$0], opKind=EQUALS, type=SEMI)
          Gather(concurrent=true)
            LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb` AS `test_hash_tb`")
          MaterializedSemiJoin(condition="$f0 = $f0", type="semi")
            Gather(concurrent=true)
              LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id` AS `$f0` FROM `test_hash_tb2` AS `test_hash_tb2` WHERE ((`name` = 'xx') AND (`id` IN (...)))")
            Project($f0="id")
              Filter(condition="name = $cor0.name")
                Gather(concurrent=true)
                  LogicalView(tables="[0000-0003].test_hash_tb3", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb3` AS `test_hash_tb3`")
    cache node:

    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb` AS `test_hash_tb`")
    Gather(concurrent=true)
      LogicalView(tables="[0000-0003].test_hash_tb3", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb3` AS `test_hash_tb3`")

- sql: |
    select a.id
    from
      test_hash_tb a
    where
       exists (
                  select b.id as id
                  from
                    test_hash_tb2 b
                  where
                    b.id=a.id
                    and b.name='xx'
                    and b.id in
                    (
                      select id
                      from test_hash_tb3 c
                      where
                      c.name=b.name

                    )
                )

  plan: |
    gather(concurrent=true)
      logicalview(tables="[0000-0003].test_hash_tb,test_hash_tb2,test_hash_tb3", shardcount=4, sql="select `id` from `test_hash_tb` as `test_hash_tb` where (exists (select `id` from `test_hash_tb2` as `test_hash_tb2` where (((`id` = `test_hash_tb`.`id`) and (`name` = 'xx')) and (`id` in (select `id` from `test_hash_tb3` as `test_hash_tb3` where (((`name` = 'xx') and (`test_hash_tb2`.`id` = `id`)) and (`name` = `test_hash_tb2`.`name`)))))))")

- sql: |
    SELECT a.name
      FROM (
        SELECT a.name, b.id AS pk, a.create_time
        FROM test_hash_tb a JOIN test_hash_tb3 b ON a.id = b.id
      ) a
    WHERE exists( SELECT id FROM test_hash_tb2 b WHERE a.pk = b.id )

  plan: |

    gather(concurrent=true)
      logicalview(tables="[0000-0003].test_hash_tb,test_hash_tb3,test_hash_tb2", shardcount=4, sql="select `test_hash_tb`.`name` from `test_hash_tb` as `test_hash_tb` inner join `test_hash_tb3` as `test_hash_tb3` on (`test_hash_tb`.`id` = `test_hash_tb3`.`id`) where (exists (select `id` from `test_hash_tb2` as `test_hash_tb2` where (`test_hash_tb3`.`id` = `id`)))")

- sql: |
    /*+TDDL:SEMI_HASH_JOIN(test_hash_tb,test_hash_tb2)*/
    SELECT (SELECT id FROM test_hash_tb2 b WHERE a.id = b.name)
      FROM test_hash_tb a
    group by a.id

  plan: |
    Project((((SELECT id FROM test_hash_tb2 AS b WHERE (a.id = b.name))))="id0", cor=[$cor0])
      SemiHashJoin(condition="id = name", type="left")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id` FROM `test_hash_tb` AS `test_hash_tb`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name` FROM `test_hash_tb2` AS `test_hash_tb2`")

- sql: |
    SELECT * FROM test_hash_tb a,test_hash_tb2 b WHERE a.id=b.int_col4 and a.int_col1 > (SELECT sum(int_col2) FROM test_hash_tb2 c WHERE a.id = c.int_col4)

  plan: |
    Project(id="id0", name="name0", create_time="create_time0", int_col1="int_col10", int_col2="int_col20", int_col3="int_col30", int_col4="int_col40", int_col5="int_col50", int_col6="int_col60", id0="id", name0="name", create_time0="create_time", int_col10="int_col1", int_col20="int_col2", int_col30="int_col3", int_col40="int_col4", int_col50="int_col5", int_col60="int_col6")
      BKAJoin(condition="int_col4 = id AND int_col1 > f9w0$o0", type="inner")
        SortWindow(id="id", name="name", create_time="create_time", int_col1="int_col1", int_col2="int_col2", int_col3="int_col3", int_col4="int_col4", int_col5="int_col5", int_col6="int_col6", f9w0$o0="window#0SUM($4)", Reference Windows="window#0=window(partition {6} order by [] rows between UNBOUNDED PRECEDING and UNBOUNDED PRECEDING aggs [SUM($4)])")
          MergeSort(sort="int_col4 ASC")
            LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb2` AS `test_hash_tb2` ORDER BY `int_col4`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb` AS `test_hash_tb` WHERE (`id` IN (...))")

- sql: |
    SELECT * FROM test_hash_tb a,test_hash_tb2 b WHERE a.id=b.int_col4 and a.int_col1 > (SELECT sum(int_col2) FROM test_hash_tb2 c WHERE a.id = c.int_col4) and a.name!='a'


  plan: |
    Project(id="id0", name="name0", create_time="create_time0", int_col1="int_col10", int_col2="int_col20", int_col3="int_col30", int_col4="int_col40", int_col5="int_col50", int_col6="int_col60", id0="id", name0="name", create_time0="create_time", int_col10="int_col1", int_col20="int_col2", int_col30="int_col3", int_col40="int_col4", int_col50="int_col5", int_col60="int_col6")
      BKAJoin(condition="int_col4 = id AND int_col1 > f9w0$o0", type="inner")
        SortWindow(id="id", name="name", create_time="create_time", int_col1="int_col1", int_col2="int_col2", int_col3="int_col3", int_col4="int_col4", int_col5="int_col5", int_col6="int_col6", f9w0$o0="window#0SUM($4)", Reference Windows="window#0=window(partition {6} order by [] rows between UNBOUNDED PRECEDING and UNBOUNDED PRECEDING aggs [SUM($4)])")
          MergeSort(sort="int_col4 ASC")
            LogicalView(tables="[0000-0003].test_hash_tb2", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb2` AS `test_hash_tb2` ORDER BY `int_col4`")
        Gather(concurrent=true)
          LogicalView(tables="[0000-0003].test_hash_tb", shardCount=4, sql="SELECT `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` FROM `test_hash_tb` AS `test_hash_tb` WHERE ((`name` <> 'a') AND (`id` IN (...)))")

- sql: |
    SELECT * FROM test_hash_tb a,test_hash_tb2 b WHERE a.id=b.int_col4 and a.int_col1 > (SELECT sum(int_col2) FROM test_hash_tb2 c WHERE a.id = c.int_col4) and b.name!='a'


  plan: |

    project(id="id0", name="name0", create_time="create_time0", int_col1="int_col10", int_col2="int_col20", int_col3="int_col30", int_col4="int_col41", int_col5="int_col50", int_col6="int_col60", id0="id", name0="name", create_time0="create_time", int_col10="int_col1", int_col20="int_col2", int_col30="int_col3", int_col40="int_col40", int_col50="int_col5", int_col60="int_col6")
      bkajoin(condition="int_col40 = id and int_col4 = id and int_col1 > sum(int_col2)", type="inner")
        bkajoin(condition="int_col4 = int_col4", type="inner")
          hashagg(group="int_col4", sum(int_col2)="sum(sum(int_col2))")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `int_col4`, sum(`int_col2`) as `sum(int_col2)` from `test_hash_tb2` as `test_hash_tb2` group by `int_col4`")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` where ((`name` <> 'a') and (`int_col4` in (...)))")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` where (`id` in (...))")

- sql: |
    SELECT * FROM test_hash_tb a,test_hash_tb2 b WHERE a.id=b.int_col4 and a.int_col1 > (SELECT sum(int_col2) FROM test_hash_tb2 c WHERE a.id = c.int_col4 and c.name!='a') and b.name!='a'


  plan: |
    project(id="id0", name="name0", create_time="create_time0", int_col1="int_col10", int_col2="int_col20", int_col3="int_col30", int_col4="int_col41", int_col5="int_col50", int_col6="int_col60", id0="id", name0="name", create_time0="create_time", int_col10="int_col1", int_col20="int_col2", int_col30="int_col3", int_col40="int_col40", int_col50="int_col5", int_col60="int_col6")
      bkajoin(condition="int_col40 = id and int_col4 = id and int_col1 > sum(int_col2)", type="inner")
        bkajoin(condition="int_col4 = int_col4", type="inner")
          hashagg(group="int_col4", sum(int_col2)="sum(sum(int_col2))")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `int_col4`, sum(`int_col2`) as `sum(int_col2)` from `test_hash_tb2` as `test_hash_tb2` where (`name` <> 'a') group by `int_col4`")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` where ((`name` <> 'a') and (`int_col4` in (...)))")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` where (`id` in (...))")

- sql: |
    SELECT * FROM test_hash_tb a,test_hash_tb2 b WHERE a.id=b.int_col4 and a.int_col1 > (SELECT sum(int_col2) FROM test_hash_tb2 c WHERE a.id = c.int_col4 and c.name!='c') and b.name!='a'


  plan: |

    project(id="id0", name="name0", create_time="create_time0", int_col1="int_col10", int_col2="int_col20", int_col3="int_col30", int_col4="int_col41", int_col5="int_col50", int_col6="int_col60", id0="id", name0="name", create_time0="create_time", int_col10="int_col1", int_col20="int_col2", int_col30="int_col3", int_col40="int_col40", int_col50="int_col5", int_col60="int_col6")
      bkajoin(condition="int_col40 = id and int_col4 = id and int_col1 > sum(int_col2)", type="inner")
        bkajoin(condition="int_col4 = int_col4", type="inner")
          hashagg(group="int_col4", sum(int_col2)="sum(sum(int_col2))")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `int_col4`, sum(`int_col2`) as `sum(int_col2)` from `test_hash_tb2` as `test_hash_tb2` where (`name` <> 'c') group by `int_col4`")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` where ((`name` <> 'a') and (`int_col4` in (...)))")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` where (`id` in (...))")
- sql: |
    /*+TDDL:cmd_extra(WINDOW_FUNC_SUBQUERY_CONDITION=true)*/SELECT * FROM test_hash_tb a,test_hash_tb2 b WHERE a.id=b.int_col4 and a.int_col1 > (SELECT sum(int_col2) FROM test_hash_tb2 c WHERE a.id = c.int_col4 and c.name!='a') and b.name!='a'


  plan: |
    project(id="id0", name="name0", create_time="create_time0", int_col1="int_col10", int_col2="int_col20", int_col3="int_col30", int_col4="int_col40", int_col5="int_col50", int_col6="int_col60", id0="id", name0="name", create_time0="create_time", int_col10="int_col1", int_col20="int_col2", int_col30="int_col3", int_col40="int_col4", int_col50="int_col5", int_col60="int_col6")
      bkajoin(condition="int_col4 = id and int_col1 > f9w0$o0", type="inner")
        filter(condition="name <> 'a'")
          sortwindow(id="id", name="name", create_time="create_time", int_col1="int_col1", int_col2="int_col2", int_col3="int_col3", int_col4="int_col4", int_col5="int_col5", int_col6="int_col6", f9w0$o0="window#0sum($4)", reference windows="window#0=window(partition {6} order by [] rows between unbounded preceding and unbounded preceding aggs [sum($4)])")
            mergesort(sort="int_col4 asc")
              logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` order by `int_col4`")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` where (`id` in (...))")

- sql: |
    /*+TDDL:cmd_extra(WINDOW_FUNC_SUBQUERY_CONDITION=true)*/SELECT * FROM test_hash_tb a,test_hash_tb2 b WHERE a.id=b.int_col4 and a.int_col1 > (SELECT sum(int_col2) FROM test_hash_tb2 c WHERE a.id = c.int_col4 and c.name!='c') and b.name!='a'


  plan: |

    project(id="id0", name="name0", create_time="create_time0", int_col1="int_col10", int_col2="int_col20", int_col3="int_col30", int_col4="int_col41", int_col5="int_col50", int_col6="int_col60", id0="id", name0="name", create_time0="create_time", int_col10="int_col1", int_col20="int_col2", int_col30="int_col3", int_col40="int_col40", int_col50="int_col5", int_col60="int_col6")
      bkajoin(condition="int_col40 = id and int_col4 = id and int_col1 > sum(int_col2)", type="inner")
        bkajoin(condition="int_col4 = int_col4", type="inner")
          hashagg(group="int_col4", sum(int_col2)="sum(sum(int_col2))")
            gather(concurrent=true)
              logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `int_col4`, sum(`int_col2`) as `sum(int_col2)` from `test_hash_tb2` as `test_hash_tb2` where (`name` <> 'c') group by `int_col4`")
          gather(concurrent=true)
            logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` where ((`name` <> 'a') and (`int_col4` in (...)))")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` where (`id` in (...))")

- sql: |
    /*+TDDL:cmd_extra(WINDOW_FUNC_SUBQUERY_CONDITION=true)*/SELECT * FROM test_hash_tb a,test_hash_tb2 b WHERE a.id=b.int_col4 and a.int_col1 > (SELECT sum(int_col2) FROM test_hash_tb2 c WHERE a.id = c.int_col4 and c.name!='e' and c.name!='c') and b.name!='c' and b.name!='e'

  plan: |
    project(id="id0", name="name0", create_time="create_time0", int_col1="int_col10", int_col2="int_col20", int_col3="int_col30", int_col4="int_col40", int_col5="int_col50", int_col6="int_col60", id0="id", name0="name", create_time0="create_time", int_col10="int_col1", int_col20="int_col2", int_col30="int_col3", int_col40="int_col4", int_col50="int_col5", int_col60="int_col6")
      bkajoin(condition="int_col4 = id and int_col1 > f9w0$o0", type="inner")
        filter(condition="name <> 'c' and name <> 'e'")
          sortwindow(id="id", name="name", create_time="create_time", int_col1="int_col1", int_col2="int_col2", int_col3="int_col3", int_col4="int_col4", int_col5="int_col5", int_col6="int_col6", f9w0$o0="window#0sum($4)", reference windows="window#0=window(partition {6} order by [] rows between unbounded preceding and unbounded preceding aggs [sum($4)])")
            mergesort(sort="int_col4 asc")
              logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` order by `int_col4`")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` where (`id` in (...))")

- sql: |
    /*+TDDL:cmd_extra(WINDOW_FUNC_SUBQUERY_CONDITION=true)*/SELECT * FROM test_hash_tb a,test_hash_tb2 b WHERE a.id=b.int_col4 and b.int_col1 > (SELECT sum(int_col2) FROM test_hash_tb2 c WHERE a.id = c.int_col4 and c.name!='e' and c.name!='c') and b.name!='c' and b.name!='e'

  plan: |
    project(id="id0", name="name0", create_time="create_time0", int_col1="int_col10", int_col2="int_col20", int_col3="int_col30", int_col4="int_col40", int_col5="int_col50", int_col6="int_col60", id0="id", name0="name", create_time0="create_time", int_col10="int_col1", int_col20="int_col2", int_col30="int_col3", int_col40="int_col4", int_col50="int_col5", int_col60="int_col6")
      bkajoin(condition="int_col4 = id", type="inner")
        filter(condition="int_col1 > f9w0$o0 and name <> 'c' and name <> 'e'")
          sortwindow(id="id", name="name", create_time="create_time", int_col1="int_col1", int_col2="int_col2", int_col3="int_col3", int_col4="int_col4", int_col5="int_col5", int_col6="int_col6", f9w0$o0="window#0sum($4)", reference windows="window#0=window(partition {6} order by [] rows between unbounded preceding and unbounded preceding aggs [sum($4)])")
            mergesort(sort="int_col4 asc")
              logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb2` as `test_hash_tb2` order by `int_col4`")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id`, `name`, `create_time`, `int_col1`, `int_col2`, `int_col3`, `int_col4`, `int_col5`, `int_col6` from `test_hash_tb` as `test_hash_tb` where (`id` in (...))")

- sql: |
    /*+TDDL:cmd_extra(WINDOW_FUNC_SUBQUERY_CONDITION=true, ENABLE_CBO=true, WINDOW_FUNC_REORDER_JOIN=true )*/SELECT sum(b.int_col1) FROM test_hash_tb a,test_hash_tb2 b WHERE a.id=b.int_col4 and b.int_col1 > (SELECT sum(int_col2) FROM test_hash_tb2 c WHERE a.id = c.int_col4 and c.name!='e' and c.name!='c') and b.name!='c' and b.name!='e'

  plan: |
    hashagg(sum(b.int_col1)="sum(sum(b.int_col1))")
      bkajoin(condition="int_col4 = id", type="inner")
        sortagg(group="int_col4", sum(b.int_col1)="sum(int_col1)")
          filter(condition="int_col1 > f9w0$o0 and name <> 'c' and name <> 'e'")
            sortwindow(name="name", int_col1="int_col1", int_col2="int_col2", int_col4="int_col4", f4w0$o0="window#0sum($2)", reference windows="window#0=window(partition {3} order by [] rows between unbounded preceding and unbounded preceding aggs [sum($2)])")
              mergesort(sort="int_col4 asc")
                logicalview(tables="[0000-0003].test_hash_tb2", shardcount=4, sql="select `name`, `int_col1`, `int_col2`, `int_col4` from `test_hash_tb2` as `test_hash_tb2` order by `int_col4`")
        gather(concurrent=true)
          logicalview(tables="[0000-0003].test_hash_tb", shardcount=4, sql="select `id` from `test_hash_tb` as `test_hash_tb` where (`id` in (...))")
