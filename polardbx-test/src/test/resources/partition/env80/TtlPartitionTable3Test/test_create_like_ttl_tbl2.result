## DISABLE_FAST_SQL_PARSER
set TTL_DEBUG_USE_GSI_FOR_COLUMNAR_ARC_TBL = false
set TTL_DEBUG_CCI_SKIP_DDL_TASKS = "WaitColumnarTableAlterPartitionTask,WaitColumnarTableCreationTask"
set SKIP_DDL_TASKS="WaitColumnarTableAlterPartitionTask,WaitColumnarTableCreationTask"
set TTL_DEBUG_CURRENT_DATETIME='2024-06-27 00:00:00'
set TTL_FORBID_DROP_TTL_TBL_WITH_ARC_CCI = false
create table ttl_tbl_with_cci(
a int not null auto_increment,
b datetime default current_timestamp,
primary key(a)
)
ttl = ttl_definition( TTL_ENABLE = 'OFF' TTL_EXPR = `b` EXPIRE AFTER 2 MONTH TIMEZONE '+08:00' TTL_JOB = CRON '0 0 1 */2 * ? *' TIMEZONE '+08:00' ARCHIVE_TABLE_PRE_ALLOCATE = 2 ARCHIVE_TABLE_POST_ALLOCATE = 2 )
partition by key(a) partitions 2
create table ttl_tbl_with_cci_bak like ttl_tbl_with_cci engine='columnar' archive_mode='ttl'
create table ttl_tbl_with_cci2(
a int not null auto_increment,
b datetime default current_timestamp,
primary key(a)
)
ttl = ttl_definition( TTL_ENABLE = 'OFF' TTL_EXPR = `b` EXPIRE AFTER 2 MONTH TIMEZONE '+08:00' TTL_JOB = CRON '0 0 1 */2 * ? *' TIMEZONE '+08:00' ARCHIVE_TABLE_PRE_ALLOCATE = 2 ARCHIVE_TABLE_POST_ALLOCATE = 2 )
partition by key(a) partitions 2
## error_msg: $# has bound the archive table #$
create table ttl_tbl_with_cci_bak like ttl_tbl_with_cci engine='columnar' archive_mode='ttl'
has bound the archive table
## error_msg: $# already exists #$
create table ttl_tbl_with_cci_bak like ttl_tbl_with_cci2 engine='columnar' archive_mode='ttl'
already exists
create table ttl_tbl_with_cci_bak2 like ttl_tbl_with_cci2 engine='columnar' archive_mode='ttl'
## error_msg: $# already exists #$
CREATE TABLE `ttl_tbl_with_cci3` (
`a` int(11) NOT NULL AUTO_INCREMENT,
`b` datetime DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (`a`),
CLUSTERED COLUMNAR INDEX `arctmp_ttl_tbl_with_cci_bak` (`b`)
PARTITION BY RANGE COLUMNS(`b`)
(PARTITION pstart VALUES LESS THAN ('1970-01-02 00:00:00') ENGINE = Columnar,
PARTITION p202404 VALUES LESS THAN ('2024-05-01 00:00:00') ENGINE = Columnar,
PARTITION p202405 VALUES LESS THAN ('2024-06-01 00:00:00') ENGINE = Columnar,
PARTITION p202406 VALUES LESS THAN ('2024-07-01 00:00:00') ENGINE = Columnar,
PARTITION p202407 VALUES LESS THAN ('2024-08-01 00:00:00') ENGINE = Columnar,
PARTITION p202408 VALUES LESS THAN ('2024-09-01 00:00:00') ENGINE = Columnar,
PARTITION pmax VALUES LESS THAN (MAXVALUE) ENGINE = Columnar)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 TTL = TTL_DEFINITION( TTL_ENABLE = 'OFF', TTL_EXPR = `b` EXPIRE AFTER 2 MONTH TIMEZONE '+08:00', TTL_JOB = CRON '0 0 1 */2 * ? *' TIMEZONE '+08:00', ARCHIVE_TYPE = 'COLUMNAR', ARCHIVE_TABLE_NAME = 'ttl_tbl_with_cci_bak', ARCHIVE_TABLE_PRE_ALLOCATE = 2, ARCHIVE_TABLE_POST_ALLOCATE = 2 )
PARTITION BY KEY(`a`)
PARTITIONS 2
already exists
## error_msg: $# already exists #$
CREATE TABLE `ttl_tbl_with_cci3` (
`a` int(11) NOT NULL AUTO_INCREMENT,
`b` datetime DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (`a`),
CLUSTERED COLUMNAR INDEX `arctmp_ttl_tbl_with_cci` (`b`)
PARTITION BY RANGE COLUMNS(`b`)
(PARTITION pstart VALUES LESS THAN ('1970-01-02 00:00:00') ENGINE = Columnar,
PARTITION p202404 VALUES LESS THAN ('2024-05-01 00:00:00') ENGINE = Columnar,
PARTITION p202405 VALUES LESS THAN ('2024-06-01 00:00:00') ENGINE = Columnar,
PARTITION p202406 VALUES LESS THAN ('2024-07-01 00:00:00') ENGINE = Columnar,
PARTITION p202407 VALUES LESS THAN ('2024-08-01 00:00:00') ENGINE = Columnar,
PARTITION p202408 VALUES LESS THAN ('2024-09-01 00:00:00') ENGINE = Columnar,
PARTITION pmax VALUES LESS THAN (MAXVALUE) ENGINE = Columnar)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 TTL = TTL_DEFINITION( TTL_ENABLE = 'OFF', TTL_EXPR = `b` EXPIRE AFTER 2 MONTH TIMEZONE '+08:00', TTL_JOB = CRON '0 0 1 */2 * ? *' TIMEZONE '+08:00', ARCHIVE_TYPE = 'COLUMNAR', ARCHIVE_TABLE_NAME = 'ttl_tbl_with_cci', ARCHIVE_TABLE_PRE_ALLOCATE = 2, ARCHIVE_TABLE_POST_ALLOCATE = 2 )
PARTITION BY KEY(`a`)
PARTITIONS 2
already exists
## error_msg: $# already exists #$
CREATE TABLE `ttl_tbl_with_cci3` (
`a` int(11) NOT NULL AUTO_INCREMENT,
`b` datetime DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (`a`),
CLUSTERED COLUMNAR INDEX `arctmp_ttl_tbl_with_cci` (`b`)
PARTITION BY RANGE COLUMNS(`b`)
(PARTITION pstart VALUES LESS THAN ('1970-01-02 00:00:00') ENGINE = Columnar,
PARTITION p202404 VALUES LESS THAN ('2024-05-01 00:00:00') ENGINE = Columnar,
PARTITION p202405 VALUES LESS THAN ('2024-06-01 00:00:00') ENGINE = Columnar,
PARTITION p202406 VALUES LESS THAN ('2024-07-01 00:00:00') ENGINE = Columnar,
PARTITION p202407 VALUES LESS THAN ('2024-08-01 00:00:00') ENGINE = Columnar,
PARTITION p202408 VALUES LESS THAN ('2024-09-01 00:00:00') ENGINE = Columnar,
PARTITION pmax VALUES LESS THAN (MAXVALUE) ENGINE = Columnar)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 TTL = TTL_DEFINITION( TTL_ENABLE = 'OFF', TTL_EXPR = `b` EXPIRE AFTER 2 MONTH TIMEZONE '+08:00', TTL_JOB = CRON '0 0 1 */2 * ? *' TIMEZONE '+08:00', ARCHIVE_TYPE = 'COLUMNAR', ARCHIVE_TABLE_NAME = 'ttl_tbl_with_cci', ARCHIVE_TABLE_PRE_ALLOCATE = 2, ARCHIVE_TABLE_POST_ALLOCATE = 2 )
PARTITION BY KEY(`a`)
PARTITIONS 2
already exists
## error_msg: $#  not the same #$
CREATE TABLE `ttl_tbl_with_cci3` (
`a` int(11) NOT NULL AUTO_INCREMENT,
`b` datetime DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (`a`),
CLUSTERED COLUMNAR INDEX `arctmp_ttl_tbl_with_xxx` (`b`)
PARTITION BY RANGE COLUMNS(`b`)
(PARTITION pstart VALUES LESS THAN ('1970-01-02 00:00:00') ENGINE = Columnar,
PARTITION p202404 VALUES LESS THAN ('2024-05-01 00:00:00') ENGINE = Columnar,
PARTITION p202405 VALUES LESS THAN ('2024-06-01 00:00:00') ENGINE = Columnar,
PARTITION p202406 VALUES LESS THAN ('2024-07-01 00:00:00') ENGINE = Columnar,
PARTITION p202407 VALUES LESS THAN ('2024-08-01 00:00:00') ENGINE = Columnar,
PARTITION p202408 VALUES LESS THAN ('2024-09-01 00:00:00') ENGINE = Columnar,
PARTITION pmax VALUES LESS THAN (MAXVALUE) ENGINE = Columnar)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 TTL = TTL_DEFINITION( TTL_ENABLE = 'OFF', TTL_EXPR = `b` EXPIRE AFTER 2 MONTH TIMEZONE '+08:00', TTL_JOB = CRON '0 0 1 */2 * ? *' TIMEZONE '+08:00', ARCHIVE_TYPE = 'COLUMNAR', ARCHIVE_TABLE_NAME = 'ttl_tbl_with_yyy', ARCHIVE_TABLE_PRE_ALLOCATE = 2, ARCHIVE_TABLE_POST_ALLOCATE = 2 )
PARTITION BY KEY(`a`)
PARTITIONS 2
not the same
CREATE TABLE `ttl_tbl_with_cci3` (
`a` int(11) NOT NULL AUTO_INCREMENT,
`b` datetime DEFAULT CURRENT_TIMESTAMP,
PRIMARY KEY (`a`),
CLUSTERED COLUMNAR INDEX `arctmp_ttl_tbl_with_xxx` (`b`)
PARTITION BY RANGE COLUMNS(`b`)
(PARTITION pstart VALUES LESS THAN ('1970-01-02 00:00:00') ENGINE = Columnar,
PARTITION p202404 VALUES LESS THAN ('2024-05-01 00:00:00') ENGINE = Columnar,
PARTITION p202405 VALUES LESS THAN ('2024-06-01 00:00:00') ENGINE = Columnar,
PARTITION p202406 VALUES LESS THAN ('2024-07-01 00:00:00') ENGINE = Columnar,
PARTITION p202407 VALUES LESS THAN ('2024-08-01 00:00:00') ENGINE = Columnar,
PARTITION p202408 VALUES LESS THAN ('2024-09-01 00:00:00') ENGINE = Columnar,
PARTITION pmax VALUES LESS THAN (MAXVALUE) ENGINE = Columnar)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4 TTL = TTL_DEFINITION( TTL_ENABLE = 'OFF', TTL_EXPR = `b` EXPIRE AFTER 2 MONTH TIMEZONE '+08:00', TTL_JOB = CRON '0 0 1 */2 * ? *' TIMEZONE '+08:00', ARCHIVE_TYPE = 'COLUMNAR', ARCHIVE_TABLE_NAME = 'ttl_tbl_with_xxx', ARCHIVE_TABLE_PRE_ALLOCATE = 2, ARCHIVE_TABLE_POST_ALLOCATE = 2 )
PARTITION BY KEY(`a`)
PARTITIONS 2
drop table if exists ttl_tbl_with_cci
drop table if exists ttl_tbl_with_cci2
drop table if exists ttl_tbl_with_cci3;