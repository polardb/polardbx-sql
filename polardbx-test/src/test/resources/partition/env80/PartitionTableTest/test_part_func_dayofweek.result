## DISABLE_FAST_SQL_PARSER
## test create table(date)
CREATE TABLE `w1` (
`d` date DEFAULT NULL
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY HASH(DAYOFWEEK(`d`))
PARTITIONS 16;
show create table w1;
Table,Create Table
w1,CREATE TABLE `w1` (
	`d` date DEFAULT NULL,
	KEY `auto_shard_key_d` USING BTREE (`d`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY HASH(DAYOFWEEK(`d`))
PARTITIONS 16
## prepare data
insert into w1 values('2022-07-17'), ('2022-07-18'),('2022-07-19'),('2022-07-24');
## check point select
select * from w1 where d = '2022-07-17';
d
2022-07-17
select * from w1 where d = '2022-07-18';
d
2022-07-18
select * from w1 where d = '2022-07-19';
d
2022-07-19
select * from w1 where d = '2022-07-24';
d
2022-07-24
## explain
explain select * from w1 where d = '2022-07-17';
Logical ExecutionPlan
PhyTableOperation(tables="w1[p1]", sql="SELECT `w1`.`d` FROM ? AS `w1` WHERE (`w1`.`d` = ?)", params="2022-07-17")
explain select * from w1 where d = '2022-07-18';
Logical ExecutionPlan
PhyTableOperation(tables="w1[p6]", sql="SELECT `w1`.`d` FROM ? AS `w1` WHERE (`w1`.`d` = ?)", params="2022-07-18")
explain select * from w1 where d = '2022-07-19';
Logical ExecutionPlan
PhyTableOperation(tables="w1[p14]", sql="SELECT `w1`.`d` FROM ? AS `w1` WHERE (`w1`.`d` = ?)", params="2022-07-19")
explain select * from w1 where d = '2022-07-24';
Logical ExecutionPlan
PhyTableOperation(tables="w1[p1]", sql="SELECT `w1`.`d` FROM ? AS `w1` WHERE (`w1`.`d` = ?)", params="2022-07-24")
## range select
select * from w1 where (d > '2022-07-17' and d < '2022-07-19') or d between '2022-07-18' and '2022-07-19' order by d;
d
2022-07-18
2022-07-19
## full scan
select * from w1 where d > '2022-07-17' order by d;
d
2022-07-18
2022-07-19
2022-07-24
explain select * from w1 where d > '2022-07-17' order by d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="w1[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `d` FROM `w1` AS `w1` WHERE (`d` > ?) ORDER BY `d`")
select * from w1 where d > '2022-07-17' and d < '2022-12-31' order by d;
d
2022-07-18
2022-07-19
2022-07-24
explain select * from w1 where d > '2022-07-17' and d < '2022-12-31' order by d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="w1[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `d` FROM `w1` AS `w1` WHERE ((`d` > ?) AND (`d` < ?)) ORDER BY `d`")
## partition enumeration
select * from w1 where d > '2022-07-18' and d < '2022-07-24' order by d;
d
2022-07-19
explain select * from w1 where d > '2022-07-18' and d < '2022-07-24' order by d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="w1[p1,p3,p6,p7,p9,p12,p14]", shardCount=7, sql="SELECT `d` FROM `w1` AS `w1` WHERE ((`d` > ?) AND (`d` < ?)) ORDER BY `d`")
## test create table(datetime)
CREATE TABLE `w2` (
`dt` datetime DEFAULT NULL
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY HASH(DAYOFWEEK(`dt`))
PARTITIONS 16;
show create table w2;
Table,Create Table
w2,CREATE TABLE `w2` (
	`dt` datetime DEFAULT NULL,
	KEY `auto_shard_key_dt` USING BTREE (`dt`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY HASH(DAYOFWEEK(`dt`))
PARTITIONS 16
## prepare data
insert into w2 values('2022-07-17 00:00:00'), ('2022-07-18 00:00:00'),('2022-07-19 00:00:00'),('2022-07-24 00:00:00');
## check point select
select * from w2 where dt = '2022-07-17 00:00:00';
dt
2022-07-17 00:00:00.0
select * from w2 where dt = '2022-07-18 00:00:00';
dt
2022-07-18 00:00:00.0
select * from w2 where dt = '2022-07-19 00:00:00';
dt
2022-07-19 00:00:00.0
select * from w2 where dt = '2022-07-24 00:00:00';
dt
2022-07-24 00:00:00.0
## explain
explain select * from w2 where dt = '2022-07-17 00:00:00';
Logical ExecutionPlan
PhyTableOperation(tables="w2[p1]", sql="SELECT `w2`.`dt` FROM ? AS `w2` WHERE (`w2`.`dt` = ?)", params="2022-07-17 00:00:00")
explain select * from w2 where dt = '2022-07-18 00:00:00';
Logical ExecutionPlan
PhyTableOperation(tables="w2[p6]", sql="SELECT `w2`.`dt` FROM ? AS `w2` WHERE (`w2`.`dt` = ?)", params="2022-07-18 00:00:00")
explain select * from w2 where dt = '2022-07-19 00:00:00';
Logical ExecutionPlan
PhyTableOperation(tables="w2[p14]", sql="SELECT `w2`.`dt` FROM ? AS `w2` WHERE (`w2`.`dt` = ?)", params="2022-07-19 00:00:00")
explain select * from w2 where dt = '2022-07-24 00:00:00';
Logical ExecutionPlan
PhyTableOperation(tables="w2[p1]", sql="SELECT `w2`.`dt` FROM ? AS `w2` WHERE (`w2`.`dt` = ?)", params="2022-07-24 00:00:00")
## range select
select * from w2 where (dt > '2022-07-17 00:00:00' and dt < '2022-07-19 00:00:00') or dt between '2022-07-18 00:00:00' and '2022-07-19 00:00:00' order by dt;
dt
2022-07-18 00:00:00.0
2022-07-19 00:00:00.0
## full scan
select * from w2 where dt > '2022-07-17 00:00:00' order by dt;
dt
2022-07-18 00:00:00.0
2022-07-19 00:00:00.0
2022-07-24 00:00:00.0
explain select * from w2 where dt > '2022-07-17 00:00:00' order by dt;
Logical ExecutionPlan
MergeSort(sort="dt ASC")
  LogicalView(tables="w2[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `dt` FROM `w2` AS `w2` WHERE (`dt` > ?) ORDER BY `dt`")
select * from w2 where dt > '2022-07-17 00:00:00' and dt < '2022-12-31 00:00:00' order by dt;
dt
2022-07-18 00:00:00.0
2022-07-19 00:00:00.0
2022-07-24 00:00:00.0
explain select * from w2 where dt > '2022-07-17 00:00:00' and dt < '2022-12-31 00:00:00' order by dt;
Logical ExecutionPlan
MergeSort(sort="dt ASC")
  LogicalView(tables="w2[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `dt` FROM `w2` AS `w2` WHERE ((`dt` > ?) AND (`dt` < ?)) ORDER BY `dt`")
## partition enumeration
select * from w2 where dt > '2022-07-18 00:00:00' and dt < '2022-07-24 00:00:00' order by dt;
dt
2022-07-19 00:00:00.0
explain select * from w2 where dt > '2022-07-18 00:00:00' and dt < '2022-07-24 00:00:00' order by dt;
Logical ExecutionPlan
MergeSort(sort="dt ASC")
  LogicalView(tables="w2[p1,p3,p6,p7,p9,p12,p14]", shardCount=7, sql="SELECT `dt` FROM `w2` AS `w2` WHERE ((`dt` > ?) AND (`dt` < ?)) ORDER BY `dt`")
## test range partition
CREATE TABLE `w3` (
`d` date DEFAULT NULL
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY RANGE(DAYOFWEEK(`d`))
(PARTITION p2 VALUES LESS THAN (2) ENGINE = InnoDB,
PARTITION p3 VALUES LESS THAN (3) ENGINE = InnoDB,
PARTITION p4 VALUES LESS THAN (4) ENGINE = InnoDB,
PARTITION p5 VALUES LESS THAN (5) ENGINE = InnoDB,
PARTITION p6 VALUES LESS THAN (6) ENGINE = InnoDB,
PARTITION pd VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB);
show create table w3;
Table,Create Table
w3,CREATE TABLE `w3` (
	`d` date DEFAULT NULL,
	KEY `auto_shard_key_d` USING BTREE (`d`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY RANGE(DAYOFWEEK(`d`))
(PARTITION p2 VALUES LESS THAN (2) ENGINE = InnoDB,
 PARTITION p3 VALUES LESS THAN (3) ENGINE = InnoDB,
 PARTITION p4 VALUES LESS THAN (4) ENGINE = InnoDB,
 PARTITION p5 VALUES LESS THAN (5) ENGINE = InnoDB,
 PARTITION p6 VALUES LESS THAN (6) ENGINE = InnoDB,
 PARTITION pd VALUES LESS THAN (MAXVALUE) ENGINE = InnoDB)
## prepare data
insert into w3 values('2022-07-17'), ('2022-07-18'),('2022-07-19'),('2022-07-20'),('2022-07-21'),('2022-07-22'),('2022-07-23'),('2022-07-24');
select * from w3 order by d;
d
2022-07-17
2022-07-18
2022-07-19
2022-07-20
2022-07-21
2022-07-22
2022-07-23
2022-07-24
## check point select
select * from w3 where d = '2022-07-17';
d
2022-07-17
select * from w3 where d = '2022-07-18';
d
2022-07-18
select * from w3 where d = '2022-07-19';
d
2022-07-19
select * from w3 where d = '2022-07-20';
d
2022-07-20
select * from w3 where d = '2022-07-21';
d
2022-07-21
select * from w3 where d = '2022-07-22';
d
2022-07-22
select * from w3 where d = '2022-07-23';
d
2022-07-23
select * from w3 where d = '2022-07-24';
d
2022-07-24
## explain point select
explain select * from w3 where d = '2022-07-17';
Logical ExecutionPlan
PhyTableOperation(tables="w3[p2]", sql="SELECT `w3`.`d` FROM ? AS `w3` WHERE (`w3`.`d` = ?)", params="2022-07-17")
explain select * from w3 where d = '2022-07-18';
Logical ExecutionPlan
PhyTableOperation(tables="w3[p3]", sql="SELECT `w3`.`d` FROM ? AS `w3` WHERE (`w3`.`d` = ?)", params="2022-07-18")
explain select * from w3 where d = '2022-07-19';
Logical ExecutionPlan
PhyTableOperation(tables="w3[p4]", sql="SELECT `w3`.`d` FROM ? AS `w3` WHERE (`w3`.`d` = ?)", params="2022-07-19")
explain select * from w3 where d = '2022-07-20';
Logical ExecutionPlan
PhyTableOperation(tables="w3[p5]", sql="SELECT `w3`.`d` FROM ? AS `w3` WHERE (`w3`.`d` = ?)", params="2022-07-20")
explain select * from w3 where d = '2022-07-21';
Logical ExecutionPlan
PhyTableOperation(tables="w3[p6]", sql="SELECT `w3`.`d` FROM ? AS `w3` WHERE (`w3`.`d` = ?)", params="2022-07-21")
explain select * from w3 where d = '2022-07-22';
Logical ExecutionPlan
PhyTableOperation(tables="w3[pd]", sql="SELECT `w3`.`d` FROM ? AS `w3` WHERE (`w3`.`d` = ?)", params="2022-07-22")
explain select * from w3 where d = '2022-07-23';
Logical ExecutionPlan
PhyTableOperation(tables="w3[pd]", sql="SELECT `w3`.`d` FROM ? AS `w3` WHERE (`w3`.`d` = ?)", params="2022-07-23")
explain select * from w3 where d = '2022-07-24';
Logical ExecutionPlan
PhyTableOperation(tables="w3[p2]", sql="SELECT `w3`.`d` FROM ? AS `w3` WHERE (`w3`.`d` = ?)", params="2022-07-24")
## range select
select * from w3 where (d < '2022-07-23' and d > '2022-07-21') or d between '2022-07-21' and '2022-07-22' order by d;
d
2022-07-21
2022-07-22
## range select full scan
select * from w3 where d < '2022-07-24' order by d;
d
2022-07-17
2022-07-18
2022-07-19
2022-07-20
2022-07-21
2022-07-22
2022-07-23
explain select * from w3 where d < '2022-07-24' order by d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="w3[p2,p3,p4,p5,p6,pd]", shardCount=6, sql="SELECT `d` FROM `w3` AS `w3` WHERE (`d` < ?) ORDER BY `d`")
select * from w3 where d < '2022-07-24' and d >= '2022-07-17' order by d;
d
2022-07-17
2022-07-18
2022-07-19
2022-07-20
2022-07-21
2022-07-22
2022-07-23
explain select * from w3 where d < '2022-07-24' and d >= '2022-01-01' order by d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="w3[p2,p3,p4,p5,p6,pd]", shardCount=6, sql="SELECT `d` FROM `w3` AS `w3` WHERE ((`d` < ?) AND (`d` >= ?)) ORDER BY `d`")
## partition enumeration
select * from w3 where d < '2022-07-23' and d > '2022-07-20' order by d;
d
2022-07-21
2022-07-22
explain select * from w3 where d < '2022-07-23' and d > '2022-07-20' order by d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="w3[p5,p6,pd]", shardCount=3, sql="SELECT `d` FROM `w3` AS `w3` WHERE ((`d` < ?) AND (`d` > ?)) ORDER BY `d`")
## test list
CREATE TABLE `w4` (
`d` date DEFAULT NULL
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY LIST(DAYOFWEEK(`d`))
(PARTITION p1 VALUES IN (1) ENGINE = InnoDB,
PARTITION p2 VALUES IN (2) ENGINE = InnoDB,
PARTITION p3 VALUES IN (3) ENGINE = InnoDB,
PARTITION p4 VALUES IN (4) ENGINE = InnoDB,
PARTITION p5 VALUES IN (5) ENGINE = InnoDB,
PARTITION p6 VALUES IN (6) ENGINE = InnoDB,
PARTITION p7 VALUES IN (default) ENGINE = InnoDB);
show create table w4;
Table,Create Table
w4,CREATE TABLE `w4` (
	`d` date DEFAULT NULL,
	KEY `auto_shard_key_d` USING BTREE (`d`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY LIST(DAYOFWEEK(`d`))
(PARTITION p1 VALUES IN (1) ENGINE = InnoDB,
 PARTITION p2 VALUES IN (2) ENGINE = InnoDB,
 PARTITION p3 VALUES IN (3) ENGINE = InnoDB,
 PARTITION p4 VALUES IN (4) ENGINE = InnoDB,
 PARTITION p5 VALUES IN (5) ENGINE = InnoDB,
 PARTITION p6 VALUES IN (6) ENGINE = InnoDB,
 PARTITION p7 VALUES IN (DEFAULT) ENGINE = InnoDB)
## prepare data
insert into w4 values('2022-07-17'), ('2022-07-18'),('2022-07-19'),('2022-07-20'),('2022-07-21'),('2022-07-22'),('2022-07-23'),('2022-07-24');
select * from w4 order by d;
d
2022-07-17
2022-07-18
2022-07-19
2022-07-20
2022-07-21
2022-07-22
2022-07-23
2022-07-24
## check point select
select * from w4 where d = '2022-07-17';
d
2022-07-17
select * from w4 where d = '2022-07-18';
d
2022-07-18
select * from w4 where d = '2022-07-19';
d
2022-07-19
select * from w4 where d = '2022-07-20';
d
2022-07-20
select * from w4 where d = '2022-07-21';
d
2022-07-21
select * from w4 where d = '2022-07-22';
d
2022-07-22
select * from w4 where d = '2022-07-23';
d
2022-07-23
select * from w4 where d = '2022-07-24';
d
2022-07-24
## explain point select
explain select * from w4 where d = '2022-07-17';
Logical ExecutionPlan
PhyTableOperation(tables="w4[p1]", sql="SELECT `w4`.`d` FROM ? AS `w4` WHERE (`w4`.`d` = ?)", params="2022-07-17")
explain select * from w4 where d = '2022-07-18';
Logical ExecutionPlan
PhyTableOperation(tables="w4[p2]", sql="SELECT `w4`.`d` FROM ? AS `w4` WHERE (`w4`.`d` = ?)", params="2022-07-18")
explain select * from w4 where d = '2022-07-19';
Logical ExecutionPlan
PhyTableOperation(tables="w4[p3]", sql="SELECT `w4`.`d` FROM ? AS `w4` WHERE (`w4`.`d` = ?)", params="2022-07-19")
explain select * from w4 where d = '2022-07-20';
Logical ExecutionPlan
PhyTableOperation(tables="w4[p4]", sql="SELECT `w4`.`d` FROM ? AS `w4` WHERE (`w4`.`d` = ?)", params="2022-07-20")
explain select * from w4 where d = '2022-07-21';
Logical ExecutionPlan
PhyTableOperation(tables="w4[p5]", sql="SELECT `w4`.`d` FROM ? AS `w4` WHERE (`w4`.`d` = ?)", params="2022-07-21")
explain select * from w4 where d = '2022-07-22';
Logical ExecutionPlan
PhyTableOperation(tables="w4[p6]", sql="SELECT `w4`.`d` FROM ? AS `w4` WHERE (`w4`.`d` = ?)", params="2022-07-22")
explain select * from w4 where d = '2022-07-23';
Logical ExecutionPlan
PhyTableOperation(tables="w4[p7]", sql="SELECT `w4`.`d` FROM ? AS `w4` WHERE (`w4`.`d` = ?)", params="2022-07-23")
explain select * from w4 where d = '2022-07-24';
Logical ExecutionPlan
PhyTableOperation(tables="w4[p1]", sql="SELECT `w4`.`d` FROM ? AS `w4` WHERE (`w4`.`d` = ?)", params="2022-07-24")
## range test
select * from w4 where (d < '2022-07-23' and d > '2022-07-21') or d between '2022-07-21' and '2022-07-22' order by d;
d
2022-07-21
2022-07-22
## range select full scan
select * from w4 where d < '2022-07-24' order by d;
d
2022-07-17
2022-07-18
2022-07-19
2022-07-20
2022-07-21
2022-07-22
2022-07-23
explain select * from w4 where d < '2022-07-24' order by d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="w4[p1,p2,p3,p4,p5,p6,p7]", shardCount=7, sql="SELECT `d` FROM `w4` AS `w4` WHERE (`d` < ?) ORDER BY `d`")
select * from w4 where d < '2022-07-24' and d >= '2022-07-17' order by d;
d
2022-07-17
2022-07-18
2022-07-19
2022-07-20
2022-07-21
2022-07-22
2022-07-23
explain select * from w4 where d < '2022-07-24' and d >= '2022-01-01' order by d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="w4[p1,p2,p3,p4,p5,p6,p7]", shardCount=7, sql="SELECT `d` FROM `w4` AS `w4` WHERE ((`d` < ?) AND (`d` >= ?)) ORDER BY `d`")
## partition enumeration
select * from w4 where d < '2022-07-23' and d > '2022-07-20' order by d;
d
2022-07-21
2022-07-22
explain select * from w4 where d < '2022-07-23' and d > '2022-07-20' order by d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="w4[p4,p5,p6,p7]", shardCount=4, sql="SELECT `d` FROM `w4` AS `w4` WHERE ((`d` < ?) AND (`d` > ?)) ORDER BY `d`")
## test: spanning weeks and year
CREATE TABLE `w5` (
`d` date DEFAULT NULL
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY HASH(dayofweek(`d`))
PARTITIONS 7;
# prepare data
insert into w5 values('2021-12-30'),('2021-12-31'),('2022-01-01'),('2022-01-02');
# range select
select * from w5 where d > '2021-12-30' and d < '2022-01-02' order by d;
d
2021-12-31
2022-01-01
select * from w5 where d > '2021-12-30' and d <='2022-01-03' order by d;
d
2021-12-31
2022-01-01
2022-01-02
select * from w5 where d > '2021-12-30' order by d;
d
2021-12-31
2022-01-01
2022-01-02
#partition enumeration
select * from w5 where d >= '2021-12-30' and d <= '2022-01-02' order by d;
d
2021-12-30
2021-12-31
2022-01-01
2022-01-02
explain select * from w5 where d >= '2021-12-30' and d <= '2022-01-02' order by d;
Logical ExecutionPlan
MergeSort(sort="d ASC")
  LogicalView(tables="w5[p1,p2,p4,p5]", shardCount=4, sql="SELECT `d` FROM `w5` AS `w5` WHERE ((`d` >= ?) AND (`d` <= ?)) ORDER BY `d`")