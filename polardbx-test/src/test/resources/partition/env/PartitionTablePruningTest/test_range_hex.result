DROP TABLE IF EXISTS rc_char16_gbk_utf8;
CREATE TABLE IF NOT EXISTS rc_char16_gbk_utf8 (
	c1 char(16) CHARACTER SET gbk DEFAULT NULL,
	c2 char(16) CHARACTER SET utf8 DEFAULT NULL
)
PARTITION BY RANGE COLUMNS (c1, c2) (
	PARTITION p0 VALUES LESS THAN (0xcac0bde7, 0xe4b896e7958c),
	PARTITION p1 VALUES LESS THAN (0xcac0bde7c8cbc3f1, 0xe4b896e7958ce4babae6b091),
	PARTITION p2 VALUES LESS THAN (0xcac0bde7c8cbc3f1cdf2cbea, 0xe4b896e7958ce4babae6b091e4b887e5b281),
	PARTITION p3 VALUES LESS THAN (maxvalue, maxvalue)
);
EXPLAIN SELECT *
FROM rc_char16_gbk_utf8
WHERE c1 = 0xE4B896E7958C;
Logical ExecutionPlan
PhyTableOperation(tables="rc_char16_gbk_utf8[p0]", sql="SELECT `rc_char16_gbk_utf8`.`c1`, `rc_char16_gbk_utf8`.`c2` FROM ? AS `rc_char16_gbk_utf8` WHERE (`rc_char16_gbk_utf8`.`c1` = CONVERT(? USING 'GBK'))", params="0xE4B896E7958C")
DROP TABLE IF EXISTS rc_varchar16_gbk_utf8;
CREATE TABLE IF NOT EXISTS rc_varchar16_gbk_utf8 (
	c1 varchar(16) CHARACTER SET gbk DEFAULT NULL,
	c2 varchar(16) CHARACTER SET utf8 DEFAULT NULL
)
PARTITION BY RANGE COLUMNS (c1, c2) (
	PARTITION p0 VALUES LESS THAN (0xcac0bde7, 0xe4b896e7958c),
	PARTITION p1 VALUES LESS THAN (0xcac0bde7c8cbc3f1, 0xe4b896e7958ce4babae6b091),
	PARTITION p2 VALUES LESS THAN (0xcac0bde7c8cbc3f1cdf2cbea, 0xe4b896e7958ce4babae6b091e4b887e5b281),
	PARTITION p3 VALUES LESS THAN (maxvalue, maxvalue)
);
EXPLAIN SELECT *
FROM rc_varchar16_gbk_utf8
WHERE c1 = 0xE4B896E7958C;
Logical ExecutionPlan
PhyTableOperation(tables="rc_varchar16_gbk_utf8[p0]", sql="SELECT `rc_varchar16_gbk_utf8`.`c1`, `rc_varchar16_gbk_utf8`.`c2` FROM ? AS `rc_varchar16_gbk_utf8` WHERE (`rc_varchar16_gbk_utf8`.`c1` = CONVERT(? USING 'GBK'))", params="0xE4B896E7958C")
