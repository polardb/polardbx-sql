## DISABLE_FAST_SQL_PARSER
CREATE TABLE `ch_t1_f_f` (
`id` bigint(20) NOT NULL AUTO_INCREMENT,
`sid` varchar(32) DEFAULT NULL,
`user_id` varchar(32) DEFAULT NULL,
`order_id` varchar(32) DEFAULT NULL,
`order_time` datetime DEFAULT NULL,
PRIMARY KEY (`id`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY CO_HASH(SUBSTR(`order_id`,-4),SUBSTR(`user_id`,-4))
PARTITIONS 16;
CREATE TABLE `ch_t2_f_f` (
`id` bigint(20) NOT NULL AUTO_INCREMENT,
`sid` varchar(32) DEFAULT NULL,
`user_id` varchar(32) DEFAULT NULL,
`order_id` varchar(32) DEFAULT NULL,
`order_time` datetime DEFAULT NULL,
PRIMARY KEY (`id`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY CO_HASH(SUBSTR(`order_id`,-4),SUBSTR(`user_id`,-4))
PARTITIONS 16;
## point-select
explain select * from ch_t1_f_f where user_id='12345678';
Logical ExecutionPlan
PhyTableOperation(tables="ch_t1_f_f[p14]", sql="SELECT `ch_t1_f_f`.`id`, `ch_t1_f_f`.`sid`, `ch_t1_f_f`.`user_id`, `ch_t1_f_f`.`order_id`, `ch_t1_f_f`.`order_time` FROM ? AS `ch_t1_f_f` WHERE (`ch_t1_f_f`.`user_id` = ?)", params="12345678")
explain select * from ch_t1_f_f where order_id='abcdefg12345678';
Logical ExecutionPlan
PhyTableOperation(tables="ch_t1_f_f[p14]", sql="SELECT `ch_t1_f_f`.`id`, `ch_t1_f_f`.`sid`, `ch_t1_f_f`.`user_id`, `ch_t1_f_f`.`order_id`, `ch_t1_f_f`.`order_time` FROM ? AS `ch_t1_f_f` WHERE (`ch_t1_f_f`.`order_id` = ?)", params="abcdefg12345678")
explain select * from ch_t1_f_f where order_id='abcdefg12345678' or user_id='12345678';
Logical ExecutionPlan
Gather(concurrent=true)
  LogicalView(tables="ch_t1_f_f[p14]", sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE ((`order_id` = ?) OR (`user_id` = ?))")
explain select * from ch_t1_f_f where order_id='abcdefg12345678' and user_id='12345678';
Logical ExecutionPlan
PhyTableOperation(tables="ch_t1_f_f[p14]", sql="SELECT `ch_t1_f_f`.`id`, `ch_t1_f_f`.`sid`, `ch_t1_f_f`.`user_id`, `ch_t1_f_f`.`order_id`, `ch_t1_f_f`.`order_time` FROM ? AS `ch_t1_f_f` WHERE ((`ch_t1_f_f`.`order_id` = ?) AND (`ch_t1_f_f`.`user_id` = ?))", params="12345678,abcdefg12345678")
explain select * from ch_t1_f_f where (order_id,user_id) = ('abcdefg12345678','12345678');
Logical ExecutionPlan
PhyTableOperation(tables="ch_t1_f_f[p14]", sql="SELECT `ch_t1_f_f`.`id`, `ch_t1_f_f`.`sid`, `ch_t1_f_f`.`user_id`, `ch_t1_f_f`.`order_id`, `ch_t1_f_f`.`order_time` FROM ? AS `ch_t1_f_f` WHERE ((`ch_t1_f_f`.`order_id`, `ch_t1_f_f`.`user_id`) =(?, ?))", params="12345678,abcdefg12345678")
explain select * from ch_t1_f_f where order_id in ('abcdefg12345678') and user_id in ('12345678');
Logical ExecutionPlan
Gather(concurrent=true)
  LogicalView(tables="ch_t1_f_f[p14]", sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE ((`order_id` IN(?)) AND (`user_id` IN(?)))")
explain select * from ch_t1_f_f where (order_id,user_id) in (('abcdefg12345678','12345678'));
Logical ExecutionPlan
Gather(concurrent=true)
  LogicalView(tables="ch_t1_f_f[p14]", sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE (((`order_id`, `user_id`)) IN(?))")
## point-select2
explain select * from ch_t1_f_f where user_id='12345679';
Logical ExecutionPlan
PhyTableOperation(tables="ch_t1_f_f[p7]", sql="SELECT `ch_t1_f_f`.`id`, `ch_t1_f_f`.`sid`, `ch_t1_f_f`.`user_id`, `ch_t1_f_f`.`order_id`, `ch_t1_f_f`.`order_time` FROM ? AS `ch_t1_f_f` WHERE (`ch_t1_f_f`.`user_id` = ?)", params="12345679")
explain select * from ch_t1_f_f where order_id='abcdefg12345678';
Logical ExecutionPlan
PhyTableOperation(tables="ch_t1_f_f[p14]", sql="SELECT `ch_t1_f_f`.`id`, `ch_t1_f_f`.`sid`, `ch_t1_f_f`.`user_id`, `ch_t1_f_f`.`order_id`, `ch_t1_f_f`.`order_time` FROM ? AS `ch_t1_f_f` WHERE (`ch_t1_f_f`.`order_id` = ?)", params="abcdefg12345678")
explain select * from ch_t1_f_f where order_id='abcdefg12345678' or user_id='12345679';
Logical ExecutionPlan
Gather(concurrent=true)
  LogicalView(tables="ch_t1_f_f[p7,p14]", shardCount=2, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE ((`order_id` = ?) OR (`user_id` = ?))")
explain select * from ch_t1_f_f where order_id='abcdefg12345678' and user_id='12345679';
Logical ExecutionPlan
LogicalView(tables="ch_t1_f_f[]", shardCount=0, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE ((`order_id` = ?) AND (`user_id` = ?))")
explain select * from ch_t1_f_f where (order_id,user_id) = ('abcdefg12345678','12345679');
Logical ExecutionPlan
LogicalView(tables="ch_t1_f_f[]", shardCount=0, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE ((`order_id`, `user_id`) =(?, ?))")
explain select * from ch_t1_f_f where order_id in ('abcdefg12345678') and user_id in ('12345679');
Logical ExecutionPlan
Gather(concurrent=true)
  LogicalView(tables="ch_t1_f_f[]", shardCount=0, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE ((`order_id` IN(?)) AND (`user_id` IN(?)))")
explain select * from ch_t1_f_f where (order_id,user_id) in (('abcdefg12345678','12345679'));
Logical ExecutionPlan
Gather(concurrent=true)
  LogicalView(tables="ch_t1_f_f[]", shardCount=0, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE (((`order_id`, `user_id`)) IN(?))")
## range-select
explain select * from ch_t1_f_f where user_id>='12345678';
Logical ExecutionPlan
Gather(concurrent=true)
  LogicalView(tables="ch_t1_f_f[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE (`user_id` >= ?)")
explain select * from ch_t1_f_f where order_id<='abcdefg12345678';
Logical ExecutionPlan
Gather(concurrent=true)
  LogicalView(tables="ch_t1_f_f[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE (`order_id` <= ?)")
explain select * from ch_t1_f_f where order_id>='abcdefg12345678' or user_id<='12345678';
Logical ExecutionPlan
Gather(concurrent=true)
  LogicalView(tables="ch_t1_f_f[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE ((`order_id` >= ?) OR (`user_id` <= ?))")
explain select * from ch_t1_f_f where order_id<='abcdefg12345678' and user_id>='12345678';
Logical ExecutionPlan
Gather(concurrent=true)
  LogicalView(tables="ch_t1_f_f[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE ((`order_id` <= ?) AND (`user_id` >= ?))")
explain select * from ch_t1_f_f where (order_id,user_id) >= ('abcdefg12345678','12345678');
Logical ExecutionPlan
Gather(concurrent=true)
  LogicalView(tables="ch_t1_f_f[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f` WHERE ((`order_id`, `user_id`) >=(?, ?))")
# insert
insert into ch_t1_f_f (id, order_id, user_id) values (null,'abcdefg12345678', '12345678');
# insert2
## error_msg: $# no partition #$
insert into ch_t1_f_f (id, order_id, user_id) values (null,'abcdefg12345678', '12345679');
no partition
# update1
insert into ch_t1_f_f (id, order_id, user_id) values (null,'abcdefg12345678', '12345678');
## update should set both user_id and order_id
## error_msg: $# no partition #$
update ch_t1_f_f set user_id='12345679',sid='mytest' where order_id='abcdefg12345678';
no partition
select * from ch_t1_f_f where user_id='12345679';
id,sid,user_id,order_id,order_time
select * from ch_t1_f_f where order_id='abcdefg12345678';
id,sid,user_id,order_id,order_time
1,null,12345678,abcdefg12345678,null
3,null,12345678,abcdefg12345678,null
# update2
insert into ch_t1_f_f (id, order_id, user_id) values (null,'abcdefg12345677', '12345677');
update ch_t1_f_f set user_id='12345676', order_id='abcdefg12345676', sid='mytest2' where order_id='abcdefg12345677';
select * from ch_t1_f_f where user_id='12345676';
id,sid,user_id,order_id,order_time
4,mytest2,12345676,abcdefg12345676,null
select * from ch_t1_f_f where order_id='abcdefg12345676';
id,sid,user_id,order_id,order_time
4,mytest2,12345676,abcdefg12345676,null
# join
insert into ch_t1_f_f (id, order_id, user_id) values (null,'abcdefg12345677', '12345677');
insert into ch_t2_f_f (id, order_id, user_id) values (null,'abcdefg12345677', '12345677');
explain select * from ch_t1_f_f t1 join ch_t2_f_f t2 on t1.order_id=t2.order_id;
Logical ExecutionPlan
BKAJoin(condition="order_id = order_id", type="inner")
  Gather(concurrent=true)
    LogicalView(tables="ch_t1_f_f[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f`")
  Gather(concurrent=true)
    LogicalView(tables="ch_t2_f_f[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t2_f_f` AS `ch_t2_f_f` WHERE (`order_id` IN (...))")
explain select * from ch_t1_f_f t1 join ch_t2_f_f t2 on t1.user_id=t2.user_id;
Logical ExecutionPlan
BKAJoin(condition="user_id = user_id", type="inner")
  Gather(concurrent=true)
    LogicalView(tables="ch_t1_f_f[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t1_f_f` AS `ch_t1_f_f`")
  Gather(concurrent=true)
    LogicalView(tables="ch_t2_f_f[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `id`, `sid`, `user_id`, `order_id`, `order_time` FROM `ch_t2_f_f` AS `ch_t2_f_f` WHERE (`user_id` IN (...))")
explain select * from ch_t1_f_f t1 join ch_t2_f_f t2 on t1.order_id=t2.order_id and t1.user_id=t2.user_id;
Logical ExecutionPlan
Gather(concurrent=true)
  LogicalView(tables="ch_t1_f_f[p1,p2,p3,...p16],ch_t2_f_f[p1,p2,p3,...p16]", shardCount=16, sql="SELECT `ch_t1_f_f`.`id`, `ch_t1_f_f`.`sid`, `ch_t1_f_f`.`user_id`, `ch_t1_f_f`.`order_id`, `ch_t1_f_f`.`order_time`, `ch_t2_f_f`.`id` AS `id0`, `ch_t2_f_f`.`sid` AS `sid0`, `ch_t2_f_f`.`user_id` AS `user_id0`, `ch_t2_f_f`.`order_id` AS `order_id0`, `ch_t2_f_f`.`order_time` AS `order_time0` FROM `ch_t1_f_f` AS `ch_t1_f_f` INNER JOIN `ch_t2_f_f` AS `ch_t2_f_f` ON ((`ch_t1_f_f`.`user_id` = `ch_t2_f_f`.`user_id`) AND (`ch_t1_f_f`.`order_id` = `ch_t2_f_f`.`order_id`))")
