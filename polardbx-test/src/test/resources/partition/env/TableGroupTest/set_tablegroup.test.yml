## DISABLE_FAST_SQL_PARSER
create tablegroup t_a_t_s_tg1;
create tablegroup t_a_t_s_tg2;
create tablegroup t_a_t_s_tg3;
create tablegroup t_a_t_s_tg4;
create tablegroup t_a_t_s_tg5;
create tablegroup t_a_t_s_tg6;
create tablegroup t_a_t_s_tg7;
create tablegroup t_a_t_s_tg8;
create tablegroup t_a_t_s_tg9;
create tablegroup t_a_t_s_tg10;
create tablegroup t_a_t_s_tg11;
create table if not exists st_1(a int) single;
create table if not exists st_2(b varchar(20)) single;
create table if not exists bt_1(a int) broadcast;
create table if not exists bt_2(b varchar(20)) broadcast;
alter table st_1 set tablegroup=t_a_t_s_tg1;
alter table st_2 set tablegroup=t_a_t_s_tg1;
  ## error_msg: $# change tablegroup of broadcast table is not allow #$
alter table bt_1 set tablegroup=t_a_t_s_tg1;
create table if not exists pt_k_1(a int) partition by key(a) partitions 2;
create table if not exists pt_k_2(b int) partition by key(b) partitions 3;
create table if not exists pt_k_3(c bigint) partition by key(c) partitions 4;
create table if not exists pt_k_4(a int, b int) partition by key(a,b) partitions 5;
create table if not exists pt_k_5(a int, b bigint) partition by key(a,b) partitions 6;
create table if not exists pt_k_6(a bigint, b int) partition by key(a,b) partitions 2;
create table if not exists pt_k_7(a varchar(20)) partition by key(a) partitions 3;
create table if not exists pt_k_8(b varchar(30)) partition by key(b) partitions 4;
create table if not exists pt_k_9(a datetime) partition by key(a) partitions 5;
create table if not exists pt_k_10(a datetime, b datetime) partition by key(a,b) partitions 6;
alter table pt_k_1 split partition p1;
alter table pt_k_6 split into partitions 3 by hot value(88);
  ## error_msg: $# is not match to table #$
alter table pt_k_1 set tablegroup=t_a_t_s_tg1;
alter table pt_k_1 set tablegroup=t_a_t_s_tg2 force;
alter table pt_k_2 set tablegroup=t_a_t_s_tg2 force;
  ## error_msg: $# is not match to table #$
alter table pt_k_3 set tablegroup=t_a_t_s_tg2 force;
alter table pt_k_4 set tablegroup=t_a_t_s_tg2 force;
alter table pt_k_5 set tablegroup=t_a_t_s_tg2 force;
  ## error_msg: $# is not match to table #$
alter table pt_k_6 set tablegroup=t_a_t_s_tg2 force;
alter table pt_k_6 set tablegroup=t_a_t_s_tg10 force;
  ## error_msg: $# is not compatible with tablegroup #$
alter table pt_k_7 set tablegroup=t_a_t_s_tg10 force;
alter table pt_k_7 set tablegroup=t_a_t_s_tg4 force;
  ## error_msg: $# is not match to table #$
alter table pt_k_8 set tablegroup=t_a_t_s_tg4 force;
alter table pt_k_8 set tablegroup=t_a_t_s_tg5 force;
  ## error_msg: $# is not match to table #$
alter table pt_k_9 set tablegroup=t_a_t_s_tg2 force;
alter table pt_k_9 set tablegroup=t_a_t_s_tg6 force;
alter table pt_k_10 set tablegroup=t_a_t_s_tg6 force;
create table if not exists pt_h_1(a int, b int) partition by hash(a,b) partitions 2;
create table if not exists pt_h_2(b bigint, c varchar(20)) partition by hash(b,c) partitions 3;
create table if not exists pt_h_3(a bigint, c varchar(30)) partition by hash(a,c) partitions 4;
alter table pt_h_1 split partition p1;
alter table pt_h_1 set tablegroup=t_a_t_s_tg7 force;
  ## error_msg: $# is not match to table #$
alter table pt_h_2 set tablegroup=t_a_t_s_tg7 force;
alter table pt_h_2 set tablegroup=t_a_t_s_tg8 force;
  ## error_msg: $# is not match to table #$
alter table pt_h_3 set tablegroup=t_a_t_s_tg8 force;
create table if not exists pt_r_1(a int, b int) partition by range(a) (partition p1 values less than(20), partition p3 values less than(maxvalue));
create table if not exists pt_r_2(b int) partition by range(b) (partition p4 values less than(10), partition p5 values less than(50));
create table if not exists pt_r_3(c bigint) partition by range(c) (partition p5 values less than(10), partition p7 values less than(maxvalue));
create table if not exists pt_r_4(d datetime) partition by range(year(d)) (partition p10 values less than(15), partition p30 values less than(90));
alter table pt_r_1 set tablegroup=t_a_t_s_tg2 force;
alter table pt_r_2 set tablegroup=t_a_t_s_tg2 force;
  ## error_msg: $# is not match to table #$
alter table pt_r_3 set tablegroup=t_a_t_s_tg2 force;
alter table pt_r_3 set tablegroup=t_a_t_s_tg3 force;
alter table pt_r_3 set tablegroup=t_a_t_s_tg9 force;
alter table pt_r_4 set tablegroup=t_a_t_s_tg11 force;
create table if not exists pt_rc_1(a int, b int) partition by range columns(a,b) (partition p1 values less than(20,20), partition p3 values less than(200,20));
create table if not exists pt_rc_2(a int, b bigint) partition by range columns(a,b) (partition p4 values less than(20, 20), partition p3 values less than(200,100));
create table if not exists pt_rc_3(d datetime, e datetime) partition by range columns(d,e) (partition p10 values less than('2022-01-12 10:20','2022-02-12 10:20'), partition p30 values less than('2025-01-12 10:20','2023-01-12 10:20'));
alter table pt_rc_1 set tablegroup=t_a_t_s_tg2 force;
alter table pt_rc_2 set tablegroup=t_a_t_s_tg2 force;
  ## error_msg: $# is not match to table #$
alter table pt_rc_3 set tablegroup=t_a_t_s_tg9 force;
alter table pt_rc_3 set tablegroup=t_a_t_s_tg6 force;

create table if not exists pt_l_1(a int, b int) partition by list(a) (partition p1 values in(1,2,3), partition p3 values in(4,5,6));
create table if not exists pt_l_2(a1 int, b int) partition by list(b) (partition p1 values in(1,2,3), partition p3 values in(default));
create table if not exists pt_l_3(a3 datetime, b int) partition by list(year(a3)) (partition p4 values in(1,2,3), partition p21 values in(default));
alter table pt_l_1 set tablegroup=t_a_t_s_tg2 force;
alter table pt_l_2 set tablegroup=t_a_t_s_tg2 force;
alter table pt_l_3 set tablegroup=t_a_t_s_tg11 force;
create table if not exists pt_lc_1(a int, b int) partition by list columns(a,b) (partition p1 values in((1,2),(2,3)), partition p3 values in((3,5),(6,7)));
create table if not exists pt_lc_2(a1 int, b bigint) partition by list columns(b,a1) (partition p1 values in((1,2),(2,3)), partition p3 values in((3,5),(6,7)), partition p21 values in(default));
create table if not exists pt_lc_4(a3 varchar(20), b int) partition by list columns(a3,b) (partition p4 values in(('1',1),('2',2),('3',3)), partition p21 values in(('default',2)));
alter table pt_lc_1 set tablegroup=t_a_t_s_tg2 force;
alter table pt_lc_2 set tablegroup=t_a_t_s_tg10 force;
  ## error_msg: $# is not match to table #$
alter table pt_lc_4 set tablegroup=t_a_t_s_tg5 force;
alter table pt_lc_4 set tablegroup=t_a_t_s_tg4 force;

/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_k_1;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_k_2;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_k_3;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_k_4;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_k_5;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_k_6;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_k_7;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_k_8;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_k_9;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_k_10;

/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_h_1;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_h_2;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_h_3;

/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_r_1;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_r_2;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_r_3;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_r_4;

/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_rc_1;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_rc_2;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_rc_3;

/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_l_1;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_l_2;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_l_3;

/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_lc_1;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_lc_2;
/*TDDL:SHOW_HASH_PARTITIONS_BY_RANGE=TRUE*/show full create table pt_lc_4;