DROP TABLE IF EXISTS tbl;
CREATE TABLE IF NOT EXISTS tbl (
	a int NOT NULL
)
PARTITION BY HASH (a) PARTITIONS 4;
SHOW CREATE TABLE tbl;
Table,Create Table
tbl,CREATE TABLE `tbl` (
	`a` int(11) NOT NULL,
	KEY `auto_shard_key_a` USING BTREE (`a`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY KEY(`a`)
PARTITIONS 4
INSERT INTO tbl
VALUES (10),
	(99),
	(100),
	(101);
SELECT *
FROM tbl
ORDER BY a;
a
10
99
100
101
EXPLAIN SELECT *
FROM tbl
WHERE a = 99
ORDER BY a;
Logical ExecutionPlan
LogicalView(tables="tbl[p1]", sql="SELECT `a` FROM `tbl` AS `tbl` WHERE (`a` = ?) ORDER BY `a`")
EXPLAIN SELECT *
FROM tbl
WHERE a = 200
ORDER BY a;
Logical ExecutionPlan
LogicalView(tables="tbl[p4]", sql="SELECT `a` FROM `tbl` AS `tbl` WHERE (`a` = ?) ORDER BY `a`")
EXPLAIN SELECT *
FROM tbl
WHERE a < 200
ORDER BY a;
Logical ExecutionPlan
MergeSort(sort="a ASC")
  LogicalView(tables="tbl[p1,p2,p3,p4]", shardCount=4, sql="SELECT `a` FROM `tbl` AS `tbl` WHERE (`a` < ?) ORDER BY `a`")
DROP TABLE IF EXISTS tbl;
DROP TABLE IF EXISTS tbl;
CREATE TABLE IF NOT EXISTS tbl (
	a datetime NOT NULL
)
PARTITION BY HASH (year(a)) PARTITIONS 4;
SHOW CREATE TABLE tbl;
Table,Create Table
tbl,CREATE TABLE `tbl` (
	`a` datetime NOT NULL,
	KEY `auto_shard_key_a` USING BTREE (`a`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY HASH(YEAR(`a`))
PARTITIONS 4
INSERT INTO tbl
VALUES ('2012-10-12 12:12:12'),
	('2010-10-12 12:12:12'),
	('2011-10-12 12:12:12'),
	('2014-10-12 12:12:12');
SELECT *
FROM tbl
ORDER BY a;
a
2010-10-12 12:12:12.0
2011-10-12 12:12:12.0
2012-10-12 12:12:12.0
2014-10-12 12:12:12.0
EXPLAIN SELECT *
FROM tbl
WHERE a = '2012-10-12 12:12:12'
ORDER BY a;
Logical ExecutionPlan
LogicalView(tables="tbl[p3]", sql="SELECT `a` FROM `tbl` AS `tbl` WHERE (`a` = ?) ORDER BY `a`")
EXPLAIN SELECT *
FROM tbl
WHERE a > '2010-10-12 12:12:12'
ORDER BY a;
Logical ExecutionPlan
MergeSort(sort="a ASC")
  LogicalView(tables="tbl[p1,p2,p3,p4]", shardCount=4, sql="SELECT `a` FROM `tbl` AS `tbl` WHERE (`a` > ?) ORDER BY `a`")
DROP TABLE IF EXISTS tbl;
