## DISABLE_FAST_SQL_PARSER
CREATE TABLE `sbtest1` (
`id` int(11) NOT NULL,
`k` int(11) NOT NULL DEFAULT '0',
`create_time` char(120) NOT NULL DEFAULT '',
`pad` char(60) NOT NULL DEFAULT '',
KEY `auto_shard_key_id` USING BTREE (`id`),
KEY `auto_shard_key_create_time` USING BTREE (`create_time`),
KEY `k_1` (`k`)
) ENGINE = InnoDB DEFAULT CHARSET = utf8mb4
PARTITION BY KEY(`id`)
PARTITIONS 8
SUBPARTITION BY RANGE COLUMNS(`create_time`)
(SUBPARTITION `sp202305` VALUES LESS THAN ('2023-06-01 00:00:00'),
SUBPARTITION `sp202306` VALUES LESS THAN ('2023-07-01 00:00:00'),
SUBPARTITION `sp202307` VALUES LESS THAN ('2023-08-01 00:00:00'),
SUBPARTITION `sp202308` VALUES LESS THAN ('2023-09-01 00:00:00'),
SUBPARTITION `sp202309` VALUES LESS THAN ('2023-10-01 00:00:00'),
SUBPARTITION `sp202310` VALUES LESS THAN ('2023-11-01 00:00:00'),
SUBPARTITION `sp202311` VALUES LESS THAN ('2023-12-01 00:00:00'),
SUBPARTITION `sp202312` VALUES LESS THAN ('2024-01-01 00:00:00'),
SUBPARTITION `sp202401` VALUES LESS THAN ('2024-02-01 00:00:00'),
SUBPARTITION `sp202402` VALUES LESS THAN ('2024-03-01 00:00:00'),
SUBPARTITION `sp202403` VALUES LESS THAN ('2024-04-01 00:00:00'),
SUBPARTITION `sp202404` VALUES LESS THAN ('2024-05-01 00:00:00'));
insert into sbtest1 values 
(1, 1, '2024-04-11 00:00:00', 'pad'), (1, 2, '2024-04-10 00:00:00', 'pad'), (1, 3, '2024-04-10 00:00:00', 'pad'),
(1, 10, '2024-03-11 00:00:00', 'pad'), (1, 12, '2024-03-10 00:00:00', 'pad'), (1, 13, '2024-03-10 00:00:00', 'pad'),
(1, 100, '2024-01-11 00:00:00', 'pad'), (1, 120, '2024-01-10 00:00:00', 'pad'), (1, 130, '2024-01-10 00:00:00', 'pad'),
(2, 1, '2024-04-11 00:00:00', 'pad'), (2, 2, '2024-04-10 00:00:00', 'pad'), (2, 3, '2024-04-10 00:00:00', 'pad'),
(2, 10, '2024-03-11 00:00:00', 'pad'), (2, 12, '2024-03-10 00:00:00', 'pad'), (2, 13, '2024-03-10 00:00:00', 'pad'),
(3, 100, '2024-01-11 00:00:00', 'pad'), (3, 120, '2024-01-10 00:00:00', 'pad'), (3, 130, '2024-01-10 00:00:00', 'pad');
/*+TDDL: ENABLE_RANGE_SCAN=FALSE*/ select * from sbtest1 where id = 1 and k = 2 order by create_time limit 1;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE*/ select * from sbtest1 where id = 1 and k = 2 order by create_time limit 1;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE RANGE_SCAN_MODE=''*/ select * from sbtest1 where id = 1 and k = 2 order by create_time limit 1;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE RANGE_SCAN_MODE='SERIALIZE'*/ select * from sbtest1 where id = 1 and k = 2 order by create_time limit 1;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE RANGE_SCAN_MODE='NORMAL'*/ select * from sbtest1 where id = 1 and k = 2 order by create_time limit 1;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE RANGE_SCAN_MODE='ADAPTIVE'*/ select * from sbtest1 where id = 1 and k = 2 order by create_time limit 1;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE RANGE_SCAN_MODE='ADAPTIVE' RANGE_SCAN_ADAPTIVE_POLICY='' */ select * from sbtest1 where id = 1 and k = 2 order by create_time limit 1;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE RANGE_SCAN_MODE='ADAPTIVE' RANGE_SCAN_ADAPTIVE_POLICY='CONSTANT' */ select * from sbtest1 where id = 1 and k = 2 order by create_time limit 1;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE RANGE_SCAN_MODE='ADAPTIVE' RANGE_SCAN_ADAPTIVE_POLICY='EXPONENT' */ select * from sbtest1 where id = 1 and k = 2 order by create_time limit 1;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE RANGE_SCAN_MODE='ADAPTIVE' RANGE_SCAN_ADAPTIVE_POLICY='EXPONENT ' */ select * from sbtest1 where id = 1 and k = 2 order by create_time limit 1;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE RANGE_SCAN_SERIALIZE_LIMIT=2*/ select * from sbtest1 where id = 1 and k = 2 order by create_time limit 10;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE RANGE_SCAN_SERIALIZE_LIMIT=20*/ select * from sbtest1 where id = 1 and k = 2 order by create_time limit 10;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE*/ select * from sbtest1 where id = 1 and k = 4 order by create_time limit 1;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE*/ select * from sbtest1 where id = 4 and k = 4 order by create_time limit 1;
/*+TDDL: ENABLE_RANGE_SCAN=TRUE*/ select * from sbtest1 where id = 2 and k = 12 order by create_time limit 1;