storageList: [$dn1, $dn2]
dbName: "test_db1"
testCases:
  - prepareDDls:
      - "drop database if exists test_db1"
      - "create database test_db1 mode = auto locality = 'dn=$dn1,$dn2'"
      - "use test_db1;"
      - "CREATE TABLE order_region(
          order_id int AUTO_INCREMENT primary key,
          country varchar(64),
          city varchar(64),
          order_time datetime not null)
         PARTITION BY LIST COLUMNS(country,city)
         (
           PARTITION p1 VALUES IN (('China','Hangzhou')) LOCALITY='dn=$dn2',
           PARTITION p2 VALUES IN (('China','Shanghai')) LOCALITY='dn=$dn2',
           PARTITION p3 VALUES IN (('China','Beijing')) LOCALITY='dn=$dn1',
           PARTITION p4 VALUES IN (('China','Nanjing')) LOCALITY='dn=$dn1',
           PARTITION p5 VALUES IN (('China','Guangzhou')) LOCALITY='',
           PARTITION p6 VALUES IN (('China','Shenzhen')) LOCALITY='',
           PARTITION p7 VALUES IN (('China','Wuhan')) LOCALITY='',
           PARTITION p8 VALUES IN (('America','New York')) LOCALITY=''
         );"
      - "CREATE TABLE customer_region(
          order_id int AUTO_INCREMENT primary key,
          customer_id int,
          country varchar(64),
          city varchar(64),
          order_time datetime not null)
         PARTITION BY LIST COLUMNS(country,city)
         (
           PARTITION p1 VALUES IN (('China','Hangzhou')) LOCALITY='dn=$dn2',
           PARTITION p2 VALUES IN (('China','Shanghai')) LOCALITY='dn=$dn2',
           PARTITION p3 VALUES IN (('China','Beijing')) LOCALITY='dn=$dn1',
           PARTITION p4 VALUES IN (('China','Nanjing')) LOCALITY='dn=$dn1',
           PARTITION p5 VALUES IN (('China','Guangzhou')) LOCALITY='',
           PARTITION p6 VALUES IN (('China','Shenzhen')) LOCALITY='',
           PARTITION p7 VALUES IN (('China','Wuhan')) LOCALITY='',
           PARTITION p8 VALUES IN (('America','New York')) LOCALITY=''
         );"
      - "CREATE TABLE seller_region(
          seller_id int AUTO_INCREMENT primary key,
          country varchar(64),
          city varchar(64),
          order_time datetime not null)
         PARTITION BY LIST COLUMNS(country,city)
         (
           PARTITION p1 VALUES IN (('China','Hangzhou')) LOCALITY='dn=$dn2',
           PARTITION p2 VALUES IN (('China','Shanghai')) LOCALITY='dn=$dn2',
           PARTITION p3 VALUES IN (('China','Beijing')) LOCALITY='dn=$dn1',
           PARTITION p4 VALUES IN (('China','Nanjing')) LOCALITY='dn=$dn1',
           PARTITION p5 VALUES IN (('China','Guangzhou')) LOCALITY='',
           PARTITION p6 VALUES IN (('China','Shenzhen')) LOCALITY='',
           PARTITION p7 VALUES IN (('China','Wuhan')) LOCALITY='',
           PARTITION p8 VALUES IN (('America','New York')) LOCALITY=''
         ) LOCALITY='dn=$dn1,$dn2';"
      - "CREATE TABLE commondity_region(
          commondity_id int AUTO_INCREMENT primary key,
          country varchar(64),
          city varchar(64),
          order_time datetime not null)
         PARTITION BY LIST COLUMNS(country,city)
         (
           PARTITION p1 VALUES IN (('China','Hangzhou')) LOCALITY='dn=$dn2',
           PARTITION p2 VALUES IN (('China','Shanghai')) LOCALITY='dn=$dn2',
           PARTITION p3 VALUES IN (('China','Beijing')) LOCALITY='dn=$dn1',
           PARTITION p4 VALUES IN (('China','Nanjing')) LOCALITY='dn=$dn1',
           PARTITION p5 VALUES IN (('China','Guangzhou')) LOCALITY='',
           PARTITION p6 VALUES IN (('China','Shenzhen')) LOCALITY='',
           PARTITION p7 VALUES IN (('China','Wuhan')) LOCALITY='',
           PARTITION p8 VALUES IN (('America','New York')) LOCALITY=''
         ) LOCALITY='dn=$dn1,$dn2';"
    cleanupDDls:
      - "use polardbx;"
      - "drop database if exists test_db1;"
    checkActions:
      localityValueCheck:
        - order_region table ""
        - customer_region table ""
        - seller_region table $dn1,$dn2
        - commondity_region table $dn1,$dn2
        - test_db1 database $dn1,$dn2
      tableGroupMatchCheck:
        - order_region,customer_region $tg1 ""
        - seller_region,commondity_region $tg2 $dn1,$dn2
      # second pass;
      # auto generate create table, tablegroup.
      partitionLocalityCheck:
        - $tg1.p1 $dn2
        - $tg1.p2 $dn2
        - $tg1.p3 $dn1
        - $tg1.p4 $dn1
        - $tg1.p5 ""
        - $tg1.p6 ""
        - $tg1.p7 ""
        - $tg1.p8 ""
        - $tg2.p1 $dn2
        - $tg2.p2 $dn2
        - $tg2.p3 $dn1
        - $tg2.p4 $dn1
        - $tg2.p5 ""
        - $tg2.p6 ""
        - $tg2.p7 ""
        - $tg2.p8 ""
      topologyCheck:
        - customer_region.p5 partition $dn1,$dn2
        - customer_region.p6 partition $dn1,$dn2
        - customer_region.p7 partition $dn1,$dn2
        - customer_region.p8 partition $dn1,$dn2
        - order_region.p5 partition $dn1,$dn2
        - order_region.p6 partition $dn1,$dn2
        - order_region.p7 partition $dn1,$dn2
        - order_region.p8 partition $dn1,$dn2
        - seller_region.p5 partition $dn1,$dn2
        - seller_region.p6 partition $dn1,$dn2
        - seller_region.p7 partition $dn1,$dn2
        - seller_region.p8 partition $dn1,$dn2
        - commondity_region.p5 partition $dn1,$dn2
        - commondity_region.p6 partition $dn1,$dn2
        - commondity_region.p7 partition $dn1,$dn2
        - commondity_region.p8 partition $dn1,$dn2
        #  auto generate by locality value check.
        #  auto generate by partition locality check. with each table.

cleanupDDls:
  - "use polardbx;"
  - "drop database if exists test_db1;"
