storageList: [$dn1, $dn2]
dbName: "test_db1"
testCases:
  - prepareDDls:
      - "drop database if exists test_db1"
      - "create database test_db1 mode = auto locality = 'dn=$dn1'"
      - "use test_db1;"
      - "create table t1(x int  AUTO_INCREMENT primary key, y int) partition by hash(x) partitions 4 locality='dn=$dn1';"
      - "create table t2(x int  AUTO_INCREMENT primary key, y int) partition by hash(x) partitions 4 locality='dn=$dn2';"
      - "create table t3(x int  AUTO_INCREMENT primary key, y int) partition by hash(x) partitions 4;"
      - "create table t4(x int  AUTO_INCREMENT primary key, y int) partition by hash(x) partitions 4;"
      - "create table c0(x int  AUTO_INCREMENT primary key, y int) partition by range(x)  (partition p1 values less than (1) locality ='dn=$dn1', partition p2 values less than (100) locality='dn=$dn1',partition p3 values less than (1000) locality='dn=$dn2', partition p4 values less than (MAXVALUE) locality='dn=$dn2');"
      - "create table c1(x int  AUTO_INCREMENT primary key, y int) partition by range(x)  (partition p1 values less than (1) locality ='dn=$dn1', partition p2 values less than (100) locality='dn=$dn1',partition p3 values less than (1000) locality='dn=$dn2', partition p4 values less than (MAXVALUE) locality='dn=$dn2');"
      - "create table c2(x int  AUTO_INCREMENT primary key, y int) partition by range(x)  (partition p1 values less than (1), partition p2 values less than (100) ,partition p3 values less than (1000) , partition p4 values less than (MAXVALUE));"
      - "create table c3(x int  AUTO_INCREMENT primary key, y int) partition by range(x)  (partition p1 values less than (1), partition p2 values less than (100) ,partition p3 values less than (1000) , partition p4 values less than (MAXVALUE));"
      - "create table c4(x int  AUTO_INCREMENT primary key, y int) partition by range(x)  (partition p1 values less than (1) locality ='dn=$dn1', partition p2 values less than (100) locality='dn=$dn1',partition p3 values less than (1000) locality='dn=$dn1', partition p4 values less than (MAXVALUE) locality='dn=$dn2');"
      - "create table c5(x int  AUTO_INCREMENT primary key, y int) partition by range(x)  (partition p1 values less than (1) locality ='dn=$dn1', partition p2 values less than (100) locality='dn=$dn1',partition p3 values less than (1000) locality='dn=$dn1', partition p4 values less than (10000) locality='dn=$dn2', partition p5 values less than (MAXVALUE)) locality='dn=$dn2';"
      - "create table c6(x int  AUTO_INCREMENT primary key, y int) partition by range(x)  (partition p1 values less than (1) locality ='dn=$dn1', partition p2 values less than (100) locality='dn=$dn1',partition p3 values less than (1000) locality='dn=$dn1', partition p4 values less than (10000) locality='dn=$dn2', partition p5 values less than (MAXVALUE)) locality='dn=$dn1';"
      - "create table c7(x int  AUTO_INCREMENT primary key, y int) partition by range(x)  (partition p1 values less than (1) locality ='dn=$dn1', partition p2 values less than (100) locality='dn=$dn1',partition p3 values less than (1000) locality='dn=$dn1', partition p4 values less than (10000) locality='dn=$dn2', partition p5 values less than (MAXVALUE));"
      - "create table l0(x int  AUTO_INCREMENT primary key, y int) partition by LIST COLUMNS(y) (partition p1 values in ((0), (1), (2), (3)) locality = 'dn=$dn1',  partition p2 values in ((4), (5), (6), (7)) locality ='dn=$dn2', partition p3 values in ((8), (9))) locality = 'dn=$dn1,$dn2'; "
      - "create table l1(x int  AUTO_INCREMENT primary key, y int) partition by LIST COLUMNS(y) (partition p1 values in ((0), (1), (2), (3)) locality = 'dn=$dn1',  partition p2 values in ((4), (5), (6), (7)) locality ='dn=$dn2', partition p3 values in ((8), (9))) locality = 'dn=$dn1'; "
      - "create table l2(x int  AUTO_INCREMENT primary key, y int) partition by LIST COLUMNS(y) (partition p1 values in ((0), (1), (2), (3)) locality = 'dn=$dn1',  partition p2 values in ((4), (5), (6), (7)) locality ='dn=$dn2', partition p3 values in ((8), (9))) locality = 'dn=$dn1'; "
      - "create table l3(x int  AUTO_INCREMENT primary key, y int) partition by LIST COLUMNS(y) (partition p1 values in ((0), (1), (2), (3)) locality = 'dn=$dn1',  partition p2 values in ((4), (5), (6), (7)) locality ='dn=$dn2', partition p3 values in ((8), (9))); "
      - "create table l4(x int  AUTO_INCREMENT primary key, y int) partition by LIST COLUMNS(y) (partition p1 values in ((0), (1), (2), (3)) locality = 'dn=$dn1',  partition p2 values in ((4), (5), (6), (7)) locality ='dn=$dn2', partition p3 values in ((8), (9))) locality = 'dn=$dn2'; "
    cleanupDDls:
      - "use polardbx;"
      - "drop database if exists test_db1;"
    checkActions:
      localityValueCheck:
        - t1 table $dn1
        - t2 table $dn2
        - t3 table ""
        - t4 table ""
        - c0 table ""
        - c1 table ""
        - c2 table ""
        - c3 table ""
        - c4 table ""
        - c5 table $dn2
        - c6 table $dn1
        - c7 table ""
        - l0 table $dn1,$dn2
        - l1 table $dn1
        - l2 table $dn1
        - l3 table ""
        - l4 table $dn2
        - test_db1 database $dn1
      tableGroupMatchCheck:
        - t1 $tg0 $dn1
        - t2 $tg2 $dn2
        - t3,t4 $tg3 ""
        - c0,c1 $tg4 ""
        - c2,c3 $tg5 ""
        - c4 $tg6 ""
        - c5 $tg7 $dn2
        - c6 $tg8 $dn1
        - c7 $tg9 ""
        - l0 $tg10 $dn1,$dn2
        - l1,l2 $tg11 $dn1
        - l3 $tg12 ""
        - l4 $tg13 $dn2
      # second pass;
      # auto generate create table, tablegroup.
      partitionLocalityCheck:
        - $tg4.p1 $dn1
        - $tg4.p2 $dn1
        - $tg4.p3 $dn2
        - $tg4.p4 $dn2
        - $tg6.p1 $dn1
        - $tg6.p2 $dn1
        - $tg6.p3 $dn1
        - $tg6.p4 $dn2
        - $tg7.p1 $dn1
        - $tg7.p2 $dn1
        - $tg7.p3 $dn1
        - $tg7.p4 $dn2
        - $tg8.p1 $dn1
        - $tg8.p2 $dn1
        - $tg8.p3 $dn1
        - $tg8.p4 $dn2
        - $tg9.p1 $dn1
        - $tg9.p2 $dn1
        - $tg9.p3 $dn1
        - $tg9.p4 $dn2
        - $tg10.p1 $dn1
        - $tg10.p2 $dn2
        - $tg11.p1 $dn1
        - $tg11.p2 $dn2
        - $tg12.p1 $dn1
        - $tg12.p2 $dn2
        - $tg13.p1 $dn1
        - $tg13.p2 $dn2
      topologyCheck:
        - t3 table $dn1
        - t4 table $dn1
        - c2 table $dn1
        - c3 table $dn1
        - c5.p5 partition $dn2
        - c6.p5 partition $dn1
        - c7.p5 partition $dn1
        - l1.p3 partition $dn1
        - l2.p3 partition $dn1
        - l3.p3 partition $dn1
        - l4.p3 partition $dn2
        #  auto generate by locality value check.
        #  auto generate by partition locality check. with each table.
  - prepareDDls:
      - "drop table t1;"
      - "drop table t2;"
      - "drop table t3;"
      - "drop table t4;"
      - "drop table c0;"
      - "drop table c1;"
      - "drop table c2;"
      - "drop table c3;"
      - "drop table c4;"
      - "drop table c5;"
      - "drop table c6;"
      - "drop table c7;"
      - "drop table l1;"
      - "drop table l2;"
      - "drop table l3;"
      - "drop table l4;"
cleanupDDls:
  - "use polardbx;"
  - "drop database if exists test_db1;"
