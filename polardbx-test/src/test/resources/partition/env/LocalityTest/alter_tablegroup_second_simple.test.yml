storageList: [$dn1, $dn2]
# modify partition, add partition, drop partition, split partition, split partition by hot value
dbName: "test_db1"
testCases:
  - prepareDDls:
      - "drop database if exists test_db1"
      - "create database test_db1 mode = auto locality = 'dn=$dn1,$dn2'"
      - "use test_db1;"
      - "
      create table t0(x int  AUTO_INCREMENT primary key, y int) partition by key(x, y) partitions 4 locality = 'dn=$dn1';
      "
      - "
      create table l0(x int  AUTO_INCREMENT primary key, y int) partition by LIST COLUMNS(y) (partition p1 values in ((0), (1), (2), (3)) locality = 'dn=polardbx-storage-1-master',  partition p2 values in ((4), (5),
                                     (6), (7)) locality ='dn=polardbx-storage-0-master', partition p3 values in ((10), (20), (30), (40)) locality = 'dn=polardbx-storage-1-master');
      "
    cleanupDDls:
      - "use polardbx;"
      - "drop database if exists test_db1;"
    checkActions:
      localityValueCheck:
        - t0 table $dn1
        - l0 table ""
        - test_db1 database $dn1,$dn2
      tableGroupMatchCheck:
        - t0 $tg1 $dn1
        - l0 $tg2 ""
      # second pass;
      # auto generate create table, tablegroup.
      partitionLocalityCheck:
        - $tg2.p1 $dn2
        - $tg2.p2 $dn1
        - $tg2.p3 $dn2
      topologyCheck:
        #  auto generate by locality value check.
        #  auto generate by partition locality check. with each table.

# add partition, remove partition, rename partition
  - prepareDDls:
      - " alter tablegroup $tg1 split into hotp partitions 3 by hot value(10);"
      - " alter tablegroup $tg2 modify partition p1 add values((8), (9));"
      - " alter tablegroup $tg2 modify partition p2 drop values ((4), (5));"
      - " alter tablegroup $tg2 split partition p3 into (partition p4 values in ((10), (20)),  partition p5 values in ((30), (40))); "
      - " alter tablegroup $tg2 add partition (partition p10 values in ((100), (1000))); "
    cleanupDDls:
      - "use polardbx;"
      - "drop database if exists test_db1;"
    checkActions:
      localityValueCheck:
        - t0 table $dn1
        - l0 table ""
        - test_db1 database $dn1,$dn2
      tableGroupMatchCheck:
        - t0 $tg1 $dn1
        - l0 $tg2 ""
      # second pass;
      # auto generate create table, tablegroup.
      partitionLocalityCheck:
        - $tg1.p1 ""
        - $tg1.p2 ""
        - $tg1.p5 ""
        - $tg1.hot_p1 ""
        - $tg1.hot_p2 ""
        - $tg1.hot_p3 ""
        - $tg2.p1 $dn2
        - $tg2.p2 $dn1
        - $tg2.p4 $dn2
        - $tg2.p5 $dn2
        - $tg2.p10 ""
      topologyCheck:
cleanupDDls:
  - "use polardbx;"
  - "drop database if exists test_db1;"
