storageList: [$dn1, $dn2]
dbName: "test_db1"
testCases:
  - prepareDDls:
      - "drop database if exists test_db1"
      - "create database test_db1 mode = auto locality = 'dn=$dn1,$dn2'"
      - "use test_db1;"
      - "
      create table c0(x int  AUTO_INCREMENT primary key, y int) partition by range(x)  (partition p1 values less than (1) locality ='dn=$dn1', partition p2 values less than (100) locality='dn=$dn1',partition p3 values less than (1000) locality='dn=$dn2', partition p4 values less than (MAXVALUE) locality='dn=$dn2');
      "
      - " alter table c0 remove partitioning "
      - "
      create table c1(x int  AUTO_INCREMENT primary key, y int) partition by range(x)  (partition p1 values less than (1) locality ='dn=$dn1', partition p2 values less than (100) locality='dn=$dn1',partition p3 values less than (1000) locality='dn=$dn2', partition p4 values less than (MAXVALUE) locality='dn=$dn2');
      "
      - "alter table c1 broadcast"
      - "
      create table s1(x int  AUTO_INCREMENT primary key, y int) single locality='dn=$dn1';
      "
      - "alter table s1 broadcast"
      - "create table s2(x int  AUTO_INCREMENT primary key, y int) single locality='dn=$dn1';"
      - "
      alter table s2 partition by range(x) (partition p1 values less than (1), partition p2 values less than (100), partition p3 values less than (1000), partition p4 values less than (MAXVALUE));
      "
    cleanupDDls:
      - "use polardbx;"
      - "drop database if exists test_db1;"
    checkActions:
      localityValueCheck:
        - c0 table ""
        - c1 table ""
        - s1 table ""
        - s2 table ""
        - test_db1 database $dn1,$dn2
      tableGroupMatchCheck:
        - c0 $tg1 "" #single
        - c1,s1 $tg2 "" #broadcast
        - s2 $tg3 "" #partition
      # second pass;
      # auto generate create table, tablegroup.
      partitionLocalityCheck:
      topologyCheck:
        - s2.p1 partition $dn1
        - s2.p2 partition $dn1
        - s2.p3 partition $dn1
        - s2.p4 partition $dn1
        - c1.p1 partition ""
        - c1.p2 partition ""
        - s1.p1 partition ""
        - s1.p2 partition ""
        #  auto generate by locality value check.
        #  auto generate by partition locality check. with each table.

cleanupDDls:
  - "use polardbx;"
  - "drop database if exists test_db1;"
